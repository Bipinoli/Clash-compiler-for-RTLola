/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.6.4. DO NOT MODIFY.
*/
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input  eta // clock
    , input  eta1 // reset
    , input  eta2 // enable
    , input signed [63:0] c$arg

      // Outputs
    , output wire signed [63:0] result_0
    , output wire signed [63:0] result_1
    , output wire signed [63:0] result_2
    , output wire signed [63:0] result_3
    , output wire signed [63:0] result_4
    );
  // rough/rough.hs:14:1-78
  reg [319:0] c$ds_app_arg = {64'sd0,   64'sd0,   64'sd0,   64'sd0,   64'sd0};
  wire [639:0] result_10;
  // rough/rough.hs:10:1-2
  wire [319:0] nextState;
  wire [383:0] nextState_projection;
  wire [319:0] result;

  // register begin
  always @(posedge eta or  posedge  eta1) begin : c$ds_app_arg_register
    if ( eta1) begin
      c$ds_app_arg <= {64'sd0,   64'sd0,   64'sd0,   64'sd0,   64'sd0};
    end else if (eta2) begin
      c$ds_app_arg <= result_10[639:320];
    end
  end
  // register end

  assign result = result_10[319:0];

  assign result_10 = {nextState,   nextState};

  assign nextState_projection = ({c$arg,c$ds_app_arg});

  assign nextState = nextState_projection[383:64];

  assign result_0 = $signed(result[319:256]);

  assign result_1 = $signed(result[255:192]);

  assign result_2 = $signed(result[191:128]);

  assign result_3 = $signed(result[127:64]);

  assign result_4 = $signed(result[63:0]);


endmodule

