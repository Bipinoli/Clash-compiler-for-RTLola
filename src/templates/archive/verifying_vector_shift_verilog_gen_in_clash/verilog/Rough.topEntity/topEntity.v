/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.8.2. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  eta // clock
    , input wire  eta1 // reset
    , input wire  eta2 // enable
    , input wire signed [63:0] c$arg

      // Outputs
    , output wire signed [63:0] result_0
    , output wire signed [63:0] result_1
    , output wire signed [63:0] result_2
    , output wire signed [63:0] result_3
    , output wire signed [63:0] result_4
    , output wire signed [63:0] result_5
    );
  // rough.hs:14:1-78
  reg [383:0] c$ds_app_arg = {64'sd0,   64'sd0,   64'sd0,   64'sd0,   64'sd0,   64'sd0};
  wire [767:0] result_12;
  // rough.hs:10:1-2
  wire [383:0] nextState;
  wire [447:0] nextState_projection;
  wire [383:0] result;

  // register begin
  always @(posedge eta or  posedge  eta1) begin : c$ds_app_arg_register
    if ( eta1) begin
      c$ds_app_arg <= {64'sd0,   64'sd0,   64'sd0,   64'sd0,   64'sd0,   64'sd0};
    end else if (eta2) begin
      c$ds_app_arg <= result_12[767:384];
    end
  end
  // register end

  assign result = result_12[383:0];

  assign result_12 = {nextState,   nextState};

  assign nextState_projection = ({c$arg,c$ds_app_arg});

  assign nextState = nextState_projection[447:64];

  assign result_0 = $signed(result[383:320]);

  assign result_1 = $signed(result[319:256]);

  assign result_2 = $signed(result[255:192]);

  assign result_3 = $signed(result[191:128]);

  assign result_4 = $signed(result[127:64]);

  assign result_5 = $signed(result[63:0]);


endmodule

