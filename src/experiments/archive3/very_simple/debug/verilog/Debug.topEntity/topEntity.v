/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.8.2. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  clk // clock
    , input wire  rst // reset
    , input wire  en // enable
    , input wire  input_0
    , input wire  input_1

      // Outputs
    , output wire signed [63:0] cursor
    );
  // debug.hs:7:1-72
  reg signed [63:0] cursor_1 = (64'sd0);
  // debug.hs:7:1-72
  wire signed [63:0] c$cursor_case_alt;
  // debug.hs:7:1-72
  wire  push;
  // debug.hs:7:1-72
  wire signed [63:0] c$cursor_case_alt_0;
  // debug.hs:7:1-72
  wire signed [63:0] x;
  // debug.hs:7:1-72
  wire signed [63:0] c$cursor_case_alt_1;
  // debug.hs:7:1-72
  wire  pop;
  wire [1:0] r_input;

  assign r_input = {input_0,   input_1};

  // register begin
  always @(posedge clk or  posedge  rst) begin : cursor_1_register
    if ( rst) begin
      cursor_1 <= (64'sd0);
    end else if (en) begin
      cursor_1 <= c$cursor_case_alt;
    end
  end
  // register end

  assign c$cursor_case_alt = push ? c$cursor_case_alt_0 : c$cursor_case_alt_1;

  assign push = r_input[1:1];

  assign c$cursor_case_alt_0 = pop ? ((x + 64'sd1)) : cursor_1;

  assign x = cursor_1;

  assign c$cursor_case_alt_1 = pop ? ((x - 64'sd1)) : cursor_1;

  assign pop = r_input[0:0];

  assign cursor = cursor_1;


endmodule

