`timescale 1us/1ns
module testbench;
    reg clk;
    reg rst;
    reg en;

    
    {{#each inputs}}
    reg {{this.datatype}} input_{{@index}};
    reg new_input_{{@index}};
    {{/each}}

    {{#each outputs}}
    wire {{this.datatype}} output_{{@index}};
    wire output_{{@index}}_aktv;
    {{/each}}

    {{#if debug}}
    wire signed [63:0] llc_tag;
    wire llc_to_pop;
    wire llc_is_valid_event;
    wire q_push_valid;
    wire q_pop_valid;
    {{/if}}

    topEntity monitor (
                        clk, rst, en,
                        {{#each inputs}}
                        input_{{@index}}, new_input_{{@index}},
                        {{/each}}
                        {{#each outputs}}
                        output_{{@index}}, output_{{@index}}_aktv{{#unless @last}},{{/unless}}
                        {{/each}}
                        {{#if debug}}
                        ,llc_tag, llc_to_pop, llc_is_valid_event, q_push_valid, q_pop_valid 
                        {{/if}}
                       );

    always begin
        #1 clk = ~clk;
    end

    initial begin
        clk = 1;
        rst = 0;
        en = 1;
        
        $printtimescale(testbench);
        $dumpvars(0, testbench);

        {{#each trace_data}}
        #{{this.time}};
        @(posedge clk);
            {{#each this.inputs}}
        new_input_{{@index}} = {{this.new_input}};
        input_{{@index}} = {{this.input_value}};
            {{/each}}
        @(posedge clk);
            {{#each this.inputs}}
        new_input_{{@index}} = 0;
        input_{{@index}} = 0;
            {{/each}}

        {{/each}}

        #40;
        $finish; 
    end

endmodule

