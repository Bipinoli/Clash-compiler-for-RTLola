
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os)


-- Running command `
ghdl --latches --std=08 --work=work topEntity;
synth -top topEntity;
stat;
' --

1. Executing GHDL.
Importing module topEntity.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \topEntity

2.1.2. Analyzing design hierarchy..
Top module:  \topEntity
Removed 0 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~21 debug messages>

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 9 unused cells and 479 unused wires.
<suppressed ~16 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
Checking module topEntity...
Found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux \2799.
Removed 1 multiplexer ports.
<suppressed ~270 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
    New ctrl vector for $pmux cell \1794: $auto$ghdl.cc:806:import_module$398
    New ctrl vector for $pmux cell \1859: $auto$ghdl.cc:806:import_module$411
    New ctrl vector for $pmux cell \1990: $auto$ghdl.cc:806:import_module$438
    New ctrl vector for $pmux cell \2776: $auto$ghdl.cc:806:import_module$614
    New ctrl vector for $pmux cell \2780: $auto$ghdl.cc:806:import_module$614
    New ctrl vector for $pmux cell \2805: $auto$ghdl.cc:806:import_module$614
    New ctrl vector for $pmux cell \2886: $auto$ghdl.cc:806:import_module$614
    New ctrl vector for $pmux cell \718: $auto$ghdl.cc:806:import_module$145
  Optimizing cells in module \topEntity.
Performed a total of 8 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.6.6. Executing OPT_DFF pass (perform DFF optimizations).

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~4 debug messages>

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~269 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.6.13. Executing OPT_DFF pass (perform DFF optimizations).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.6.16. Rerunning OPT passes. (Maybe there is more to do..)

2.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~269 debug messages>

2.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.6.20. Executing OPT_DFF pass (perform DFF optimizations).

2.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.6.23. Finished OPT passes. (There is nothing left to do.)

2.7. Executing FSM pass (extract and optimize FSM).

2.7.1. Executing FSM_DETECT pass (finding FSMs in design).

2.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.8. Executing OPT pass (performing simple optimizations).

2.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~269 debug messages>

2.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on \996 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_6_res_10, Q = \iteratei_10.r_block_287.\c$bb_res_res_93\).
Adding EN signal on \988 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_5_res_10, Q = \iteratei_10.iteratei_ho1_6_res_10).
Adding EN signal on \980 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_4_res_10, Q = \iteratei_10.iteratei_ho1_5_res_10).
Adding EN signal on \972 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_3_res_10, Q = \iteratei_10.iteratei_ho1_4_res_10).
Adding EN signal on \964 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_2_res_10, Q = \iteratei_10.iteratei_ho1_3_res_10).
Adding EN signal on \956 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_1_res_10, Q = \iteratei_10.iteratei_ho1_2_res_10).
Adding EN signal on \948 ($dff) from module topEntity (D = \iteratei_10.iteratei_ho1_0_res_10, Q = \iteratei_10.iteratei_ho1_1_res_10).
Adding EN signal on \940 ($dff) from module topEntity (D = \\c$app_arg_43\ [135], Q = \iteratei_10.iteratei_ho1_0_res_10).
Adding EN signal on \928 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_6_res_9, Q = \iteratei_9.r_block_279.\c$bb_res_res_85\).
Adding EN signal on \920 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_5_res_9, Q = \iteratei_9.iteratei_ho1_6_res_9).
Adding EN signal on \912 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_4_res_9, Q = \iteratei_9.iteratei_ho1_5_res_9).
Adding EN signal on \904 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_3_res_9, Q = \iteratei_9.iteratei_ho1_4_res_9).
Adding EN signal on \896 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_2_res_9, Q = \iteratei_9.iteratei_ho1_3_res_9).
Adding EN signal on \888 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_1_res_9, Q = \iteratei_9.iteratei_ho1_2_res_9).
Adding EN signal on \880 ($dff) from module topEntity (D = \iteratei_9.iteratei_ho1_0_res_9, Q = \iteratei_9.iteratei_ho1_1_res_9).
Adding EN signal on \872 ($dff) from module topEntity (D = \\c$app_arg_43\ [136], Q = \iteratei_9.iteratei_ho1_0_res_9).
Adding EN signal on \855 ($dff) from module topEntity (D = \iteratei_8.iteratei_ho1_5_res_8, Q = \iteratei_8.r_block_271.\c$bb_res_res_77\).
Adding EN signal on \847 ($dff) from module topEntity (D = \iteratei_8.iteratei_ho1_4_res_8, Q = \iteratei_8.iteratei_ho1_5_res_8).
Adding EN signal on \839 ($dff) from module topEntity (D = \iteratei_8.iteratei_ho1_3_res_8, Q = \iteratei_8.iteratei_ho1_4_res_8).
Adding EN signal on \831 ($dff) from module topEntity (D = \iteratei_8.iteratei_ho1_2_res_8, Q = \iteratei_8.iteratei_ho1_3_res_8).
Adding EN signal on \823 ($dff) from module topEntity (D = \iteratei_8.iteratei_ho1_1_res_8, Q = \iteratei_8.iteratei_ho1_2_res_8).
Adding EN signal on \815 ($dff) from module topEntity (D = \iteratei_8.iteratei_ho1_0_res_8, Q = \iteratei_8.iteratei_ho1_1_res_8).
Adding EN signal on \807 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_8.iteratei_ho1_0_res_8).
Adding EN signal on \790 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_6_res_7, Q = \iteratei_7.r_block_264.\c$bb_res_res_70\).
Adding EN signal on \782 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_5_res_7, Q = \iteratei_7.iteratei_ho1_6_res_7).
Adding EN signal on \774 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_4_res_7, Q = \iteratei_7.iteratei_ho1_5_res_7).
Adding EN signal on \766 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_3_res_7, Q = \iteratei_7.iteratei_ho1_4_res_7).
Adding EN signal on \758 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_2_res_7, Q = \iteratei_7.iteratei_ho1_3_res_7).
Adding EN signal on \750 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_1_res_7, Q = \iteratei_7.iteratei_ho1_2_res_7).
Adding EN signal on \742 ($dff) from module topEntity (D = \iteratei_7.iteratei_ho1_0_res_7, Q = \iteratei_7.iteratei_ho1_1_res_7).
Adding EN signal on \734 ($dff) from module topEntity (D = \\c$app_arg_43\ [137], Q = \iteratei_7.iteratei_ho1_0_res_7).
Adding EN signal on \674 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_6_res_6, Q = \iteratei_6.r_block_256.\c$bb_res_res_62\).
Adding EN signal on \666 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_5_res_6, Q = \iteratei_6.iteratei_ho1_6_res_6).
Adding EN signal on \658 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_4_res_6, Q = \iteratei_6.iteratei_ho1_5_res_6).
Adding EN signal on \650 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_3_res_6, Q = \iteratei_6.iteratei_ho1_4_res_6).
Adding EN signal on \642 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_2_res_6, Q = \iteratei_6.iteratei_ho1_3_res_6).
Adding EN signal on \634 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_1_res_6, Q = \iteratei_6.iteratei_ho1_2_res_6).
Adding EN signal on \626 ($dff) from module topEntity (D = \iteratei_6.iteratei_ho1_0_res_6, Q = \iteratei_6.iteratei_ho1_1_res_6).
Adding EN signal on \618 ($dff) from module topEntity (D = \\c$app_arg_43\ [138], Q = \iteratei_6.iteratei_ho1_0_res_6).
Adding EN signal on \606 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_6_res_5, Q = \iteratei_5.r_block_248.\c$bb_res_res_54\).
Adding EN signal on \598 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_5_res_5, Q = \iteratei_5.iteratei_ho1_6_res_5).
Adding EN signal on \590 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_4_res_5, Q = \iteratei_5.iteratei_ho1_5_res_5).
Adding EN signal on \582 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_3_res_5, Q = \iteratei_5.iteratei_ho1_4_res_5).
Adding EN signal on \574 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_2_res_5, Q = \iteratei_5.iteratei_ho1_3_res_5).
Adding EN signal on \566 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_1_res_5, Q = \iteratei_5.iteratei_ho1_2_res_5).
Adding EN signal on \558 ($dff) from module topEntity (D = \iteratei_5.iteratei_ho1_0_res_5, Q = \iteratei_5.iteratei_ho1_1_res_5).
Adding EN signal on \550 ($dff) from module topEntity (D = \\c$ds9_case_alt\, Q = \iteratei_5.iteratei_ho1_0_res_5).
Adding EN signal on \538 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_6_res_4, Q = \iteratei_4.r_block_240.\c$bb_res_res_46\).
Adding EN signal on \530 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_5_res_4, Q = \iteratei_4.iteratei_ho1_6_res_4).
Adding EN signal on \522 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_4_res_4, Q = \iteratei_4.iteratei_ho1_5_res_4).
Adding EN signal on \514 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_3_res_4, Q = \iteratei_4.iteratei_ho1_4_res_4).
Adding EN signal on \506 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_2_res_4, Q = \iteratei_4.iteratei_ho1_3_res_4).
Adding EN signal on \498 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_1_res_4, Q = \iteratei_4.iteratei_ho1_2_res_4).
Adding EN signal on \490 ($dff) from module topEntity (D = \iteratei_4.iteratei_ho1_0_res_4, Q = \iteratei_4.iteratei_ho1_1_res_4).
Adding EN signal on \482 ($dff) from module topEntity (D = \\c$ds10_case_alt\, Q = \iteratei_4.iteratei_ho1_0_res_4).
Adding EN signal on \470 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_6_res_3, Q = \iteratei_3.r_block_232.\c$bb_res_res_38\).
Adding EN signal on \462 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_5_res_3, Q = \iteratei_3.iteratei_ho1_6_res_3).
Adding EN signal on \454 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_4_res_3, Q = \iteratei_3.iteratei_ho1_5_res_3).
Adding EN signal on \446 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_3_res_3, Q = \iteratei_3.iteratei_ho1_4_res_3).
Adding EN signal on \438 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_2_res_3, Q = \iteratei_3.iteratei_ho1_3_res_3).
Adding EN signal on \430 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_1_res_3, Q = \iteratei_3.iteratei_ho1_2_res_3).
Adding EN signal on \422 ($dff) from module topEntity (D = \iteratei_3.iteratei_ho1_0_res_3, Q = \iteratei_3.iteratei_ho1_1_res_3).
Adding EN signal on \414 ($dff) from module topEntity (D = \\c$ds11_case_alt\, Q = \iteratei_3.iteratei_ho1_0_res_3).
Adding EN signal on \402 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_6_res_2, Q = \iteratei_2.r_block_224.\c$bb_res_res_30\).
Adding EN signal on \394 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_5_res_2, Q = \iteratei_2.iteratei_ho1_6_res_2).
Adding EN signal on \386 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_4_res_2, Q = \iteratei_2.iteratei_ho1_5_res_2).
Adding EN signal on \378 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_3_res_2, Q = \iteratei_2.iteratei_ho1_4_res_2).
Adding EN signal on \370 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_2_res_2, Q = \iteratei_2.iteratei_ho1_3_res_2).
Adding EN signal on \362 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_1_res_2, Q = \iteratei_2.iteratei_ho1_2_res_2).
Adding EN signal on \354 ($dff) from module topEntity (D = \iteratei_2.iteratei_ho1_0_res_2, Q = \iteratei_2.iteratei_ho1_1_res_2).
Adding EN signal on \346 ($dff) from module topEntity (D = \\c$app_arg_43\ [145], Q = \iteratei_2.iteratei_ho1_0_res_2).
Adding EN signal on \334 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_6_res_1, Q = \iteratei_1.r_block_216.\c$bb_res_res_22\).
Adding EN signal on \326 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_5_res_1, Q = \iteratei_1.iteratei_ho1_6_res_1).
Adding EN signal on \318 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_4_res_1, Q = \iteratei_1.iteratei_ho1_5_res_1).
Adding EN signal on \310 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_3_res_1, Q = \iteratei_1.iteratei_ho1_4_res_1).
Adding EN signal on \302 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_2_res_1, Q = \iteratei_1.iteratei_ho1_3_res_1).
Adding EN signal on \3013 ($adff) from module topEntity (D = \\c$cursor_case_alt\, Q = \cursor).
Adding EN signal on \3011 ($adff) from module topEntity (D = \\c$buffer_case_alt_0\, Q = \buffer).
Adding EN signal on \3007 ($adff) from module topEntity (D = \\c$case_alt_5\, Q = \\c$app_arg_44\).
Adding EN signal on \3005 ($adff) from module topEntity (D = \\c$case_alt\, Q = \\c$app_arg_43\).
Adding EN signal on \3003 ($adff) from module topEntity (D = \result_127, Q = \towait).
Adding EN signal on \3001 ($adff) from module topEntity (D = \result_125, Q = \t_27).
Adding EN signal on \2999 ($adff) from module topEntity (D = \result_123, Q = \t_26).
Adding EN signal on \2997 ($adff) from module topEntity (D = \result_121, Q = \t_25).
Adding EN signal on \2995 ($adff) from module topEntity (D = \result_119, Q = \t_24).
Adding EN signal on \2993 ($adff) from module topEntity (D = \result_117, Q = \t_23).
Adding EN signal on \2991 ($adff) from module topEntity (D = \result_115, Q = \t_22).
Adding EN signal on \2989 ($adff) from module topEntity (D = \result_113, Q = \t_21).
Adding EN signal on \2987 ($adff) from module topEntity (D = \result_111, Q = \t_20).
Adding EN signal on \2985 ($adff) from module topEntity (D = \result_109, Q = \t_19).
Adding EN signal on \2983 ($adff) from module topEntity (D = \result_107, Q = \t_18).
Adding EN signal on \2981 ($adff) from module topEntity (D = \result_105, Q = \t_17).
Adding EN signal on \2979 ($adff) from module topEntity (D = \result_103, Q = \t_16).
Adding EN signal on \2977 ($adff) from module topEntity (D = \result_101, Q = \t_15).
Adding EN signal on \2975 ($adff) from module topEntity (D = \result_99, Q = \t_14).
Adding EN signal on \2973 ($adff) from module topEntity (D = { \t_13 [71:8] \iteratei_31.r_block_376.\c$bb_res_res_182\ [95:88] }, Q = \result_90).
Adding EN signal on \2971 ($adff) from module topEntity (D = { \t_12 [71:8] \iteratei_29.r_block_365.\c$bb_res_res_171\ [103:96] }, Q = \result_86).
Adding EN signal on \2969 ($dff) from module topEntity (D = \\c$app_arg_43\ [63:0], Q = \\c$input0Win_app_arg\).
Adding EN signal on \2967 ($adff) from module topEntity (D = { \result_83 [143:0] \\c$input0Win_app_arg\ \t_27 }, Q = \result_83).
Adding EN signal on \2963 ($adff) from module topEntity (D = { \t_10 [71:8] \iteratei_34.r_block_385.\c$bb_res_res_191\ [31:24] }, Q = \result_75).
Adding EN signal on \2961 ($adff) from module topEntity (D = { \result_72 [71:0] \t_9 [71:8] \iteratei_34.r_block_385.\c$bb_res_res_191\ [47:40] }, Q = \result_72).
Adding EN signal on \2957 ($adff) from module topEntity (D = { \t_8 [71:8] \t_23 }, Q = \result_68).
Adding EN signal on \2953 ($adff) from module topEntity (D = { \t_7 [71:8] \iteratei_34.r_block_385.\c$bb_res_res_191\ [39:32] }, Q = \result_63).
Adding EN signal on \2951 ($adff) from module topEntity (D = { \t_6 [71:8] \iteratei_35.r_block_386.\c$bb_res_res_192\ [23:16] }, Q = \result_61).
Adding EN signal on \2949 ($dff) from module topEntity (D = \\c$app_arg_43\ [128:65], Q = \\c$input1Win_app_arg\).
Adding EN signal on \2947 ($adff) from module topEntity (D = { \\c$input1Win_app_arg\ \t_26 }, Q = \result_58).
Adding EN signal on \2945 ($adff) from module topEntity (D = { \t_5 [71:8] \t_22 }, Q = \result_54).
Adding EN signal on \2943 ($adff) from module topEntity (D = { \t_4 [71:8] \iteratei_35.r_block_386.\c$bb_res_res_192\ [71:64] }, Q = \result_51).
Adding EN signal on \2941 ($adff) from module topEntity (D = \iteratei_31.r_block_376.\c$bb_res_res_182\ [127:120], Q = \window_0 [7:0]).
Adding EN signal on \2941 ($adff) from module topEntity (D = \result_41 [127:64], Q = \window_0 [135:72]).
Adding EN signal on \2941 ($adff) from module topEntity (D = \result_41 [63:0], Q = \window_0 [71:8]).
Adding EN signal on \294 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_1_res_1, Q = \iteratei_1.iteratei_ho1_2_res_1).
Adding EN signal on \2939 ($adff) from module topEntity (D = { \t_2 [71:8] \iteratei_29.r_block_365.\c$bb_res_res_171\ [111:104] }, Q = \result_39).
Adding EN signal on \2937 ($adff) from module topEntity (D = { \t_1 [71:8] \iteratei_33.r_block_383.\c$bb_res_res_189\ [79:72] }, Q = \result_37).
Adding EN signal on \2935 ($adff) from module topEntity (D = { \t_0 [71:8] \iteratei_32.r_block_380.\c$bb_res_res_186\ [63:56] }, Q = \result_35).
Adding EN signal on \2933 ($adff) from module topEntity (D = \iteratei_31.r_block_376.\c$bb_res_res_182\ [119:112], Q = \window [7:0]).
Adding EN signal on \2933 ($adff) from module topEntity (D = \result_33 [127:64], Q = \window [135:72]).
Adding EN signal on \2933 ($adff) from module topEntity (D = \result_33 [63:0], Q = \window [71:8]).
Adding EN signal on \2929 ($adff) from module topEntity (D = \result_14, Q = \result_15).
Adding EN signal on \2927 ($adff) from module topEntity (D = \result_12, Q = \result_13).
Adding EN signal on \286 ($dff) from module topEntity (D = \iteratei_1.iteratei_ho1_0_res_1, Q = \iteratei_1.iteratei_ho1_1_res_1).
Adding EN signal on \278 ($dff) from module topEntity (D = \\c$app_arg_43\ [146], Q = \iteratei_1.iteratei_ho1_0_res_1).
Adding EN signal on \266 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_6_res_0, Q = \iteratei_0.r_block_208.\c$bb_res_res_14\).
Adding EN signal on \258 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_5_res_0, Q = \iteratei_0.iteratei_ho1_6_res_0).
Adding EN signal on \2511 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_35.r_block_386.\c$bb_res_res_192\).
Adding EN signal on \250 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_4_res_0, Q = \iteratei_0.iteratei_ho1_5_res_0).
Adding EN signal on \2491 ($dff) from module topEntity (D = \iteratei_34.iteratei_ho1_0_res_34, Q = \iteratei_34.r_block_385.\c$bb_res_res_191\).
Adding EN signal on \2483 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_34.iteratei_ho1_0_res_34).
Adding EN signal on \2463 ($dff) from module topEntity (D = \iteratei_33.iteratei_ho1_1_res_29, Q = \iteratei_33.r_block_383.\c$bb_res_res_189\).
Adding EN signal on \2455 ($dff) from module topEntity (D = \iteratei_33.iteratei_ho1_0_res_33, Q = \iteratei_33.iteratei_ho1_1_res_29).
Adding EN signal on \2447 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_33.iteratei_ho1_0_res_33).
Adding EN signal on \2426 ($dff) from module topEntity (D = \iteratei_32.iteratei_ho1_2_res_26, Q = \iteratei_32.r_block_380.\c$bb_res_res_186\).
Adding EN signal on \242 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_3_res_0, Q = \iteratei_0.iteratei_ho1_4_res_0).
Adding EN signal on \2418 ($dff) from module topEntity (D = \iteratei_32.iteratei_ho1_1_res_28, Q = \iteratei_32.iteratei_ho1_2_res_26).
Adding EN signal on \2410 ($dff) from module topEntity (D = \iteratei_32.iteratei_ho1_0_res_32, Q = \iteratei_32.iteratei_ho1_1_res_28).
Adding EN signal on \2402 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_32.iteratei_ho1_0_res_32).
Adding EN signal on \2380 ($dff) from module topEntity (D = \iteratei_31.iteratei_ho1_3_res_22, Q = \iteratei_31.r_block_376.\c$bb_res_res_182\).
Adding EN signal on \2372 ($dff) from module topEntity (D = \iteratei_31.iteratei_ho1_2_res_25, Q = \iteratei_31.iteratei_ho1_3_res_22).
Adding EN signal on \2364 ($dff) from module topEntity (D = \iteratei_31.iteratei_ho1_1_res_27, Q = \iteratei_31.iteratei_ho1_2_res_25).
Adding EN signal on \2356 ($dff) from module topEntity (D = \iteratei_31.iteratei_ho1_0_res_31, Q = \iteratei_31.iteratei_ho1_1_res_27).
Adding EN signal on \2348 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_31.iteratei_ho1_0_res_31).
Adding EN signal on \234 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_2_res_0, Q = \iteratei_0.iteratei_ho1_3_res_0).
Adding EN signal on \2331 ($dff) from module topEntity (D = \iteratei_30.iteratei_ho1_4_res_20, Q = \b_5).
Adding EN signal on \2323 ($dff) from module topEntity (D = \iteratei_30.iteratei_ho1_3_res_21, Q = \iteratei_30.iteratei_ho1_4_res_20).
Adding EN signal on \2315 ($dff) from module topEntity (D = \iteratei_30.iteratei_ho1_2_res_24, Q = \iteratei_30.iteratei_ho1_3_res_21).
Adding EN signal on \2307 ($dff) from module topEntity (D = \iteratei_30.iteratei_ho1_1_res_26, Q = \iteratei_30.iteratei_ho1_2_res_24).
Adding EN signal on \2299 ($dff) from module topEntity (D = \iteratei_30.iteratei_ho1_0_res_30, Q = \iteratei_30.iteratei_ho1_1_res_26).
Adding EN signal on \2291 ($dff) from module topEntity (D = \\c$app_arg_43\ [146], Q = \iteratei_30.iteratei_ho1_0_res_30).
Adding EN signal on \226 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_1_res_0, Q = \iteratei_0.iteratei_ho1_2_res_0).
Adding EN signal on \2248 ($dff) from module topEntity (D = \iteratei_29.iteratei_ho1_4_res_19, Q = \iteratei_29.r_block_365.\c$bb_res_res_171\).
Adding EN signal on \2240 ($dff) from module topEntity (D = \iteratei_29.iteratei_ho1_3_res_20, Q = \iteratei_29.iteratei_ho1_4_res_19).
Adding EN signal on \2232 ($dff) from module topEntity (D = \iteratei_29.iteratei_ho1_2_res_23, Q = \iteratei_29.iteratei_ho1_3_res_20).
Adding EN signal on \2224 ($dff) from module topEntity (D = \iteratei_29.iteratei_ho1_1_res_25, Q = \iteratei_29.iteratei_ho1_2_res_23).
Adding EN signal on \2216 ($dff) from module topEntity (D = \iteratei_29.iteratei_ho1_0_res_29, Q = \iteratei_29.iteratei_ho1_1_res_25).
Adding EN signal on \2208 ($dff) from module topEntity (D = { \t_25 \t_19 \t_14 \t_15 \t_16 \t_22 \t_17 \t_18 \t_19 \t_23 \t_24 \t_20 \t_25 \t_21 \t_26 \t_27 }, Q = \iteratei_29.iteratei_ho1_0_res_29).
Adding EN signal on \2191 ($dff) from module topEntity (D = \iteratei_28.iteratei_ho1_5_res_17, Q = \b_4).
Adding EN signal on \2183 ($dff) from module topEntity (D = \iteratei_28.iteratei_ho1_4_res_18, Q = \iteratei_28.iteratei_ho1_5_res_17).
Adding EN signal on \218 ($dff) from module topEntity (D = \iteratei_0.iteratei_ho1_0_res_0, Q = \iteratei_0.iteratei_ho1_1_res_0).
Adding EN signal on \2175 ($dff) from module topEntity (D = \iteratei_28.iteratei_ho1_3_res_19, Q = \iteratei_28.iteratei_ho1_4_res_18).
Adding EN signal on \2167 ($dff) from module topEntity (D = \iteratei_28.iteratei_ho1_2_res_22, Q = \iteratei_28.iteratei_ho1_3_res_19).
Adding EN signal on \2159 ($dff) from module topEntity (D = \iteratei_28.iteratei_ho1_1_res_24, Q = \iteratei_28.iteratei_ho1_2_res_22).
Adding EN signal on \2151 ($dff) from module topEntity (D = \iteratei_28.iteratei_ho1_0_res_28, Q = \iteratei_28.iteratei_ho1_1_res_24).
Adding EN signal on \2143 ($dff) from module topEntity (D = \\c$app_arg_43\ [147], Q = \iteratei_28.iteratei_ho1_0_res_28).
Adding EN signal on \2117 ($dff) from module topEntity (D = \\c$app_arg_43\ [132], Q = \b_3).
Adding EN signal on \210 ($dff) from module topEntity (D = \\c$app_arg_43\ [147], Q = \iteratei_0.iteratei_ho1_0_res_0).
Adding EN signal on \2084 ($dff) from module topEntity (D = \iteratei_26.iteratei_ho1_1_res_23, Q = \iteratei_26.r_block_351.\c$bb_res_res_157\).
Adding EN signal on \2076 ($dff) from module topEntity (D = \iteratei_26.iteratei_ho1_0_res_26, Q = \iteratei_26.iteratei_ho1_1_res_23).
Adding EN signal on \2068 ($dff) from module topEntity (D = \\c$app_arg_43\ [136], Q = \iteratei_26.iteratei_ho1_0_res_26).
Adding EN signal on \2057 ($dff) from module topEntity (D = \iteratei_25.iteratei_ho1_0_res_25, Q = \iteratei_25.r_block_348.\c$bb_res_res_154\).
Adding EN signal on \2049 ($dff) from module topEntity (D = \\c$app_arg_43\ [134], Q = \iteratei_25.iteratei_ho1_0_res_25).
Adding EN signal on \2039 ($dff) from module topEntity (D = \\c$app_arg_43\ [138], Q = \iteratei_24.r_block_346.\c$bb_res_res_152\).
Adding EN signal on \2022 ($dff) from module topEntity (D = \iteratei_23.iteratei_ho1_1_res_21, Q = \iteratei_23.r_block_345.\c$bb_res_res_151\).
Adding EN signal on \2014 ($dff) from module topEntity (D = \iteratei_23.iteratei_ho1_0_res_23, Q = \iteratei_23.iteratei_ho1_1_res_21).
Adding EN signal on \2006 ($dff) from module topEntity (D = \\c$app_arg_43\ [135], Q = \iteratei_23.iteratei_ho1_0_res_23).
Adding EN signal on \198 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_6_res, Q = \iteratei.r_block_200.\c$bb_res_res_6\).
Adding EN signal on \1915 ($dff) from module topEntity (D = \iteratei_22.iteratei_ho1_1_res_20, Q = \iteratei_22.r_block_342.\c$bb_res_res_148\).
Adding EN signal on \1907 ($dff) from module topEntity (D = \iteratei_22.iteratei_ho1_0_res_22, Q = \iteratei_22.iteratei_ho1_1_res_20).
Adding EN signal on \190 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_5_res, Q = \iteratei.iteratei_ho1_6_res).
Adding EN signal on \1899 ($dff) from module topEntity (D = \\c$app_arg_43\ [137], Q = \iteratei_22.iteratei_ho1_0_res_22).
Adding EN signal on \182 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_4_res, Q = \iteratei.iteratei_ho1_5_res).
Adding EN signal on \174 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_3_res, Q = \iteratei.iteratei_ho1_4_res).
Adding EN signal on \1705 ($dff) from module topEntity (D = \\c$app_arg_43\ [133], Q = \b_2).
Adding EN signal on \1679 ($dff) from module topEntity (D = \\c$app_arg_43\ [145], Q = \iteratei_20.r_block_338.\c$bb_res_res_144\).
Adding EN signal on \166 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_2_res, Q = \iteratei.iteratei_ho1_3_res).
Adding EN signal on \1636 ($dff) from module topEntity (D = \iteratei_19.iteratei_ho1_0_res_19, Q = \iteratei_19.r_block_337.\c$bb_res_res_143\).
Adding EN signal on \1628 ($dff) from module topEntity (D = \\c$app_arg_43\ [142:141], Q = \iteratei_19.iteratei_ho1_0_res_19).
Adding EN signal on \1585 ($dff) from module topEntity (D = \iteratei_18.iteratei_ho1_5_res_16, Q = \b_0).
Adding EN signal on \158 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_1_res, Q = \iteratei.iteratei_ho1_2_res).
Adding EN signal on \1577 ($dff) from module topEntity (D = \iteratei_18.iteratei_ho1_4_res_17, Q = \iteratei_18.iteratei_ho1_5_res_16).
Adding EN signal on \1569 ($dff) from module topEntity (D = \iteratei_18.iteratei_ho1_3_res_18, Q = \iteratei_18.iteratei_ho1_4_res_17).
Adding EN signal on \1561 ($dff) from module topEntity (D = \iteratei_18.iteratei_ho1_2_res_18, Q = \iteratei_18.iteratei_ho1_3_res_18).
Adding EN signal on \1553 ($dff) from module topEntity (D = \iteratei_18.iteratei_ho1_1_res_18, Q = \iteratei_18.iteratei_ho1_2_res_18).
Adding EN signal on \1545 ($dff) from module topEntity (D = \iteratei_18.iteratei_ho1_0_res_18, Q = \iteratei_18.iteratei_ho1_1_res_18).
Adding EN signal on \1537 ($dff) from module topEntity (D = \\c$app_arg_43\ [148], Q = \iteratei_18.iteratei_ho1_0_res_18).
Adding EN signal on \1525 ($dff) from module topEntity (D = \iteratei_17.iteratei_ho1_4_res_16, Q = \iteratei_17.r_block_328.\c$bb_res_res_134\).
Adding EN signal on \1517 ($dff) from module topEntity (D = \iteratei_17.iteratei_ho1_3_res_17, Q = \iteratei_17.iteratei_ho1_4_res_16).
Adding EN signal on \1509 ($dff) from module topEntity (D = \iteratei_17.iteratei_ho1_2_res_17, Q = \iteratei_17.iteratei_ho1_3_res_17).
Adding EN signal on \1501 ($dff) from module topEntity (D = \iteratei_17.iteratei_ho1_1_res_17, Q = \iteratei_17.iteratei_ho1_2_res_17).
Adding EN signal on \150 ($dff) from module topEntity (D = \iteratei.iteratei_ho1_0_res, Q = \iteratei.iteratei_ho1_1_res).
Adding EN signal on \1493 ($dff) from module topEntity (D = \iteratei_17.iteratei_ho1_0_res_17, Q = \iteratei_17.iteratei_ho1_1_res_17).
Adding EN signal on \1485 ($dff) from module topEntity (D = \\c$app_arg_43\ [140:139], Q = \iteratei_17.iteratei_ho1_0_res_17).
Adding EN signal on \1470 ($dff) from module topEntity (D = \iteratei_16.iteratei_ho1_4_res_15, Q = \iteratei_16.r_block_322.\c$bb_res_res_128\).
Adding EN signal on \1462 ($dff) from module topEntity (D = \iteratei_16.iteratei_ho1_3_res_16, Q = \iteratei_16.iteratei_ho1_4_res_15).
Adding EN signal on \1454 ($dff) from module topEntity (D = \iteratei_16.iteratei_ho1_2_res_16, Q = \iteratei_16.iteratei_ho1_3_res_16).
Adding EN signal on \1446 ($dff) from module topEntity (D = \iteratei_16.iteratei_ho1_1_res_16, Q = \iteratei_16.iteratei_ho1_2_res_16).
Adding EN signal on \1438 ($dff) from module topEntity (D = \iteratei_16.iteratei_ho1_0_res_16, Q = \iteratei_16.iteratei_ho1_1_res_16).
Adding EN signal on \1430 ($dff) from module topEntity (D = \\c$app_arg_43\ [130], Q = \iteratei_16.iteratei_ho1_0_res_16).
Adding EN signal on \142 ($dff) from module topEntity (D = \\c$app_arg_43\ [148], Q = \iteratei.iteratei_ho1_0_res).
Adding EN signal on \1417 ($dff) from module topEntity (D = \iteratei_15.iteratei_ho1_3_res_15, Q = \iteratei_15.r_block_316.\c$bb_res_res_122\).
Adding EN signal on \1409 ($dff) from module topEntity (D = \iteratei_15.iteratei_ho1_2_res_15, Q = \iteratei_15.iteratei_ho1_3_res_15).
Adding EN signal on \1401 ($dff) from module topEntity (D = \iteratei_15.iteratei_ho1_1_res_15, Q = \iteratei_15.iteratei_ho1_2_res_15).
Adding EN signal on \1393 ($dff) from module topEntity (D = \iteratei_15.iteratei_ho1_0_res_15, Q = \iteratei_15.iteratei_ho1_1_res_15).
Adding EN signal on \1385 ($dff) from module topEntity (D = \\c$app_arg_43\ [140:139], Q = \iteratei_15.iteratei_ho1_0_res_15).
Adding EN signal on \1351 ($dff) from module topEntity (D = \iteratei_14.iteratei_ho1_2_res_14, Q = \iteratei_14.r_block_311.\c$bb_res_res_117\).
Adding EN signal on \1343 ($dff) from module topEntity (D = \iteratei_14.iteratei_ho1_1_res_14, Q = \iteratei_14.iteratei_ho1_2_res_14).
Adding EN signal on \1335 ($dff) from module topEntity (D = \iteratei_14.iteratei_ho1_0_res_14, Q = \iteratei_14.iteratei_ho1_1_res_14).
Adding EN signal on \1327 ($dff) from module topEntity (D = \\c$app_arg_43\ [144:143], Q = \iteratei_14.iteratei_ho1_0_res_14).
Adding EN signal on \1307 ($dff) from module topEntity (D = \iteratei_13.iteratei_ho1_4_res_13, Q = \\c$t_case_alt_selection_3\).
Adding EN signal on \1299 ($dff) from module topEntity (D = \iteratei_13.iteratei_ho1_3_res_13, Q = \iteratei_13.iteratei_ho1_4_res_13).
Adding EN signal on \1291 ($dff) from module topEntity (D = \iteratei_13.iteratei_ho1_2_res_13, Q = \iteratei_13.iteratei_ho1_3_res_13).
Adding EN signal on \1283 ($dff) from module topEntity (D = \iteratei_13.iteratei_ho1_1_res_13, Q = \iteratei_13.iteratei_ho1_2_res_13).
Adding EN signal on \1275 ($dff) from module topEntity (D = \iteratei_13.iteratei_ho1_0_res_13, Q = \iteratei_13.iteratei_ho1_1_res_13).
Adding EN signal on \1267 ($dff) from module topEntity (D = \\c$app_arg_43\ [135], Q = \iteratei_13.iteratei_ho1_0_res_13).
Adding EN signal on \1254 ($dff) from module topEntity (D = \iteratei_12.iteratei_ho1_4_res_12, Q = \iteratei_12.r_block_301.\c$bb_res_res_107\).
Adding EN signal on \1246 ($dff) from module topEntity (D = \iteratei_12.iteratei_ho1_3_res_12, Q = \iteratei_12.iteratei_ho1_4_res_12).
Adding EN signal on \1238 ($dff) from module topEntity (D = \iteratei_12.iteratei_ho1_2_res_12, Q = \iteratei_12.iteratei_ho1_3_res_12).
Adding EN signal on \1230 ($dff) from module topEntity (D = \iteratei_12.iteratei_ho1_1_res_12, Q = \iteratei_12.iteratei_ho1_2_res_12).
Adding EN signal on \1222 ($dff) from module topEntity (D = \iteratei_12.iteratei_ho1_0_res_12, Q = \iteratei_12.iteratei_ho1_1_res_12).
Adding EN signal on \1214 ($dff) from module topEntity (D = \\c$app_arg_43\ [131], Q = \iteratei_12.iteratei_ho1_0_res_12).
Adding EN signal on \1064 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_6_res_11, Q = \iteratei_11.r_block_295.\c$bb_res_res_101\).
Adding EN signal on \1056 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_5_res_11, Q = \iteratei_11.iteratei_ho1_6_res_11).
Adding EN signal on \1048 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_4_res_11, Q = \iteratei_11.iteratei_ho1_5_res_11).
Adding EN signal on \1040 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_3_res_11, Q = \iteratei_11.iteratei_ho1_4_res_11).
Adding EN signal on \1032 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_2_res_11, Q = \iteratei_11.iteratei_ho1_3_res_11).
Adding EN signal on \1024 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_1_res_11, Q = \iteratei_11.iteratei_ho1_2_res_11).
Adding EN signal on \1016 ($dff) from module topEntity (D = \iteratei_11.iteratei_ho1_0_res_11, Q = \iteratei_11.iteratei_ho1_1_res_11).
Adding EN signal on \1008 ($dff) from module topEntity (D = \\c$app_arg_43\ [134], Q = \iteratei_11.iteratei_ho1_0_res_11).

2.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 268 unused cells and 266 unused wires.
<suppressed ~300 debug messages>

2.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~7 debug messages>

2.8.9. Rerunning OPT passes. (Maybe there is more to do..)

2.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

2.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
<suppressed ~201 debug messages>
Removed a total of 67 cells.

2.8.13. Executing OPT_DFF pass (perform DFF optimizations).

2.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.8.16. Rerunning OPT passes. (Maybe there is more to do..)

2.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

2.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.8.20. Executing OPT_DFF pass (perform DFF optimizations).

2.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.8.23. Finished OPT passes. (There is nothing left to do.)

2.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell topEntity.$auto$opt_dff.cc:195:make_patterns_logic$962 ($ne).
Removed top 1 bits (of 2) from port B of cell topEntity.$auto$opt_dff.cc:195:make_patterns_logic$937 ($ne).
Removed top 53 bits (of 64) from port B of cell topEntity.\70 ($add).
Removed top 53 bits (of 64) from port B of cell topEntity.\81 ($add).
Removed top 43 bits (of 64) from port B of cell topEntity.\112 ($ge).
Removed top 42 bits (of 64) from port B of cell topEntity.\114 ($ge).
Removed top 80 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$767 ($dffe).
Removed top 64 bits (of 128) from mux cell topEntity.\1093 ($mux).
Removed top 5 bits (of 8) from port B of cell topEntity.\1148 ($eq).
Removed top 64 bits (of 128) from mux cell topEntity.\1192 ($mux).
Removed top 7 bits (of 8) from port B of cell topEntity.\1371 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\1374 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\1377 ($sub).
Removed top 5 bits (of 8) from port B of cell topEntity.\1654 ($eq).
Removed top 5 bits (of 8) from port B of cell topEntity.\1657 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\1666 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\1669 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\1671 ($sub).
Removed top 63 bits (of 64) from port B of cell topEntity.\1735 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\1738 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\1741 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\1743 ($sub).
Removed top 6 bits (of 8) from port B of cell topEntity.\1797 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\1800 ($add).
Removed top 6 bits (of 8) from port B of cell topEntity.\1803 ($sub).
Removed top 6 bits (of 8) from port B of cell topEntity.\1861 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\1864 ($add).
Removed top 6 bits (of 8) from port B of cell topEntity.\1866 ($sub).
Removed top 62 bits (of 64) from port B of cell topEntity.\1885 ($add).
Removed top 2 bits (of 3) from port B of cell topEntity.$auto$opt_dff.cc:195:make_patterns_logic$831 ($ne).
Removed top 7 bits (of 8) from port B of cell topEntity.\2026 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\2029 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\2031 ($sub).
Removed top 63 bits (of 64) from port B of cell topEntity.\2130 ($add).
Removed top 63 bits (of 64) from port B of cell topEntity.\2269 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\2277 ($gt).
Removed top 5 bits (of 8) from port B of cell topEntity.\2280 ($add).
Removed top 7 bits (of 8) from port B of cell topEntity.\2283 ($sub).
Removed top 5 bits (of 8) from port B of cell topEntity.\2528 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2530 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2543 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2545 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2558 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2560 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2573 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2575 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2591 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2593 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2609 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2611 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2627 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2629 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2642 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2644 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2657 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2659 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2672 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2674 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2687 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2689 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2702 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2704 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2717 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2719 ($add).
Removed top 5 bits (of 8) from port B of cell topEntity.\2732 ($eq).
Removed top 7 bits (of 8) from port B of cell topEntity.\2734 ($add).
Removed top 63 bits (of 64) from port B of cell topEntity.\2752 ($gt).
Removed top 63 bits (of 64) from port B of cell topEntity.\2754 ($sub).
Removed top 63 bits (of 64) from port B of cell topEntity.\2865 ($add).
Removed top 60 bits (of 64) from port B of cell topEntity.\2878 ($eq).
Removed top 63 bits (of 64) from mux cell topEntity.\2879 ($mux).
Removed top 63 bits (of 64) from port B of cell topEntity.\2888 ($sub).
Removed top 16 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$768 ($dffe).
Removed top 16 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$769 ($dffe).
Removed top 16 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$770 ($dffe).
Removed top 16 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$771 ($dffe).
Removed top 16 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$772 ($dffe).
Removed top 16 bits (of 128) from FF cell topEntity.$auto$ff.cc:266:slice$1001 ($dffe).
Removed top 63 bits (of 64) from wire topEntity.\\c$cursor_app_arg\.
Removed top 64 bits (of 128) from wire topEntity.\\c$t_case_alt\.
Removed top 64 bits (of 128) from wire topEntity.\\c$t_case_alt_1\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.iteratei_ho1_1_res_25.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.iteratei_ho1_2_res_23.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.iteratei_ho1_3_res_20.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.iteratei_ho1_4_res_19.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.iteratei_ho1_5_res_18.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.r_block_360.\c$bb_res_res_166\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.r_block_361.\c$bb_res_res_167\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.r_block_362.\c$bb_res_res_168\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.r_block_363.\c$bb_res_res_169\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.r_block_364.\c$bb_res_res_170\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_29.r_block_365.\c$bb_res_res_171\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.iteratei_ho1_0_res_31.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.iteratei_ho1_1_res_27.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.iteratei_ho1_2_res_25.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.iteratei_ho1_3_res_22.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.iteratei_ho1_4_res_21.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.r_block_372.\c$bb_res_res_178\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.r_block_373.\c$bb_res_res_179\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.r_block_374.\c$bb_res_res_180\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.r_block_375.\c$bb_res_res_181\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_31.r_block_376.\c$bb_res_res_182\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.iteratei_ho1_0_res_32.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.iteratei_ho1_1_res_28.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.iteratei_ho1_2_res_26.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.iteratei_ho1_3_res_23.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.r_block_377.\c$bb_res_res_183\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.r_block_378.\c$bb_res_res_184\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.r_block_379.\c$bb_res_res_185\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_32.r_block_380.\c$bb_res_res_186\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_33.iteratei_ho1_0_res_33.
Removed top 16 bits (of 128) from wire topEntity.iteratei_33.iteratei_ho1_1_res_29.
Removed top 16 bits (of 128) from wire topEntity.iteratei_33.iteratei_ho1_2_res_27.
Removed top 16 bits (of 128) from wire topEntity.iteratei_33.r_block_381.\c$bb_res_res_187\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_33.r_block_382.\c$bb_res_res_188\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_33.r_block_383.\c$bb_res_res_189\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_34.iteratei_ho1_0_res_34.
Removed top 16 bits (of 128) from wire topEntity.iteratei_34.iteratei_ho1_1_res_30.
Removed top 16 bits (of 128) from wire topEntity.iteratei_34.r_block_384.\c$bb_res_res_190\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_34.r_block_385.\c$bb_res_res_191\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_35.iteratei_ho1_0_res_35.
Removed top 16 bits (of 128) from wire topEntity.iteratei_35.r_block_386.\c$bb_res_res_192\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.iteratei_ho1_0_res_8.
Removed top 80 bits (of 128) from wire topEntity.iteratei_8.iteratei_ho1_6_res_8.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.r_block_265.\c$bb_res_res_71\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.r_block_266.\c$bb_res_res_72\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.r_block_267.\c$bb_res_res_73\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.r_block_268.\c$bb_res_res_74\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.r_block_269.\c$bb_res_res_75\.
Removed top 16 bits (of 128) from wire topEntity.iteratei_8.r_block_270.\c$bb_res_res_76\.
Removed top 80 bits (of 128) from wire topEntity.result_28.
Removed top 16 bits (of 128) from wire topEntity.result_88.
Removed top 16 bits (of 128) from wire topEntity.result_93.
Removed top 16 bits (of 128) from wire topEntity.result_94.
Removed top 16 bits (of 128) from wire topEntity.result_95.
Removed top 16 bits (of 128) from wire topEntity.result_96.
Removed top 16 bits (of 128) from wire topEntity.result_97.

2.10. Executing PEEPOPT pass (run peephole optimizers).

2.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 0 unused cells and 59 unused wires.
<suppressed ~1 debug messages>

2.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module topEntity:
  creating $macc model for \1103 ($add).
  creating $macc model for \1123 ($add).
  creating $macc model for \1125 ($add).
  creating $macc model for \1126 ($add).
  creating $macc model for \1144 ($add).
  creating $macc model for \1146 ($add).
  creating $macc model for \1162 ($add).
  creating $macc model for \1202 ($add).
  creating $macc model for \1312 ($add).
  creating $macc model for \1374 ($add).
  creating $macc model for \1377 ($sub).
  creating $macc model for \1602 ($add).
  creating $macc model for \1604 ($sub).
  creating $macc model for \1647 ($add).
  creating $macc model for \1649 ($add).
  creating $macc model for \1669 ($add).
  creating $macc model for \1671 ($sub).
  creating $macc model for \1718 ($add).
  creating $macc model for \1735 ($add).
  creating $macc model for \1741 ($add).
  creating $macc model for \1743 ($sub).
  creating $macc model for \1785 ($sub).
  creating $macc model for \1800 ($add).
  creating $macc model for \1803 ($sub).
  creating $macc model for \1820 ($add).
  creating $macc model for \1850 ($sub).
  creating $macc model for \1864 ($add).
  creating $macc model for \1866 ($sub).
  creating $macc model for \1885 ($add).
  creating $macc model for \1932 ($add).
  creating $macc model for \1981 ($sub).
  creating $macc model for \2029 ($add).
  creating $macc model for \2031 ($sub).
  creating $macc model for \2130 ($add).
  creating $macc model for \2269 ($add).
  creating $macc model for \2280 ($add).
  creating $macc model for \2283 ($sub).
  creating $macc model for \2530 ($add).
  creating $macc model for \2545 ($add).
  creating $macc model for \2560 ($add).
  creating $macc model for \2575 ($add).
  creating $macc model for \2593 ($add).
  creating $macc model for \2611 ($add).
  creating $macc model for \2629 ($add).
  creating $macc model for \2644 ($add).
  creating $macc model for \2659 ($add).
  creating $macc model for \2674 ($add).
  creating $macc model for \2689 ($add).
  creating $macc model for \2704 ($add).
  creating $macc model for \2719 ($add).
  creating $macc model for \2734 ($add).
  creating $macc model for \2754 ($sub).
  creating $macc model for \2784 ($sub).
  creating $macc model for \2865 ($add).
  creating $macc model for \2888 ($sub).
  creating $macc model for \70 ($add).
  creating $macc model for \709 ($sub).
  creating $macc model for \81 ($add).
  merging $macc model for \1649 into \1647.
  merging $macc model for \1604 into \1602.
  merging $macc model for \1146 into \1144.
  merging $macc model for \1125 into \1126.
  merging $macc model for \1126 into \1123.
  creating $alu model for $macc \2784.
  creating $alu model for $macc \2754.
  creating $alu model for $macc \2734.
  creating $alu model for $macc \2719.
  creating $alu model for $macc \2704.
  creating $alu model for $macc \2689.
  creating $alu model for $macc \2674.
  creating $alu model for $macc \2659.
  creating $alu model for $macc \2644.
  creating $alu model for $macc \2629.
  creating $alu model for $macc \2611.
  creating $alu model for $macc \2593.
  creating $alu model for $macc \2575.
  creating $alu model for $macc \2560.
  creating $alu model for $macc \2545.
  creating $alu model for $macc \2530.
  creating $alu model for $macc \2283.
  creating $alu model for $macc \2280.
  creating $alu model for $macc \2269.
  creating $alu model for $macc \2130.
  creating $alu model for $macc \2031.
  creating $alu model for $macc \2029.
  creating $alu model for $macc \1981.
  creating $alu model for $macc \1932.
  creating $alu model for $macc \1885.
  creating $alu model for $macc \1866.
  creating $alu model for $macc \1864.
  creating $alu model for $macc \1850.
  creating $alu model for $macc \1820.
  creating $alu model for $macc \1803.
  creating $alu model for $macc \1800.
  creating $alu model for $macc \1785.
  creating $alu model for $macc \1743.
  creating $alu model for $macc \1741.
  creating $alu model for $macc \1735.
  creating $alu model for $macc \1718.
  creating $alu model for $macc \1671.
  creating $alu model for $macc \1669.
  creating $alu model for $macc \2865.
  creating $alu model for $macc \2888.
  creating $alu model for $macc \1377.
  creating $alu model for $macc \1374.
  creating $alu model for $macc \1312.
  creating $alu model for $macc \1202.
  creating $alu model for $macc \1162.
  creating $alu model for $macc \70.
  creating $alu model for $macc \81.
  creating $alu model for $macc \709.
  creating $alu model for $macc \1103.
  creating $macc cell for \1647: $auto$alumacc.cc:365:replace_macc$1143
  creating $macc cell for \1602: $auto$alumacc.cc:365:replace_macc$1144
  creating $macc cell for \1123: $auto$alumacc.cc:365:replace_macc$1145
  creating $macc cell for \1144: $auto$alumacc.cc:365:replace_macc$1146
  creating $alu model for \112 ($ge): new $alu
  creating $alu model for \114 ($ge): new $alu
  creating $alu model for \1371 ($gt): new $alu
  creating $alu model for \1666 ($gt): new $alu
  creating $alu model for \1738 ($gt): new $alu
  creating $alu model for \1797 ($gt): new $alu
  creating $alu model for \1861 ($gt): new $alu
  creating $alu model for \2026 ($gt): new $alu
  creating $alu model for \2277 ($gt): new $alu
  creating $alu model for \2752 ($gt): new $alu
  creating $alu cell for \2752: $auto$alumacc.cc:485:replace_alu$1157
  creating $alu cell for \2277: $auto$alumacc.cc:485:replace_alu$1164
  creating $alu cell for \1861: $auto$alumacc.cc:485:replace_alu$1169
  creating $alu cell for \1797: $auto$alumacc.cc:485:replace_alu$1174
  creating $alu cell for \1738: $auto$alumacc.cc:485:replace_alu$1179
  creating $alu cell for \1371: $auto$alumacc.cc:485:replace_alu$1184
  creating $alu cell for \114: $auto$alumacc.cc:485:replace_alu$1189
  creating $alu cell for \112: $auto$alumacc.cc:485:replace_alu$1200
  creating $alu cell for \1103: $auto$alumacc.cc:485:replace_alu$1211
  creating $alu cell for \709: $auto$alumacc.cc:485:replace_alu$1214
  creating $alu cell for \81: $auto$alumacc.cc:485:replace_alu$1217
  creating $alu cell for \70: $auto$alumacc.cc:485:replace_alu$1220
  creating $alu cell for \1162: $auto$alumacc.cc:485:replace_alu$1223
  creating $alu cell for \1202: $auto$alumacc.cc:485:replace_alu$1226
  creating $alu cell for \1312: $auto$alumacc.cc:485:replace_alu$1229
  creating $alu cell for \1374: $auto$alumacc.cc:485:replace_alu$1232
  creating $alu cell for \1377: $auto$alumacc.cc:485:replace_alu$1235
  creating $alu cell for \2888: $auto$alumacc.cc:485:replace_alu$1238
  creating $alu cell for \2865: $auto$alumacc.cc:485:replace_alu$1241
  creating $alu cell for \1669: $auto$alumacc.cc:485:replace_alu$1244
  creating $alu cell for \1671: $auto$alumacc.cc:485:replace_alu$1247
  creating $alu cell for \1718: $auto$alumacc.cc:485:replace_alu$1250
  creating $alu cell for \1735: $auto$alumacc.cc:485:replace_alu$1253
  creating $alu cell for \1741: $auto$alumacc.cc:485:replace_alu$1256
  creating $alu cell for \1743: $auto$alumacc.cc:485:replace_alu$1259
  creating $alu cell for \1785: $auto$alumacc.cc:485:replace_alu$1262
  creating $alu cell for \1800: $auto$alumacc.cc:485:replace_alu$1265
  creating $alu cell for \1803: $auto$alumacc.cc:485:replace_alu$1268
  creating $alu cell for \1820: $auto$alumacc.cc:485:replace_alu$1271
  creating $alu cell for \1850: $auto$alumacc.cc:485:replace_alu$1274
  creating $alu cell for \1864: $auto$alumacc.cc:485:replace_alu$1277
  creating $alu cell for \1866: $auto$alumacc.cc:485:replace_alu$1280
  creating $alu cell for \1885: $auto$alumacc.cc:485:replace_alu$1283
  creating $alu cell for \1932: $auto$alumacc.cc:485:replace_alu$1286
  creating $alu cell for \1981: $auto$alumacc.cc:485:replace_alu$1289
  creating $alu cell for \2029: $auto$alumacc.cc:485:replace_alu$1292
  creating $alu cell for \2031: $auto$alumacc.cc:485:replace_alu$1295
  creating $alu cell for \2130: $auto$alumacc.cc:485:replace_alu$1298
  creating $alu cell for \2269: $auto$alumacc.cc:485:replace_alu$1301
  creating $alu cell for \2280: $auto$alumacc.cc:485:replace_alu$1304
  creating $alu cell for \2283: $auto$alumacc.cc:485:replace_alu$1307
  creating $alu cell for \2530: $auto$alumacc.cc:485:replace_alu$1310
  creating $alu cell for \2545: $auto$alumacc.cc:485:replace_alu$1313
  creating $alu cell for \2560: $auto$alumacc.cc:485:replace_alu$1316
  creating $alu cell for \2575: $auto$alumacc.cc:485:replace_alu$1319
  creating $alu cell for \2593: $auto$alumacc.cc:485:replace_alu$1322
  creating $alu cell for \2611: $auto$alumacc.cc:485:replace_alu$1325
  creating $alu cell for \2629: $auto$alumacc.cc:485:replace_alu$1328
  creating $alu cell for \2644: $auto$alumacc.cc:485:replace_alu$1331
  creating $alu cell for \2659: $auto$alumacc.cc:485:replace_alu$1334
  creating $alu cell for \2674: $auto$alumacc.cc:485:replace_alu$1337
  creating $alu cell for \2689: $auto$alumacc.cc:485:replace_alu$1340
  creating $alu cell for \2026: $auto$alumacc.cc:485:replace_alu$1343
  creating $alu cell for \2704: $auto$alumacc.cc:485:replace_alu$1348
  creating $alu cell for \1666: $auto$alumacc.cc:485:replace_alu$1351
  creating $alu cell for \2719: $auto$alumacc.cc:485:replace_alu$1356
  creating $alu cell for \2734: $auto$alumacc.cc:485:replace_alu$1359
  creating $alu cell for \2754: $auto$alumacc.cc:485:replace_alu$1362
  creating $alu cell for \2784: $auto$alumacc.cc:485:replace_alu$1365
  created 59 $alu and 4 $macc cells.

2.13. Executing SHARE pass (SAT-based resource sharing).

2.14. Executing OPT pass (performing simple optimizations).

2.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~7 debug messages>

2.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

2.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.14.6. Executing OPT_DFF pass (perform DFF optimizations).

2.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 12 unused cells and 27 unused wires.
<suppressed ~30 debug messages>

2.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

2.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.14.16. Finished OPT passes. (There is nothing left to do.)

2.15. Executing MEMORY pass.

2.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.17. Executing OPT pass (performing simple optimizations).

2.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~190 debug messages>

2.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.17.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$966 ($adffe) from module topEntity (D = \result_12 [3:0], Q = \result_13 [3:0]).
Adding EN signal on $auto$ff.cc:266:slice$965 ($adffe) from module topEntity (D = \result_14 [3:0], Q = \result_15 [3:0]).

2.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 12 unused cells and 27 unused wires.
<suppressed ~13 debug messages>

2.17.5. Rerunning OPT passes. (Removed registers in this run.)

2.17.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~2 debug messages>

2.17.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.17.8. Executing OPT_DFF pass (perform DFF optimizations).

2.17.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.17.10. Finished fast OPT passes.

2.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
    Consolidated identical input bits for $mux cell \1372:
      Old ports: A=\\c$app_arg_15\, B={ $auto$ghdl.cc:806:import_module$299 [7:2] \\c$app_arg_15\ [1:0] }, Y=\result_45
      New ports: A=\\c$app_arg_15\ [7:2], B=$auto$ghdl.cc:806:import_module$299 [7:2], Y=\result_45 [7:2]
      New connections: \result_45 [1:0] = \\c$app_arg_15\ [1:0]
    Consolidated identical input bits for $mux cell \1667:
      Old ports: A=\\c$app_arg_21\, B={ $auto$ghdl.cc:806:import_module$374 [7:2] \\c$app_arg_21\ [1:0] }, Y=\result_55
      New ports: A=\\c$app_arg_21\ [7:2], B=$auto$ghdl.cc:806:import_module$374 [7:2], Y=\result_55 [7:2]
      New connections: \result_55 [1:0] = \\c$app_arg_21\ [1:0]
    Consolidated identical input bits for $mux cell \1739:
      Old ports: A=\\c$app_arg_24\, B={ $auto$ghdl.cc:806:import_module$389 [7:2] \\c$app_arg_24\ [1:0] }, Y=\result_64
      New ports: A=\\c$app_arg_24\ [7:2], B=$auto$ghdl.cc:806:import_module$389 [7:2], Y=\result_64 [7:2]
      New connections: \result_64 [1:0] = \\c$app_arg_24\ [1:0]
    Consolidated identical input bits for $mux cell \1798:
      Old ports: A={ \\c$app_arg_25\ [7:1] \iteratei_29.iteratei_ho1_0_res_29 [0] }, B={ $auto$ghdl.cc:806:import_module$402 [7:2] \\c$app_arg_25\ [1] \iteratei_29.iteratei_ho1_0_res_29 [0] }, Y=\result_66
      New ports: A=\\c$app_arg_25\ [7:2], B=$auto$ghdl.cc:806:import_module$402 [7:2], Y=\result_66 [7:2]
      New connections: \result_66 [1:0] = { \\c$app_arg_25\ [1] \iteratei_29.iteratei_ho1_0_res_29 [0] }
    Consolidated identical input bits for $mux cell \1862:
      Old ports: A={ \\c$app_arg_26\ [7:1] \t_24 [0] }, B={ $auto$ghdl.cc:806:import_module$415 [7:2] \\c$app_arg_26\ [1] \t_24 [0] }, Y=\result_70
      New ports: A=\\c$app_arg_26\ [7:2], B=$auto$ghdl.cc:806:import_module$415 [7:2], Y=\result_70 [7:2]
      New connections: \result_70 [1:0] = { \\c$app_arg_26\ [1] \t_24 [0] }
    Consolidated identical input bits for $mux cell \2027:
      Old ports: A=\\c$app_arg_29\, B={ $auto$ghdl.cc:806:import_module$448 [7:2] \\c$app_arg_29\ [1:0] }, Y=\result_78
      New ports: A=\\c$app_arg_29\ [7:2], B=$auto$ghdl.cc:806:import_module$448 [7:2], Y=\result_78 [7:2]
      New connections: \result_78 [1:0] = \\c$app_arg_29\ [1:0]
    Consolidated identical input bits for $mux cell \2278:
      Old ports: A=\\c$app_arg_36\, B={ $auto$ghdl.cc:806:import_module$501 [7:2] \\c$app_arg_36\ [1:0] }, Y=\result_91
      New ports: A=\\c$app_arg_36\ [7:2], B=$auto$ghdl.cc:806:import_module$501 [7:2], Y=\result_91 [7:2]
      New connections: \result_91 [1:0] = \\c$app_arg_36\ [1:0]
    Consolidated identical input bits for $mux cell \68:
      Old ports: A={ $auto$ghdl.cc:806:import_module$2 [63:4] 4'x }, B=64'0000000000000000000000000000000000000000000000000000011111010000, Y=\result_12
      New ports: A={ $auto$ghdl.cc:806:import_module$2 [63:4] 1'x }, B=61'0000000000000000000000000000000000000000000000000000011111010, Y={ \result_12 [63:4] \result_12 [0] }
      New connections: \result_12 [3:1] = { \result_12 [0] \result_12 [0] \result_12 [0] }
    Consolidated identical input bits for $mux cell \79:
      Old ports: A={ $auto$ghdl.cc:806:import_module$4 [63:4] 4'x }, B=64'0000000000000000000000000000000000000000000000000000011111010000, Y=\result_14
      New ports: A={ $auto$ghdl.cc:806:import_module$4 [63:4] 1'x }, B=61'0000000000000000000000000000000000000000000000000000011111010, Y={ \result_14 [63:4] \result_14 [0] }
      New connections: \result_14 [3:1] = { \result_14 [0] \result_14 [0] \result_14 [0] }
  Optimizing cells in module \topEntity.
Performed a total of 9 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.19.6. Executing OPT_SHARE pass.

2.19.7. Executing OPT_DFF pass (perform DFF optimizations).

2.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.19.10. Rerunning OPT passes. (Maybe there is more to do..)

2.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \topEntity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

2.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \topEntity.
Performed a total of 0 changes.

2.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.19.14. Executing OPT_SHARE pass.

2.19.15. Executing OPT_DFF pass (perform DFF optimizations).

2.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..

2.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.

2.19.18. Finished OPT passes. (There is nothing left to do.)

2.20. Executing TECHMAP pass (map to technology primitives).

2.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using template $paramod$9cfaa5b7a62bd2391802c1be28bdae97aa527b15\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$89e6018118041664448800cd912a3b31e5316ca7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper maccmap for cells of type $macc.
  add \x_14 (64 bits, unsigned)
  add \y_11 (64 bits, unsigned)
  add \y_10 (64 bits, unsigned)
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xor.
  add \x_5 (64 bits, unsigned)
  add \y_4 (64 bits, unsigned)
  add \y_3 (64 bits, unsigned)
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$7a96801fb6e5b7d87d0ddf7518621e6485318f46\_90_alu for cells of type $alu.
Using template $paramod$54969db7f41ab9ffc93887c2d8e2d7f68e10b42f\_90_alu for cells of type $alu.
Using template $paramod$c66b509f0dbff04a70da2bd22d8e6a343f873dbd\_90_alu for cells of type $alu.
  add \x_2 (64 bits, unsigned)
  add \y_2 (64 bits, unsigned)
  add \y_1 (64 bits, unsigned)
  add \y_0 (64 bits, unsigned)
  add \x_12 (64 bits, unsigned)
  add \y_8 (64 bits, unsigned)
  sub \y_9 (64 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$10ed987432f06055e5279101f9ec60a49861b43c\_90_alu for cells of type $alu.
Using template $paramod$a950948e19702336540a1f557d0a91306bdb9188\_90_alu for cells of type $alu.
Using template $paramod$be099e65a2916bc2f93589bb8b12d430dab57b0e\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111100 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111111 for cells of type $lcu.
No more expansions possible.
<suppressed ~9930 debug messages>

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~8708 debug messages>

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
<suppressed ~3693 debug messages>
Removed a total of 1231 cells.

2.21.3. Executing OPT_DFF pass (perform DFF optimizations).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 2117 unused cells and 4574 unused wires.
<suppressed ~2156 debug messages>

2.21.5. Finished fast OPT passes.

2.22. Executing ABC pass (technology mapping using ABC).

2.22.1. Extracting gate netlist of module `\topEntity' to `<abc-temp-dir>/input.blif'..
Replacing 136 occurrences of constant undef bits with constant zero bits
Extracted 14686 gates and 17858 wires to a netlist network with 3169 inputs and 1610 outputs.

2.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:     1928
ABC RESULTS:               AND cells:      371
ABC RESULTS:               NOT cells:     2075
ABC RESULTS:              XNOR cells:      898
ABC RESULTS:             ORNOT cells:      404
ABC RESULTS:              NAND cells:      703
ABC RESULTS:                OR cells:     1946
ABC RESULTS:               NOR cells:     1421
ABC RESULTS:            ANDNOT cells:     4173
ABC RESULTS:               XOR cells:     2070
ABC RESULTS:              ZERO cells:        2
ABC RESULTS:        internal signals:    13079
ABC RESULTS:           input signals:     3169
ABC RESULTS:          output signals:     1610
Removing temp directory.

2.23. Executing OPT pass (performing simple optimizations).

2.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~683 debug messages>

2.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
<suppressed ~222 debug messages>
Removed a total of 74 cells.

2.23.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$7484 ($_DFFE_PP0P_) from module topEntity.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$7557 ($_DFFE_PP0P_) from module topEntity.

2.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 11 unused cells and 8717 unused wires.
<suppressed ~120 debug messages>

2.23.5. Rerunning OPT passes. (Removed registers in this run.)

2.23.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module topEntity.
<suppressed ~1 debug messages>

2.23.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\topEntity'.
Removed a total of 0 cells.

2.23.8. Executing OPT_DFF pass (perform DFF optimizations).

2.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \topEntity..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.23.10. Finished fast OPT passes.

2.24. Executing HIERARCHY pass (managing design hierarchy).

2.24.1. Analyzing design hierarchy..
Top module:  \topEntity

2.24.2. Analyzing design hierarchy..
Top module:  \topEntity
Removed 0 unused modules.

2.25. Printing statistics.

=== topEntity ===

   Number of wires:              15137
   Number of wire bits:          52927
   Number of public wires:         818
   Number of public wire bits:   38608
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              19516
     $_ANDNOT_                    4170
     $_AND_                        368
     $_DFFE_PP0P_                 2981
     $_DFFE_PP1P_                   48
     $_DFFE_PP_                    584
     $_MUX_                       1928
     $_NAND_                       703
     $_NOR_                       1352
     $_NOT_                       2066
     $_ORNOT_                      404
     $_OR_                        1944
     $_XNOR_                       898
     $_XOR_                       2070

2.26. Executing CHECK pass (checking for obvious problems).
Checking module topEntity...
Found and reported 0 problems.

3. Printing statistics.

=== topEntity ===

   Number of wires:              15137
   Number of wire bits:          52927
   Number of public wires:         818
   Number of public wire bits:   38608
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              19516
     $_ANDNOT_                    4170
     $_AND_                        368
     $_DFFE_PP0P_                 2981
     $_DFFE_PP1P_                   48
     $_DFFE_PP_                    584
     $_MUX_                       1928
     $_NAND_                       703
     $_NOR_                       1352
     $_NOT_                       2066
     $_ORNOT_                      404
     $_OR_                        1944
     $_XNOR_                       898
     $_XOR_                       2070

End of script. Logfile hash: 19eb177728, CPU: user 13.17s system 0.18s, MEM: 139.17 MB peak
Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os)
Time spent: 24% 28x opt_clean (3 sec), 21% 35x opt_expr (3 sec), ...
