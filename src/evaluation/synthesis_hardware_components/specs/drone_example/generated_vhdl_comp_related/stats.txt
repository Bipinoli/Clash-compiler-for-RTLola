
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os)


-- Running command `
ghdl --latches --std=08 --work=work implementation; 
synth -top implementation; 
stat;
' --

1. Executing GHDL.
Importing module implementation.
Importing module clock_pre_processing.
Importing module input_pre_processing.
Importing module monitor.
Importing module high_level_controller.
Importing module queue.
Importing module low_level_controller.
Importing module extinterface.
Importing module check_new_input.
Importing module event_delay.
Importing module time_unit.
Importing module scheduler.
Importing module hlqinterface.
Importing module evaluator.
Importing module acceleration_x_input_stream_entity.
Importing module gps_sats_input_stream_entity.
Importing module lat_gps_input_stream_entity.
Importing module acceleration_x_periodic_output_stream_entity.
Importing module acceleration_x_rising_output_stream_entity.
Importing module acceleration_x_sinking_output_stream_entity.
Importing module acceleration_x_direction_change_output_stream_entity.
Importing module acceleration_x_changes_output_stream_entity.
Importing module trigger_acc_output_stream_entity.
Importing module gps_missed_beat_output_stream_entity.
Importing module gps_medium_loss_output_stream_entity.
Importing module gps_high_loss_output_stream_entity.
Importing module gps_very_high_loss_output_stream_entity.
Importing module trigger_gps_sats_output_stream_entity.
Importing module acceleration_x_direction_change_count_0_sliding_window_entity.
Importing module lat_gps_count_1_sliding_window_entity.
Importing module lat_gps_count_2_sliding_window_entity.
Importing module lat_gps_count_3_sliding_window_entity.
Importing module lat_gps_count_4_sliding_window_entity.
Importing module lat_gps_count_5_sliding_window_entity.
Importing module lat_gps_count_6_sliding_window_entity.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \monitor
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \lat_gps_count_6_sliding_window_entity
Used module:                 \lat_gps_count_5_sliding_window_entity
Used module:                 \lat_gps_count_4_sliding_window_entity
Used module:                 \lat_gps_count_3_sliding_window_entity
Used module:                 \lat_gps_count_2_sliding_window_entity
Used module:                 \lat_gps_count_1_sliding_window_entity
Used module:                 \acceleration_x_direction_change_count_0_sliding_window_entity
Used module:                 \trigger_gps_sats_output_stream_entity
Used module:                 \gps_very_high_loss_output_stream_entity
Used module:                 \gps_high_loss_output_stream_entity
Used module:                 \gps_medium_loss_output_stream_entity
Used module:                 \gps_missed_beat_output_stream_entity
Used module:                 \trigger_acc_output_stream_entity
Used module:                 \acceleration_x_changes_output_stream_entity
Used module:                 \acceleration_x_direction_change_output_stream_entity
Used module:                 \acceleration_x_sinking_output_stream_entity
Used module:                 \acceleration_x_rising_output_stream_entity
Used module:                 \acceleration_x_periodic_output_stream_entity
Used module:                 \lat_gps_input_stream_entity
Used module:                 \gps_sats_input_stream_entity
Used module:                 \acceleration_x_input_stream_entity
Used module:         \queue
Used module:         \high_level_controller
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:             \event_delay
Used module:             \check_new_input
Used module:             \extinterface
Used module:     \input_pre_processing
Used module:     \clock_pre_processing

2.1.2. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \monitor
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \lat_gps_count_6_sliding_window_entity
Used module:                 \lat_gps_count_5_sliding_window_entity
Used module:                 \lat_gps_count_4_sliding_window_entity
Used module:                 \lat_gps_count_3_sliding_window_entity
Used module:                 \lat_gps_count_2_sliding_window_entity
Used module:                 \lat_gps_count_1_sliding_window_entity
Used module:                 \acceleration_x_direction_change_count_0_sliding_window_entity
Used module:                 \trigger_gps_sats_output_stream_entity
Used module:                 \gps_very_high_loss_output_stream_entity
Used module:                 \gps_high_loss_output_stream_entity
Used module:                 \gps_medium_loss_output_stream_entity
Used module:                 \gps_missed_beat_output_stream_entity
Used module:                 \trigger_acc_output_stream_entity
Used module:                 \acceleration_x_changes_output_stream_entity
Used module:                 \acceleration_x_direction_change_output_stream_entity
Used module:                 \acceleration_x_sinking_output_stream_entity
Used module:                 \acceleration_x_rising_output_stream_entity
Used module:                 \acceleration_x_periodic_output_stream_entity
Used module:                 \lat_gps_input_stream_entity
Used module:                 \gps_sats_input_stream_entity
Used module:                 \acceleration_x_input_stream_entity
Used module:         \queue
Used module:         \high_level_controller
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:             \event_delay
Used module:             \check_new_input
Used module:             \extinterface
Used module:     \input_pre_processing
Used module:     \clock_pre_processing
Removed 0 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module trigger_gps_sats_output_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module lat_gps_input_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_sats_input_stream_entity.
<suppressed ~1 debug messages>
Optimizing module acceleration_x_input_stream_entity.
<suppressed ~1 debug messages>
Optimizing module evaluator.
<suppressed ~51 debug messages>
Optimizing module hlqinterface.
<suppressed ~1 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module event_delay.
Optimizing module check_new_input.
Optimizing module extinterface.
Optimizing module low_level_controller.
<suppressed ~1 debug messages>
Optimizing module queue.
<suppressed ~43 debug messages>
Optimizing module high_level_controller.
Optimizing module monitor.
Optimizing module input_pre_processing.
Optimizing module clock_pre_processing.
<suppressed ~4 debug messages>
Optimizing module implementation.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module trigger_gps_sats_output_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module evaluator.
Optimizing module hlqinterface.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module event_delay.
Optimizing module check_new_input.
Optimizing module extinterface.
Optimizing module low_level_controller.
Optimizing module queue.
Optimizing module high_level_controller.
Optimizing module monitor.
Optimizing module input_pre_processing.
Optimizing module clock_pre_processing.
Optimizing module implementation.

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \implementation..
Removed 8 unused cells and 506 unused wires.
<suppressed ~43 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
Checking module acceleration_x_changes_output_stream_entity...
Checking module acceleration_x_direction_change_count_0_sliding_window_entity...
Checking module acceleration_x_direction_change_output_stream_entity...
Checking module acceleration_x_input_stream_entity...
Checking module acceleration_x_periodic_output_stream_entity...
Checking module acceleration_x_rising_output_stream_entity...
Checking module acceleration_x_sinking_output_stream_entity...
Checking module check_new_input...
Checking module clock_pre_processing...
Checking module evaluator...
Checking module event_delay...
Checking module extinterface...
Checking module gps_high_loss_output_stream_entity...
Checking module gps_medium_loss_output_stream_entity...
Checking module gps_missed_beat_output_stream_entity...
Checking module gps_sats_input_stream_entity...
Checking module gps_very_high_loss_output_stream_entity...
Checking module high_level_controller...
Checking module hlqinterface...
Checking module implementation...
Checking module input_pre_processing...
Checking module lat_gps_count_1_sliding_window_entity...
Checking module lat_gps_count_2_sliding_window_entity...
Checking module lat_gps_count_3_sliding_window_entity...
Checking module lat_gps_count_4_sliding_window_entity...
Checking module lat_gps_count_5_sliding_window_entity...
Checking module lat_gps_count_6_sliding_window_entity...
Checking module lat_gps_input_stream_entity...
Checking module low_level_controller...
Checking module monitor...
Checking module queue...
Checking module scheduler...
Checking module time_unit...
Checking module trigger_acc_output_stream_entity...
Checking module trigger_gps_sats_output_stream_entity...
Found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
<suppressed ~174 debug messages>
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~27 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~123 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 108 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell \1566: \push_event_in -> 1'1
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~253 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~567 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~54 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 207 cells.

2.6.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 3 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 4 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 5 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 6 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 7 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 8 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 9 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 10 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 11 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 12 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 13 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 14 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 15 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 16 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 17 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 18 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 19 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 20 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 21 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 22 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 23 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 24 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 25 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 26 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 27 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 28 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 29 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 30 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 31 on \600 ($adff) from module high_level_controller.
Setting constant 0-bit at position 2 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 3 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 4 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 5 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 6 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 7 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 8 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 9 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 10 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 11 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 12 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 13 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 14 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 15 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 16 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 17 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 18 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 19 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 20 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 21 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 22 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 23 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 24 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 25 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 26 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 27 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 28 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 29 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 30 on \2143 ($adff) from module hlqinterface.
Setting constant 0-bit at position 31 on \2143 ($adff) from module hlqinterface.
Setting constant 1-bit at position 0 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 1 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 2 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 3 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 4 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 5 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 6 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 7 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 8 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 9 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 10 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 11 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 12 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 13 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 14 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 15 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 16 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 17 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 18 on \2162 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 19 on \2162 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 0 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 1 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 2 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 3 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 4 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 5 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 6 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 7 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 8 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 9 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 10 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 11 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 12 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 13 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 14 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 15 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 16 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 17 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 18 on \2169 ($dlatch) from module hlqinterface.
Setting constant 1-bit at position 19 on \2169 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 0 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 2 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 3 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 4 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 5 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 6 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 7 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 8 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 9 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 10 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 11 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 12 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 13 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 14 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 15 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 16 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 17 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 18 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 19 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 20 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 21 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 22 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 23 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 24 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 25 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 26 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 27 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 28 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 29 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 30 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 31 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 32 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 33 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 34 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 35 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 36 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 37 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 38 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 39 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 40 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 41 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 42 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 43 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 44 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 45 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 46 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 47 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 48 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 49 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 50 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 51 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 52 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 53 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 54 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 55 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 56 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 57 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 58 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 59 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 60 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 61 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 62 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 63 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 64 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 65 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 66 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 67 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 68 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 69 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 70 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 71 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 72 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 73 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 74 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 75 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 76 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 77 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 78 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 79 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 80 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 81 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 82 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 83 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 84 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 85 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 86 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 87 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 88 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 89 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 90 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 91 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 92 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 93 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 94 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 95 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 96 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 97 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 98 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 99 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 100 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 101 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 102 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 103 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 104 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 105 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 106 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 107 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 108 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 109 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 110 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 111 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 112 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 113 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 114 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 115 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 116 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 117 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 118 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 119 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 120 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 121 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 122 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 123 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 124 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 125 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 126 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 127 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 128 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 129 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 130 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 131 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 132 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 133 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 134 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 135 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 136 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 137 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 138 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 139 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 140 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 141 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 142 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 143 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 144 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 145 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 146 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 147 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 148 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 149 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 150 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 151 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 152 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 153 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 154 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 155 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 156 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 157 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 158 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 159 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 160 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 161 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 162 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 163 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 164 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 165 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 166 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 167 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 168 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 169 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 170 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 171 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 172 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 173 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 174 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 175 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 176 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 177 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 178 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 179 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 180 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 181 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 182 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 183 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 184 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 185 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 186 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 187 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 188 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 189 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 190 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 191 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 192 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 193 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 194 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 195 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 196 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 197 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 198 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 199 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 200 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 201 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 202 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 203 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 204 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 205 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 206 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 207 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 208 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 209 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 210 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 211 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 212 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 213 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 214 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 215 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 216 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 217 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 218 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 219 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 220 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 221 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 222 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 223 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 224 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 225 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 226 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 227 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 228 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 229 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 230 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 231 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 232 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 233 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 234 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 235 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 236 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 237 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 238 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 239 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 240 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 241 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 242 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 243 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 244 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 245 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 246 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 247 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 248 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 249 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 250 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 251 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 252 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 253 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 254 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 255 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 256 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 257 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 258 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 259 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 260 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 261 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 262 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 263 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 264 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 265 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 266 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 267 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 268 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 269 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 270 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 271 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 272 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 273 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 274 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 275 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 276 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 277 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 278 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 279 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 280 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 281 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 282 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 283 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 284 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 285 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 286 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 287 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 288 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 289 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 290 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 291 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 292 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 293 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 294 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 295 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 296 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 297 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 298 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 299 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 300 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 301 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 302 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 303 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 304 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 305 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 306 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 307 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 308 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 309 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 310 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 311 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 312 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 313 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 314 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 315 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 316 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 317 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 318 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 319 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 320 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 321 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 322 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 323 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 324 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 325 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 326 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 327 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 328 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 329 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 330 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 331 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 332 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 333 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 334 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 335 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 336 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 337 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 338 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 339 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 340 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 341 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 342 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 343 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 344 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 345 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 346 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 347 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 348 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 349 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 350 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 351 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 352 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 353 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 354 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 355 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 356 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 357 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 358 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 359 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 360 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 361 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 362 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 363 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 364 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 365 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 366 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 367 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 368 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 369 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 370 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 371 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 372 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 373 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 374 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 375 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 376 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 377 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 378 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 379 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 380 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 381 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 382 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 383 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 384 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 385 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 386 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 387 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 388 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 389 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 390 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 391 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 392 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 393 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 394 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 395 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 396 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 397 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 398 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 399 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 400 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 401 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 402 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 403 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 404 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 405 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 406 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 407 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 408 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 409 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 410 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 411 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 412 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 413 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 414 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 415 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 416 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 417 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 418 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 419 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 420 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 421 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 422 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 423 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 424 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 425 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 426 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 427 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 428 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 429 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 430 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 431 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 432 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 433 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 434 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 435 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 436 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 437 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 438 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 439 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 440 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 441 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 442 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 443 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 444 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 445 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 446 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 447 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 448 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 449 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 450 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 451 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 452 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 453 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 454 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 455 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 456 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 457 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 458 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 459 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 460 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 461 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 462 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 463 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 464 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 465 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 466 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 467 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 468 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 469 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 470 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 471 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 472 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 473 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 474 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 475 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 476 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 477 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 478 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 479 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 480 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 481 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 482 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 483 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 484 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 485 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 486 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 487 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 488 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 489 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 490 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 491 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 492 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 493 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 494 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 495 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 496 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 497 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 498 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 499 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 500 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 501 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 502 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 503 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 504 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 505 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 506 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 507 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 508 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 509 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 510 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 511 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 512 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 513 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 514 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 515 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 516 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 517 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 518 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 519 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 520 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 521 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 522 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 523 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 524 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 525 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 526 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 527 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 528 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 529 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 530 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 531 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 532 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 533 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 534 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 535 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 536 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 537 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 538 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 539 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 540 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 541 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 542 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 543 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 544 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 545 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 546 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 547 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 548 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 549 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 550 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 551 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 552 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 553 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 554 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 555 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 556 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 557 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 558 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 559 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 560 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 561 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 562 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 563 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 564 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 565 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 566 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 567 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 568 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 569 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 570 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 571 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 572 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 573 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 574 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 575 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 576 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 577 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 578 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 579 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 580 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 581 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 582 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 583 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 584 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 585 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 586 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 587 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 588 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 589 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 590 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 591 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 592 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 593 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 594 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 595 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 596 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 597 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 598 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 599 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 600 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 601 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 602 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 603 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 604 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 605 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 606 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 607 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 608 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 609 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 610 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 611 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 612 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 613 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 614 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 615 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 616 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 617 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 618 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 619 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 620 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 621 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 622 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 623 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 624 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 625 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 626 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 627 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 628 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 629 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 630 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 631 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 632 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 633 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 634 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 635 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 636 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 637 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 638 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 639 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 640 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 641 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 642 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 643 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 644 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 645 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 646 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 647 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 648 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 649 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 650 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 651 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 652 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 653 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 654 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 655 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 656 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 657 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 658 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 659 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 660 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 661 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 662 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 663 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 664 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 665 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 666 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 667 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 668 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 669 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 670 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 671 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 672 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 673 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 674 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 675 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 676 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 677 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 678 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 679 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 680 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 681 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 682 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 683 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 684 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 685 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 686 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 687 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 688 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 689 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 690 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 691 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 692 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 693 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 694 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 695 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 696 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 697 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 698 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 699 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 700 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 701 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 702 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 703 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 704 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 705 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 706 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 707 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 708 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 709 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 710 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 711 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 712 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 713 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 714 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 715 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 716 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 717 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 718 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 719 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 720 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 721 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 722 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 723 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 724 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 725 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 726 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 727 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 728 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 729 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 730 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 731 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 732 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 733 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 734 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 735 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 736 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 737 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 738 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 739 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 740 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 741 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 742 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 743 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 744 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 745 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 746 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 747 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 748 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 749 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 750 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 751 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 752 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 753 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 754 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 755 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 756 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 757 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 758 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 759 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 760 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 761 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 762 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 763 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 764 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 765 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 766 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 767 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 768 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 769 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 770 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 771 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 772 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 773 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 774 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 775 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 776 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 777 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 778 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 779 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 780 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 781 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 782 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 783 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 784 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 785 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 786 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 787 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 788 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 789 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 790 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 791 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 792 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 793 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 794 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 795 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 796 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 797 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 798 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 799 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 800 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 801 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 802 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 803 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 804 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 805 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 806 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 807 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 808 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 809 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 810 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 811 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 812 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 813 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 814 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 815 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 816 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 817 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 818 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 819 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 820 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 821 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 822 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 823 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 824 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 825 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 826 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 827 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 828 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 829 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 830 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 831 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 832 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 833 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 834 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 835 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 836 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 837 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 838 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 839 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 840 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 841 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 842 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 843 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 844 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 845 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 846 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 847 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 848 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 849 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 850 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 851 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 852 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 853 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 854 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 855 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 856 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 857 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 858 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 859 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 860 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 861 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 862 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 863 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 864 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 865 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 866 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 867 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 868 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 869 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 870 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 871 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 872 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 873 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 874 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 875 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 876 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 877 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 878 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 879 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 880 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 881 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 882 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 883 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 884 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 885 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 886 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 887 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 888 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 889 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 890 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 891 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 892 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 893 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 894 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 895 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 896 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 897 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 898 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 899 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 900 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 901 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 902 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 903 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 904 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 905 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 906 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 907 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 908 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 909 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 910 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 911 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 912 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 913 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 914 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 915 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 916 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 917 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 918 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 919 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 920 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 921 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 922 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 923 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 924 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 925 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 926 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 927 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 928 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 929 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 930 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 931 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 932 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 933 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 934 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 935 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 936 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 937 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 938 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 939 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 940 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 941 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 942 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 943 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 944 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 945 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 946 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 947 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 948 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 949 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 950 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 951 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 952 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 953 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 954 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 955 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 956 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 957 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 958 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 959 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 960 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 961 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 962 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 963 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 964 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 965 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 966 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 967 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 968 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 969 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 970 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 971 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 972 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 973 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 974 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 975 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 976 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 977 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 978 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 979 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 980 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 981 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 982 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 983 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 984 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 985 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 986 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 987 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 988 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 989 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 990 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 991 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 992 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 993 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 994 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 995 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 996 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 997 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 998 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 999 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1000 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1001 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1002 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1003 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1004 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1005 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1006 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1007 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1008 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1009 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1010 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1011 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1012 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1013 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1014 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1015 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1016 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1017 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1018 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1019 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1020 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1021 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1022 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1023 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1024 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1025 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1026 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1027 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1028 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1029 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1030 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1031 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1032 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1033 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1034 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1035 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1036 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1037 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1038 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1039 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1040 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1041 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1042 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1043 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1044 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1045 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1046 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1047 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1048 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1049 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1050 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1051 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1052 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1053 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1054 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1055 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1056 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1057 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1058 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1059 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1060 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1061 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1062 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1063 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1064 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1065 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1066 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1067 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1068 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1069 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1070 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1071 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1072 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1073 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1074 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1075 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1076 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1077 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1078 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1079 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1080 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1081 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1082 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1083 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1084 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1085 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1086 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1087 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1088 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1089 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1090 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1091 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1092 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1093 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1094 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1095 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1096 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1097 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1098 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1099 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1100 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1101 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1102 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1103 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1104 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1105 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1106 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1107 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1108 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1109 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1110 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1111 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1112 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1113 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1114 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1115 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1116 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1117 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1118 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1119 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1120 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1121 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1122 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1123 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1124 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1125 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1126 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1127 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1128 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1129 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1130 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1131 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1132 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1133 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1134 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1135 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1136 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1137 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1138 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1139 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1140 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1141 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1142 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1143 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1144 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1145 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1146 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1147 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1148 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1149 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1150 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1151 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1152 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1153 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1154 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1155 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1156 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1157 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1158 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1159 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1160 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1161 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1162 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1163 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1164 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1165 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1166 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1167 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1168 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1169 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1170 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1171 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1172 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1173 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1174 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1175 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1176 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1177 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1178 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1179 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1180 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1181 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1182 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1183 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1184 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1185 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1186 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1187 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1188 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1189 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1190 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1191 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1192 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1193 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1194 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1195 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1196 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1197 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1198 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1199 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1200 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1201 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1202 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1203 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1204 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1205 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1206 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1207 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1208 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1209 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1210 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1211 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1212 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1213 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1214 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1215 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1216 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1217 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1218 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1219 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1220 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1221 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1222 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1223 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1224 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1225 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1226 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1227 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1228 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1229 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1230 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1231 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1232 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1233 on \1680 ($dlatch) from module scheduler.
Setting constant 1-bit at position 1234 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1235 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1236 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1237 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1238 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1239 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1240 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1241 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1242 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1243 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1244 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1245 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1246 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1247 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1248 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1249 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1250 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1251 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1252 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1253 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1254 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1255 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1256 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1257 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1258 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1259 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1260 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1261 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1262 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1263 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1264 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1265 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1266 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1267 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1268 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1269 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1270 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1271 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1272 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1273 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1274 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1275 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1276 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1277 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1278 on \1680 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1279 on \1680 ($dlatch) from module scheduler.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 0 unused cells and 297 unused wires.
<suppressed ~3 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
<suppressed ~35 debug messages>
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
<suppressed ~19 debug messages>
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~261 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.6.13. Executing OPT_DFF pass (perform DFF optimizations).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 4 unused cells and 58 unused wires.
<suppressed ~7 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.6.16. Rerunning OPT passes. (Maybe there is more to do..)

2.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~260 debug messages>

2.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.6.20. Executing OPT_DFF pass (perform DFF optimizations).

2.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.6.23. Finished OPT passes. (There is nothing left to do.)

2.7. Executing FSM pass (extract and optimize FSM).

2.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register low_level_controller.current_state.

2.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\current_state' from module `\low_level_controller'.
  found $adff cell for state register: \1493
  root of input selection tree: $auto$ghdl.cc:806:import_module$485
  found reset state: 0 (from async reset)
  found ctrl input: $auto$ghdl.cc:806:import_module$472
  found ctrl input: $auto$ghdl.cc:806:import_module$473
  found ctrl input: $auto$ghdl.cc:806:import_module$475
  found ctrl input: \data_available
  found state code: 1
  found state code: 2
  found ctrl output: $auto$ghdl.cc:806:import_module$471
  found ctrl output: $auto$ghdl.cc:806:import_module$473
  found ctrl output: $auto$ghdl.cc:806:import_module$474
  ctrl inputs: { $auto$ghdl.cc:806:import_module$475 $auto$ghdl.cc:806:import_module$472 \data_available }
  ctrl outputs: { $auto$ghdl.cc:806:import_module$485 $auto$ghdl.cc:806:import_module$474 $auto$ghdl.cc:806:import_module$473 $auto$ghdl.cc:806:import_module$471 }
  transition:          0 3'00- ->          0 35'00000000000000000000000000000000001
  transition:          0 3'100 ->          0 35'00000000000000000000000000000000001
  transition:          0 3'101 ->          1 35'00000000000000000000000000000001001
  transition:          0 3'-1- ->          1 35'00000000000000000000000000000001001
  transition:          2 3'00- ->          2 35'00000000000000000000000000000010100
  transition:          2 3'100 ->          0 35'00000000000000000000000000000000100
  transition:          2 3'101 ->          1 35'00000000000000000000000000000001100
  transition:          2 3'-1- ->          1 35'00000000000000000000000000000001100
  transition:          1 3'-0- ->          2 35'00000000000000000000000000000010010
  transition:          1 3'-1- ->          1 35'00000000000000000000000000000001010

2.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\current_state$2314' from module `\low_level_controller'.

2.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

2.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\current_state$2314' from module `\low_level_controller'.
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [0].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [1].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [2].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [3].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [4].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [5].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [6].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [7].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [8].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [9].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [10].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [11].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [12].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [13].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [14].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [15].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [16].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [17].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [18].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [19].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [20].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [21].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [22].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [23].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [24].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [25].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [26].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [27].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [28].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [29].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [30].
  Removing unused output signal $auto$ghdl.cc:806:import_module$485 [31].

2.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\current_state$2314' from module `\low_level_controller' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> --1
  00000000000000000000000000000010 -> -1-
  00000000000000000000000000000001 -> 1--

2.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\current_state$2314' from module `low_level_controller':
-------------------------------------

  Information on FSM $fsm$\current_state$2314 (\current_state):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \data_available
    1: $auto$ghdl.cc:806:import_module$472
    2: $auto$ghdl.cc:806:import_module$475

  Output signals:
    0: $auto$ghdl.cc:806:import_module$471
    1: $auto$ghdl.cc:806:import_module$473
    2: $auto$ghdl.cc:806:import_module$474

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'100   ->     0 3'001
      1:     0 3'00-   ->     0 3'001
      2:     0 3'101   ->     2 3'001
      3:     0 3'-1-   ->     2 3'001
      4:     1 3'100   ->     0 3'100
      5:     1 3'00-   ->     1 3'100
      6:     1 3'101   ->     2 3'100
      7:     1 3'-1-   ->     2 3'100
      8:     2 3'-0-   ->     1 3'010
      9:     2 3'-1-   ->     2 3'010

-------------------------------------

2.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\current_state$2314' from module `\low_level_controller'.

2.8. Executing OPT pass (performing simple optimizations).

2.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
<suppressed ~4 debug messages>
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
<suppressed ~6 debug messages>
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 2 cells.

2.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~259 debug messages>

2.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on \4155 ($adff) from module acceleration_x_changes_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1637, Q = \data_valid).
Adding EN signal on \4154 ($adff) from module acceleration_x_changes_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1636, Q = \data).
Adding EN signal on \4153 ($adff) from module acceleration_x_changes_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1631, Q = \eval_done).
Adding EN signal on \4152 ($adff) from module acceleration_x_changes_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1634, Q = \pe_done).
Adding EN signal on \5138 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = \count_buckets [6335:0], Q = \count_buckets [6399:64]).
Adding EN signal on \5138 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1922, Q = \count_buckets [63:0]).
Adding EN signal on \5135 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1909, Q = \request_done).
Adding EN signal on \5134 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1913, Q = \upd_done).
Adding EN signal on \5133 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1919, Q = \evict_done).
Adding EN signal on \5132 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5131 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1896, Q = \sw_data).
Adding EN signal on \5130 ($adff) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1790, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$2411 ($adffe) from module acceleration_x_direction_change_count_0_sliding_window_entity.
Adding EN signal on \4089 ($adff) from module acceleration_x_direction_change_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1616, Q = \data_valid).
Adding EN signal on \4088 ($adff) from module acceleration_x_direction_change_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1615, Q = \data).
Adding EN signal on \4087 ($adff) from module acceleration_x_direction_change_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1610, Q = \eval_done).
Adding EN signal on \4086 ($adff) from module acceleration_x_direction_change_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1613, Q = \pe_done).
Adding EN signal on \3462 ($adff) from module acceleration_x_input_stream_entity (D = 1'1, Q = \data_valid).
Adding EN signal on \3460 ($adff) from module acceleration_x_input_stream_entity (D = \data_in, Q = \data).
Adding EN signal on \3458 ($adff) from module acceleration_x_input_stream_entity (D = $auto$ghdl.cc:806:import_module$1491, Q = \done).
Adding EN signal on \3632 ($adff) from module acceleration_x_periodic_output_stream_entity (D = \data_valid [0], Q = \data_valid [1]).
Adding EN signal on \3632 ($adff) from module acceleration_x_periodic_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1535, Q = \data_valid [0]).
Adding EN signal on \3631 ($adff) from module acceleration_x_periodic_output_stream_entity (D = \data [63:0], Q = \data [127:64]).
Adding EN signal on \3631 ($adff) from module acceleration_x_periodic_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1533, Q = \data [63:0]).
Adding EN signal on \3630 ($adff) from module acceleration_x_periodic_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1528, Q = \eval_done).
Adding EN signal on \3629 ($adff) from module acceleration_x_periodic_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1531, Q = \pe_done).
Adding EN signal on \3778 ($adff) from module acceleration_x_rising_output_stream_entity (D = \data_valid [0], Q = \data_valid [1]).
Adding EN signal on \3778 ($adff) from module acceleration_x_rising_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1562, Q = \data_valid [0]).
Adding EN signal on \3777 ($adff) from module acceleration_x_rising_output_stream_entity (D = \data [0], Q = \data [1]).
Adding EN signal on \3777 ($adff) from module acceleration_x_rising_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1560, Q = \data [0]).
Adding EN signal on \3776 ($adff) from module acceleration_x_rising_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1555, Q = \eval_done).
Adding EN signal on \3775 ($adff) from module acceleration_x_rising_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1558, Q = \pe_done).
Adding EN signal on \3924 ($adff) from module acceleration_x_sinking_output_stream_entity (D = \data_valid [0], Q = \data_valid [1]).
Adding EN signal on \3924 ($adff) from module acceleration_x_sinking_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1589, Q = \data_valid [0]).
Adding EN signal on \3923 ($adff) from module acceleration_x_sinking_output_stream_entity (D = \data [0], Q = \data [1]).
Adding EN signal on \3923 ($adff) from module acceleration_x_sinking_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1587, Q = \data [0]).
Adding EN signal on \3922 ($adff) from module acceleration_x_sinking_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1582, Q = \eval_done).
Adding EN signal on \3921 ($adff) from module acceleration_x_sinking_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1585, Q = \pe_done).
Adding EN signal on \155 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$37, Q = \tclk_count).
Adding EN signal on \153 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$33, Q = \eclk_count).
Adding EN signal on \151 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$43, Q = \tclk_reg).
Adding EN signal on \150 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$42, Q = \eclk_reg).
Adding EN signal on \3428 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1201, Q = \valid_reg).
Adding EN signal on \3426 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1387, Q = \evaluator_done).
Adding EN signal on \3423 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1434, Q = \lat_gps_count_6_request).
Adding EN signal on \3422 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1433, Q = \lat_gps_count_6_upd).
Adding EN signal on \3421 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1432, Q = \lat_gps_count_6_evict).
Adding EN signal on \3420 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1431, Q = \lat_gps_count_5_request).
Adding EN signal on \3419 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1430, Q = \lat_gps_count_5_upd).
Adding EN signal on \3418 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1429, Q = \lat_gps_count_5_evict).
Adding EN signal on \3417 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1428, Q = \lat_gps_count_4_request).
Adding EN signal on \3416 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1427, Q = \lat_gps_count_4_upd).
Adding EN signal on \3415 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1426, Q = \lat_gps_count_4_evict).
Adding EN signal on \3414 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1425, Q = \lat_gps_count_3_request).
Adding EN signal on \3413 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1424, Q = \lat_gps_count_3_upd).
Adding EN signal on \3412 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1423, Q = \lat_gps_count_3_evict).
Adding EN signal on \3411 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1422, Q = \lat_gps_count_2_request).
Adding EN signal on \3410 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1421, Q = \lat_gps_count_2_upd).
Adding EN signal on \3409 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1420, Q = \lat_gps_count_2_evict).
Adding EN signal on \3408 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1419, Q = \lat_gps_count_1_request).
Adding EN signal on \3407 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1418, Q = \lat_gps_count_1_upd).
Adding EN signal on \3406 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1417, Q = \lat_gps_count_1_evict).
Adding EN signal on \3405 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1416, Q = \acceleration_x_direction_change_count_0_request).
Adding EN signal on \3404 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1415, Q = \acceleration_x_direction_change_count_0_upd).
Adding EN signal on \3403 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1414, Q = \acceleration_x_direction_change_count_0_evict).
Adding EN signal on \3402 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1413, Q = \trigger_gps_sats_eval).
Adding EN signal on \3401 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1412, Q = \trigger_gps_sats_pe).
Adding EN signal on \3400 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1411, Q = \gps_very_high_loss_eval).
Adding EN signal on \3399 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1410, Q = \gps_very_high_loss_pe).
Adding EN signal on \3398 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1409, Q = \gps_high_loss_eval).
Adding EN signal on \3397 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1408, Q = \gps_high_loss_pe).
Adding EN signal on \3396 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1407, Q = \gps_medium_loss_eval).
Adding EN signal on \3395 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1406, Q = \gps_medium_loss_pe).
Adding EN signal on \3394 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1405, Q = \gps_missed_beat_eval).
Adding EN signal on \3393 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1404, Q = \gps_missed_beat_pe).
Adding EN signal on \3392 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1403, Q = \trigger_acc_eval).
Adding EN signal on \3391 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1402, Q = \trigger_acc_pe).
Adding EN signal on \3390 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1401, Q = \acceleration_x_changes_eval).
Adding EN signal on \3389 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1400, Q = \acceleration_x_changes_pe).
Adding EN signal on \3388 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1399, Q = \acceleration_x_direction_change_eval).
Adding EN signal on \3387 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1398, Q = \acceleration_x_direction_change_pe).
Adding EN signal on \3386 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1397, Q = \acceleration_x_sinking_eval).
Adding EN signal on \3385 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1396, Q = \acceleration_x_sinking_pe).
Adding EN signal on \3384 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1395, Q = \acceleration_x_rising_eval).
Adding EN signal on \3383 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1394, Q = \acceleration_x_rising_pe).
Adding EN signal on \3382 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1393, Q = \acceleration_x_periodic_eval).
Adding EN signal on \3381 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1392, Q = \acceleration_x_periodic_pe).
Adding EN signal on \3380 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1391, Q = \lat_gps_upd).
Adding EN signal on \3379 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1390, Q = \gps_sats_upd).
Adding EN signal on \3378 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$1389, Q = \acceleration_x_upd).
Adding EN signal on \4615 ($adff) from module gps_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1735, Q = \data_valid).
Adding EN signal on \4614 ($adff) from module gps_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1734, Q = \data).
Adding EN signal on \4613 ($adff) from module gps_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1729, Q = \eval_done).
Adding EN signal on \4612 ($adff) from module gps_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1732, Q = \pe_done).
Adding EN signal on \4478 ($adff) from module gps_medium_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1709, Q = \data_valid).
Adding EN signal on \4477 ($adff) from module gps_medium_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1708, Q = \data).
Adding EN signal on \4476 ($adff) from module gps_medium_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1703, Q = \eval_done).
Adding EN signal on \4475 ($adff) from module gps_medium_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1706, Q = \pe_done).
Adding EN signal on \4341 ($adff) from module gps_missed_beat_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1683, Q = \data_valid).
Adding EN signal on \4340 ($adff) from module gps_missed_beat_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1682, Q = \data).
Adding EN signal on \4339 ($adff) from module gps_missed_beat_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1677, Q = \eval_done).
Adding EN signal on \4338 ($adff) from module gps_missed_beat_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1680, Q = \pe_done).
Adding EN signal on \3495 ($adff) from module gps_sats_input_stream_entity (D = 1'1, Q = \data_valid).
Adding EN signal on \3493 ($adff) from module gps_sats_input_stream_entity (D = \data_in, Q = \data).
Adding EN signal on \3491 ($adff) from module gps_sats_input_stream_entity (D = $auto$ghdl.cc:806:import_module$1501, Q = \done).
Adding EN signal on \4708 ($adff) from module gps_very_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1758, Q = \data_valid).
Adding EN signal on \4707 ($adff) from module gps_very_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1757, Q = \data).
Adding EN signal on \4706 ($adff) from module gps_very_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1752, Q = \eval_done).
Adding EN signal on \4705 ($adff) from module gps_very_high_loss_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1755, Q = \pe_done).
Adding EN signal on \2175 ($adff) from module hlqinterface (D = $auto$ghdl.cc:806:import_module$603, Q = \time_to_queue).
Adding EN signal on \2174 ($adff) from module hlqinterface (D = $auto$ghdl.cc:806:import_module$574, Q = \last_deadline_id).
Adding EN signal on \2149 ($adff) from module hlqinterface (D = \lat_gps_data_in, Q = \lat_gps_data_push).
Adding EN signal on \2147 ($adff) from module hlqinterface (D = \gps_sats_data_in, Q = \gps_sats_data_push).
Adding EN signal on \2145 ($adff) from module hlqinterface (D = \acceleration_x_data_in, Q = \acceleration_x_data_push).
Adding EN signal on \5473 ($adff) from module lat_gps_count_1_sliding_window_entity (D = \count_buckets [6975:0], Q = \count_buckets [7039:64]).
Adding EN signal on \5473 ($adff) from module lat_gps_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2077, Q = \count_buckets [63:0]).
Adding EN signal on \5470 ($adff) from module lat_gps_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2064, Q = \request_done).
Adding EN signal on \5469 ($adff) from module lat_gps_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2068, Q = \upd_done).
Adding EN signal on \5468 ($adff) from module lat_gps_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2074, Q = \evict_done).
Adding EN signal on \5467 ($adff) from module lat_gps_count_1_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5466 ($adff) from module lat_gps_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2051, Q = \sw_data).
Adding EN signal on \5465 ($adff) from module lat_gps_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$1935, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$2818 ($adffe) from module lat_gps_count_1_sliding_window_entity.
Adding EN signal on \5579 ($adff) from module lat_gps_count_2_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2123, Q = \count_buckets).
Adding EN signal on \5576 ($adff) from module lat_gps_count_2_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2110, Q = \request_done).
Adding EN signal on \5575 ($adff) from module lat_gps_count_2_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2114, Q = \upd_done).
Adding EN signal on \5574 ($adff) from module lat_gps_count_2_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2120, Q = \evict_done).
Adding EN signal on \5573 ($adff) from module lat_gps_count_2_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5572 ($adff) from module lat_gps_count_2_sliding_window_entity (D = \count_buckets, Q = \sw_data).
Adding EN signal on \5571 ($adff) from module lat_gps_count_2_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2090, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$2869 ($adffe) from module lat_gps_count_2_sliding_window_entity.
Adding EN signal on \5685 ($adff) from module lat_gps_count_3_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2168, Q = \count_buckets).
Adding EN signal on \5682 ($adff) from module lat_gps_count_3_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2155, Q = \request_done).
Adding EN signal on \5681 ($adff) from module lat_gps_count_3_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2159, Q = \upd_done).
Adding EN signal on \5680 ($adff) from module lat_gps_count_3_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2165, Q = \evict_done).
Adding EN signal on \5679 ($adff) from module lat_gps_count_3_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5678 ($adff) from module lat_gps_count_3_sliding_window_entity (D = \count_buckets, Q = \sw_data).
Adding EN signal on \5677 ($adff) from module lat_gps_count_3_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2135, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$2920 ($adffe) from module lat_gps_count_3_sliding_window_entity.
Adding EN signal on \5791 ($adff) from module lat_gps_count_4_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2213, Q = \count_buckets).
Adding EN signal on \5788 ($adff) from module lat_gps_count_4_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2200, Q = \request_done).
Adding EN signal on \5787 ($adff) from module lat_gps_count_4_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2204, Q = \upd_done).
Adding EN signal on \5786 ($adff) from module lat_gps_count_4_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2210, Q = \evict_done).
Adding EN signal on \5785 ($adff) from module lat_gps_count_4_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5784 ($adff) from module lat_gps_count_4_sliding_window_entity (D = \count_buckets, Q = \sw_data).
Adding EN signal on \5783 ($adff) from module lat_gps_count_4_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2180, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$2971 ($adffe) from module lat_gps_count_4_sliding_window_entity.
Adding EN signal on \5897 ($adff) from module lat_gps_count_5_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2258, Q = \count_buckets).
Adding EN signal on \5894 ($adff) from module lat_gps_count_5_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2245, Q = \request_done).
Adding EN signal on \5893 ($adff) from module lat_gps_count_5_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2249, Q = \upd_done).
Adding EN signal on \5892 ($adff) from module lat_gps_count_5_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2255, Q = \evict_done).
Adding EN signal on \5891 ($adff) from module lat_gps_count_5_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5890 ($adff) from module lat_gps_count_5_sliding_window_entity (D = \count_buckets, Q = \sw_data).
Adding EN signal on \5889 ($adff) from module lat_gps_count_5_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2225, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$3022 ($adffe) from module lat_gps_count_5_sliding_window_entity.
Adding EN signal on \6003 ($adff) from module lat_gps_count_6_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2303, Q = \count_buckets).
Adding EN signal on \6000 ($adff) from module lat_gps_count_6_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2290, Q = \request_done).
Adding EN signal on \5999 ($adff) from module lat_gps_count_6_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2294, Q = \upd_done).
Adding EN signal on \5998 ($adff) from module lat_gps_count_6_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2300, Q = \evict_done).
Adding EN signal on \5997 ($adff) from module lat_gps_count_6_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \5996 ($adff) from module lat_gps_count_6_sliding_window_entity (D = \count_buckets, Q = \sw_data).
Adding EN signal on \5995 ($adff) from module lat_gps_count_6_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$2270, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$3073 ($adffe) from module lat_gps_count_6_sliding_window_entity.
Adding EN signal on \3528 ($adff) from module lat_gps_input_stream_entity (D = 1'1, Q = \data_valid).
Adding EN signal on \3526 ($adff) from module lat_gps_input_stream_entity (D = \data_in, Q = \data).
Adding EN signal on \3524 ($adff) from module lat_gps_input_stream_entity (D = $auto$ghdl.cc:806:import_module$1511, Q = \done).
Adding EN signal on \1494 ($adff) from module low_level_controller (D = $auto$ghdl.cc:806:import_module$486, Q = \pop_data).
Adding EN signal on \1492 ($adff) from module low_level_controller (D = $auto$ghdl.cc:806:import_module$484, Q = \input_clk).
Adding EN signal on \1289 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$340, Q = \pop_done).
Adding EN signal on \1288 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$339, Q = \push_done).
Adding EN signal on \1286 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$291, Q = \size).
Adding EN signal on \1284 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$290, Q = \av).
Adding EN signal on \1282 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$330, Q = \trigger_gps_sats_en).
Adding EN signal on \1280 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$329, Q = \trigger_gps_sats_en_reg).
Adding EN signal on \1278 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$328, Q = \gps_very_high_loss_en).
Adding EN signal on \1276 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$327, Q = \gps_very_high_loss_en_reg).
Adding EN signal on \1274 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$326, Q = \gps_high_loss_en).
Adding EN signal on \1272 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$325, Q = \gps_high_loss_en_reg).
Adding EN signal on \1270 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$324, Q = \gps_medium_loss_en).
Adding EN signal on \1268 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$323, Q = \gps_medium_loss_en_reg).
Adding EN signal on \1266 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$322, Q = \gps_missed_beat_en).
Adding EN signal on \1264 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$321, Q = \gps_missed_beat_en_reg).
Adding EN signal on \1262 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$320, Q = \trigger_acc_en).
Adding EN signal on \1260 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$319, Q = \trigger_acc_en_reg).
Adding EN signal on \1258 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$318, Q = \acceleration_x_changes_en).
Adding EN signal on \1256 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$317, Q = \acceleration_x_changes_en_reg).
Adding EN signal on \1254 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$316, Q = \acceleration_x_direction_change_en).
Adding EN signal on \1252 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$315, Q = \acceleration_x_direction_change_en_reg).
Adding EN signal on \1250 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$314, Q = \acceleration_x_sinking_en).
Adding EN signal on \1248 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$313, Q = \acceleration_x_sinking_en_reg).
Adding EN signal on \1246 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$312, Q = \acceleration_x_rising_en).
Adding EN signal on \1244 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$311, Q = \acceleration_x_rising_en_reg).
Adding EN signal on \1242 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$310, Q = \acceleration_x_periodic_en).
Adding EN signal on \1240 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$309, Q = \acceleration_x_periodic_en_reg).
Adding EN signal on \1238 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$308, Q = \lat_gps_en).
Adding EN signal on \1236 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$307, Q = \lat_gps_data).
Adding EN signal on \1234 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$306, Q = \lat_gps_en_reg).
Adding EN signal on \1232 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$305, Q = \lat_gps_data_reg).
Adding EN signal on \1230 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$304, Q = \gps_sats_en).
Adding EN signal on \1228 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$303, Q = \gps_sats_data).
Adding EN signal on \1226 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$302, Q = \gps_sats_en_reg).
Adding EN signal on \1224 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$301, Q = \gps_sats_data_reg).
Adding EN signal on \1222 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$300, Q = \acceleration_x_en).
Adding EN signal on \1220 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$299, Q = \acceleration_x_data).
Adding EN signal on \1218 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$298, Q = \acceleration_x_en_reg).
Adding EN signal on \1216 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$297, Q = \acceleration_x_data_reg).
Adding EN signal on \1214 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$296, Q = \time_data).
Adding EN signal on \1212 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$295, Q = \time_data_reg).
Adding EN signal on \1210 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$253, Q = \is_full).
Adding EN signal on \1685 ($adff) from module scheduler (D = \time_of_next_deadline, Q = \time_last_deadline).
Adding EN signal on \1679 ($adff) from module scheduler (D = $auto$ghdl.cc:806:import_module$521, Q = \time_of_next_deadline).
Adding EN signal on \4248 ($adff) from module trigger_acc_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1660, Q = \data_valid).
Adding EN signal on \4247 ($adff) from module trigger_acc_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1659, Q = \data).
Adding EN signal on \4246 ($adff) from module trigger_acc_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1654, Q = \eval_done).
Adding EN signal on \4245 ($adff) from module trigger_acc_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1657, Q = \pe_done).
Adding EN signal on \4825 ($adff) from module trigger_gps_sats_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1782, Q = \data_valid).
Adding EN signal on \4824 ($adff) from module trigger_gps_sats_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1781, Q = \data).
Adding EN signal on \4823 ($adff) from module trigger_gps_sats_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1776, Q = \eval_done).
Adding EN signal on \4822 ($adff) from module trigger_gps_sats_output_stream_entity (D = $auto$ghdl.cc:806:import_module$1779, Q = \pe_done).

2.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 172 unused cells and 181 unused wires.
<suppressed ~199 debug messages>

2.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module acceleration_x_direction_change_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module acceleration_x_rising_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module acceleration_x_sinking_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~2 debug messages>
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module gps_medium_loss_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module gps_missed_beat_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module high_level_controller.
Optimizing module hlqinterface.
<suppressed ~1 debug messages>
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module lat_gps_count_2_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module lat_gps_count_3_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module lat_gps_count_4_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module lat_gps_count_5_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module lat_gps_count_6_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
<suppressed ~2 debug messages>
Optimizing module monitor.
Optimizing module queue.
<suppressed ~41 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module trigger_gps_sats_output_stream_entity.
<suppressed ~4 debug messages>

2.8.9. Rerunning OPT passes. (Maybe there is more to do..)

2.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

2.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
<suppressed ~231 debug messages>
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~12 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~390 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
<suppressed ~6 debug messages>
Removed a total of 275 cells.

2.8.13. Executing OPT_DFF pass (perform DFF optimizations).

2.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 0 unused cells and 264 unused wires.
<suppressed ~21 debug messages>

2.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.8.16. Rerunning OPT passes. (Maybe there is more to do..)

2.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~229 debug messages>

2.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.8.20. Executing OPT_DFF pass (perform DFF optimizations).

2.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.8.23. Finished OPT passes. (There is nothing left to do.)

2.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell acceleration_x_direction_change_count_0_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$2379 ($ne).
Removed top 45 bits (of 64) from port B of cell acceleration_x_direction_change_count_0_sliding_window_entity.\4838 ($add).
Removed top 6336 bits (of 6400) from mux cell acceleration_x_direction_change_count_0_sliding_window_entity.\4853 ($mux).
Removed top 63 bits (of 64) from port B of cell acceleration_x_direction_change_count_0_sliding_window_entity.\4859 ($add).
Removed top 6336 bits (of 6400) from wire acceleration_x_direction_change_count_0_sliding_window_entity.$auto$ghdl.cc:806:import_module$1792.
Removed top 1 bits (of 2) from port B of cell acceleration_x_input_stream_entity.$auto$opt_dff.cc:195:make_patterns_logic$2450 ($ne).
Removed top 60 bits (of 64) from port B of cell acceleration_x_rising_output_stream_entity.\3667 ($gt).
Removed top 60 bits (of 64) from port B of cell acceleration_x_sinking_output_stream_entity.\3813 ($lt).
Removed top 28 bits (of 32) from port B of cell clock_pre_processing.\106 ($eq).
Removed top 31 bits (of 32) from port B of cell clock_pre_processing.\108 ($add).
Removed top 30 bits (of 32) from port B of cell clock_pre_processing.\114 ($eq).
Removed top 31 bits (of 32) from port B of cell clock_pre_processing.\116 ($add).
Removed top 29 bits (of 32) from port B of cell clock_pre_processing.\122 ($eq).
Removed top 31 bits (of 32) from port B of cell clock_pre_processing.\126 ($eq).
Removed top 1 bits (of 2) from port B of cell clock_pre_processing.$auto$opt_dff.cc:195:make_patterns_logic$2523 ($ne).
Removed top 1 bits (of 2) from port B of cell clock_pre_processing.$auto$opt_dff.cc:195:make_patterns_logic$2530 ($ne).
Removed top 1 bits (of 2) from port B of cell evaluator.$auto$opt_dff.cc:195:make_patterns_logic$2539 ($ne).
Removed top 60 bits (of 64) from port B of cell gps_high_loss_output_stream_entity.\4504 ($lt).
Removed top 61 bits (of 64) from port B of cell gps_high_loss_output_stream_entity.\4514 ($ge).
Removed top 60 bits (of 64) from port B of cell gps_medium_loss_output_stream_entity.\4367 ($lt).
Removed top 60 bits (of 64) from port B of cell gps_medium_loss_output_stream_entity.\4377 ($ge).
Removed top 63 bits (of 64) from port B of cell gps_missed_beat_output_stream_entity.\4270 ($lt).
Removed top 1 bits (of 2) from port B of cell gps_sats_input_stream_entity.$auto$opt_dff.cc:195:make_patterns_logic$2739 ($ne).
Removed top 61 bits (of 64) from port B of cell gps_very_high_loss_output_stream_entity.\4637 ($lt).
Removed top 30 bits (of 32) from port A of cell high_level_controller.\577 ($add).
Removed top 31 bits (of 32) from port B of cell high_level_controller.\577 ($add).
Removed top 30 bits (of 32) from port Y of cell high_level_controller.\577 ($add).
Removed top 30 bits (of 32) from wire high_level_controller.$auto$ghdl.cc:806:import_module$165.
Removed top 30 bits (of 32) from wire high_level_controller.hlc_clk_count.
Removed top 26 bits (of 32) from port B of cell hlqinterface.\1972 ($modfloor).
Removed top 30 bits (of 32) from port A of cell hlqinterface.\1963 ($add).
Removed top 31 bits (of 32) from port B of cell hlqinterface.\1963 ($add).
Removed top 30 bits (of 32) from port Y of cell hlqinterface.\1963 ($add).
Removed top 31 bits (of 32) from port B of cell hlqinterface.\1970 ($add).
Removed top 30 bits (of 32) from wire hlqinterface.$auto$ghdl.cc:806:import_module$570.
Removed top 30 bits (of 32) from wire hlqinterface.clock_state_machine.
Removed top 1 bits (of 32) from wire hlqinterface.last_deadline_id.
Removed top 49 bits (of 64) from wire hlqinterface.time_to_queue.
Removed top 1 bits (of 2) from port B of cell lat_gps_count_1_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$2786 ($ne).
Removed top 45 bits (of 64) from port B of cell lat_gps_count_1_sliding_window_entity.\5153 ($add).
Removed top 6976 bits (of 7040) from mux cell lat_gps_count_1_sliding_window_entity.\5168 ($mux).
Removed top 63 bits (of 64) from port B of cell lat_gps_count_1_sliding_window_entity.\5174 ($add).
Removed top 6976 bits (of 7040) from wire lat_gps_count_1_sliding_window_entity.$auto$ghdl.cc:806:import_module$1937.
Removed top 1 bits (of 2) from port B of cell lat_gps_count_2_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$2837 ($ne).
Removed top 40 bits (of 64) from port B of cell lat_gps_count_2_sliding_window_entity.\5488 ($add).
Removed top 63 bits (of 64) from port B of cell lat_gps_count_2_sliding_window_entity.\5505 ($add).
Removed top 1 bits (of 2) from port B of cell lat_gps_count_3_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$2888 ($ne).
Removed top 40 bits (of 64) from port B of cell lat_gps_count_3_sliding_window_entity.\5594 ($add).
Removed top 63 bits (of 64) from port B of cell lat_gps_count_3_sliding_window_entity.\5611 ($add).
Removed top 1 bits (of 2) from port B of cell lat_gps_count_4_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$2939 ($ne).
Removed top 40 bits (of 64) from port B of cell lat_gps_count_4_sliding_window_entity.\5700 ($add).
Removed top 63 bits (of 64) from port B of cell lat_gps_count_4_sliding_window_entity.\5717 ($add).
Removed top 1 bits (of 2) from port B of cell lat_gps_count_5_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$2990 ($ne).
Removed top 40 bits (of 64) from port B of cell lat_gps_count_5_sliding_window_entity.\5806 ($add).
Removed top 63 bits (of 64) from port B of cell lat_gps_count_5_sliding_window_entity.\5823 ($add).
Removed top 1 bits (of 2) from port B of cell lat_gps_count_6_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$3041 ($ne).
Removed top 40 bits (of 64) from port B of cell lat_gps_count_6_sliding_window_entity.\5912 ($add).
Removed top 63 bits (of 64) from port B of cell lat_gps_count_6_sliding_window_entity.\5929 ($add).
Removed top 1 bits (of 2) from port B of cell lat_gps_input_stream_entity.$auto$opt_dff.cc:195:make_patterns_logic$3092 ($ne).
Removed top 31 bits (of 32) from port B of cell queue.\634 ($gt).
Removed top 29 bits (of 32) from port B of cell queue.\637 ($lt).
Removed top 31 bits (of 32) from port B of cell queue.\676 ($sub).
Removed top 31 bits (of 32) from port B of cell queue.\807 ($add).
Removed top 31 bits (of 32) from port B of cell queue.\810 ($eq).
Removed top 30 bits (of 32) from port B of cell queue.\917 ($gt).
Removed top 45 bits (of 64) from port B of cell scheduler.\1652 ($add).
Removed top 58 bits (of 64) from port B of cell time_unit.\1617 ($add).
Removed top 61 bits (of 64) from port B of cell trigger_acc_output_stream_entity.\4177 ($gt).
Removed top 61 bits (of 64) from port B of cell trigger_gps_sats_output_stream_entity.\4739 ($lt).

2.10. Executing PEEPOPT pass (run peephole optimizers).

2.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 0 unused cells and 7 unused wires.
<suppressed ~4 debug messages>

2.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module acceleration_x_changes_output_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module acceleration_x_direction_change_count_0_sliding_window_entity:
  creating $macc model for \4838 ($add).
  creating $macc model for \4859 ($add).
  creating $macc model for \4864 ($add).
  creating $macc model for \4866 ($add).
  creating $macc model for \4868 ($add).
  creating $macc model for \4870 ($add).
  creating $macc model for \4872 ($add).
  creating $macc model for \4874 ($add).
  creating $macc model for \4876 ($add).
  creating $macc model for \4878 ($add).
  creating $macc model for \4880 ($add).
  creating $macc model for \4882 ($add).
  creating $macc model for \4884 ($add).
  creating $macc model for \4886 ($add).
  creating $macc model for \4888 ($add).
  creating $macc model for \4890 ($add).
  creating $macc model for \4892 ($add).
  creating $macc model for \4894 ($add).
  creating $macc model for \4896 ($add).
  creating $macc model for \4898 ($add).
  creating $macc model for \4900 ($add).
  creating $macc model for \4902 ($add).
  creating $macc model for \4904 ($add).
  creating $macc model for \4906 ($add).
  creating $macc model for \4908 ($add).
  creating $macc model for \4910 ($add).
  creating $macc model for \4912 ($add).
  creating $macc model for \4914 ($add).
  creating $macc model for \4916 ($add).
  creating $macc model for \4918 ($add).
  creating $macc model for \4920 ($add).
  creating $macc model for \4922 ($add).
  creating $macc model for \4924 ($add).
  creating $macc model for \4926 ($add).
  creating $macc model for \4928 ($add).
  creating $macc model for \4930 ($add).
  creating $macc model for \4932 ($add).
  creating $macc model for \4934 ($add).
  creating $macc model for \4936 ($add).
  creating $macc model for \4938 ($add).
  creating $macc model for \4940 ($add).
  creating $macc model for \4942 ($add).
  creating $macc model for \4944 ($add).
  creating $macc model for \4946 ($add).
  creating $macc model for \4948 ($add).
  creating $macc model for \4950 ($add).
  creating $macc model for \4952 ($add).
  creating $macc model for \4954 ($add).
  creating $macc model for \4956 ($add).
  creating $macc model for \4958 ($add).
  creating $macc model for \4960 ($add).
  creating $macc model for \4962 ($add).
  creating $macc model for \4964 ($add).
  creating $macc model for \4966 ($add).
  creating $macc model for \4968 ($add).
  creating $macc model for \4970 ($add).
  creating $macc model for \4972 ($add).
  creating $macc model for \4974 ($add).
  creating $macc model for \4976 ($add).
  creating $macc model for \4978 ($add).
  creating $macc model for \4980 ($add).
  creating $macc model for \4982 ($add).
  creating $macc model for \4984 ($add).
  creating $macc model for \4986 ($add).
  creating $macc model for \4988 ($add).
  creating $macc model for \4990 ($add).
  creating $macc model for \4992 ($add).
  creating $macc model for \4994 ($add).
  creating $macc model for \4996 ($add).
  creating $macc model for \4998 ($add).
  creating $macc model for \5000 ($add).
  creating $macc model for \5002 ($add).
  creating $macc model for \5004 ($add).
  creating $macc model for \5006 ($add).
  creating $macc model for \5008 ($add).
  creating $macc model for \5010 ($add).
  creating $macc model for \5012 ($add).
  creating $macc model for \5014 ($add).
  creating $macc model for \5016 ($add).
  creating $macc model for \5018 ($add).
  creating $macc model for \5020 ($add).
  creating $macc model for \5022 ($add).
  creating $macc model for \5024 ($add).
  creating $macc model for \5026 ($add).
  creating $macc model for \5028 ($add).
  creating $macc model for \5030 ($add).
  creating $macc model for \5032 ($add).
  creating $macc model for \5034 ($add).
  creating $macc model for \5036 ($add).
  creating $macc model for \5038 ($add).
  creating $macc model for \5040 ($add).
  creating $macc model for \5042 ($add).
  creating $macc model for \5044 ($add).
  creating $macc model for \5046 ($add).
  creating $macc model for \5048 ($add).
  creating $macc model for \5050 ($add).
  creating $macc model for \5052 ($add).
  creating $macc model for \5054 ($add).
  creating $macc model for \5056 ($add).
  creating $macc model for \5058 ($add).
  creating $macc model for \5060 ($add).
  merging $macc model for \5058 into \5060.
  merging $macc model for \5056 into \5060.
  merging $macc model for \5054 into \5060.
  merging $macc model for \5052 into \5060.
  merging $macc model for \5050 into \5060.
  merging $macc model for \5048 into \5060.
  merging $macc model for \5046 into \5060.
  merging $macc model for \5044 into \5060.
  merging $macc model for \5042 into \5060.
  merging $macc model for \5040 into \5060.
  merging $macc model for \5038 into \5060.
  merging $macc model for \5036 into \5060.
  merging $macc model for \5034 into \5060.
  merging $macc model for \5032 into \5060.
  merging $macc model for \5030 into \5060.
  merging $macc model for \5028 into \5060.
  merging $macc model for \5026 into \5060.
  merging $macc model for \5024 into \5060.
  merging $macc model for \5022 into \5060.
  merging $macc model for \5020 into \5060.
  merging $macc model for \5018 into \5060.
  merging $macc model for \5016 into \5060.
  merging $macc model for \5014 into \5060.
  merging $macc model for \5012 into \5060.
  merging $macc model for \5010 into \5060.
  merging $macc model for \5008 into \5060.
  merging $macc model for \5006 into \5060.
  merging $macc model for \5004 into \5060.
  merging $macc model for \5002 into \5060.
  merging $macc model for \5000 into \5060.
  merging $macc model for \4998 into \5060.
  merging $macc model for \4996 into \5060.
  merging $macc model for \4994 into \5060.
  merging $macc model for \4992 into \5060.
  merging $macc model for \4990 into \5060.
  merging $macc model for \4988 into \5060.
  merging $macc model for \4986 into \5060.
  merging $macc model for \4984 into \5060.
  merging $macc model for \4982 into \5060.
  merging $macc model for \4980 into \5060.
  merging $macc model for \4978 into \5060.
  merging $macc model for \4976 into \5060.
  merging $macc model for \4974 into \5060.
  merging $macc model for \4972 into \5060.
  merging $macc model for \4970 into \5060.
  merging $macc model for \4968 into \5060.
  merging $macc model for \4966 into \5060.
  merging $macc model for \4964 into \5060.
  merging $macc model for \4962 into \5060.
  merging $macc model for \4960 into \5060.
  merging $macc model for \4958 into \5060.
  merging $macc model for \4956 into \5060.
  merging $macc model for \4954 into \5060.
  merging $macc model for \4952 into \5060.
  merging $macc model for \4950 into \5060.
  merging $macc model for \4948 into \5060.
  merging $macc model for \4946 into \5060.
  merging $macc model for \4944 into \5060.
  merging $macc model for \4942 into \5060.
  merging $macc model for \4940 into \5060.
  merging $macc model for \4938 into \5060.
  merging $macc model for \4936 into \5060.
  merging $macc model for \4934 into \5060.
  merging $macc model for \4932 into \5060.
  merging $macc model for \4930 into \5060.
  merging $macc model for \4928 into \5060.
  merging $macc model for \4926 into \5060.
  merging $macc model for \4924 into \5060.
  merging $macc model for \4922 into \5060.
  merging $macc model for \4920 into \5060.
  merging $macc model for \4918 into \5060.
  merging $macc model for \4916 into \5060.
  merging $macc model for \4914 into \5060.
  merging $macc model for \4912 into \5060.
  merging $macc model for \4910 into \5060.
  merging $macc model for \4908 into \5060.
  merging $macc model for \4906 into \5060.
  merging $macc model for \4904 into \5060.
  merging $macc model for \4902 into \5060.
  merging $macc model for \4900 into \5060.
  merging $macc model for \4898 into \5060.
  merging $macc model for \4896 into \5060.
  merging $macc model for \4894 into \5060.
  merging $macc model for \4892 into \5060.
  merging $macc model for \4890 into \5060.
  merging $macc model for \4888 into \5060.
  merging $macc model for \4886 into \5060.
  merging $macc model for \4884 into \5060.
  merging $macc model for \4882 into \5060.
  merging $macc model for \4880 into \5060.
  merging $macc model for \4878 into \5060.
  merging $macc model for \4876 into \5060.
  merging $macc model for \4874 into \5060.
  merging $macc model for \4872 into \5060.
  merging $macc model for \4870 into \5060.
  merging $macc model for \4868 into \5060.
  merging $macc model for \4866 into \5060.
  merging $macc model for \4864 into \5060.
  creating $alu model for $macc \4859.
  creating $alu model for $macc \4838.
  creating $macc cell for \5060: $auto$alumacc.cc:365:replace_macc$3480
  creating $alu model for \4836 ($gt): new $alu
  creating $alu cell for \4836: $auto$alumacc.cc:485:replace_alu$3482
  creating $alu cell for \4838: $auto$alumacc.cc:485:replace_alu$3487
  creating $alu cell for \4859: $auto$alumacc.cc:485:replace_alu$3490
  created 3 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module acceleration_x_direction_change_output_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module acceleration_x_input_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module acceleration_x_periodic_output_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module acceleration_x_rising_output_stream_entity:
  creating $macc model for \3664 ($sub).
  creating $alu model for $macc \3664.
  creating $alu model for \3667 ($gt): new $alu
  creating $alu cell for \3667: $auto$alumacc.cc:485:replace_alu$3494
  creating $alu cell for \3664: $auto$alumacc.cc:485:replace_alu$3501
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module acceleration_x_sinking_output_stream_entity:
  creating $macc model for \3810 ($sub).
  creating $alu model for $macc \3810.
  creating $alu model for \3813 ($lt): new $alu
  creating $alu cell for \3813: $auto$alumacc.cc:485:replace_alu$3505
  creating $alu cell for \3810: $auto$alumacc.cc:485:replace_alu$3518
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module check_new_input:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module clock_pre_processing:
  creating $macc model for \108 ($add).
  creating $macc model for \116 ($add).
  creating $alu model for $macc \116.
  creating $alu model for $macc \108.
  creating $alu cell for \108: $auto$alumacc.cc:485:replace_alu$3521
  creating $alu cell for \116: $auto$alumacc.cc:485:replace_alu$3524
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module evaluator:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module event_delay:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module extinterface:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_high_loss_output_stream_entity:
  creating $alu model for \4504 ($lt): new $alu
  creating $alu model for \4514 ($ge): new $alu
  creating $alu cell for \4514: $auto$alumacc.cc:485:replace_alu$3529
  creating $alu cell for \4504: $auto$alumacc.cc:485:replace_alu$3538
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_medium_loss_output_stream_entity:
  creating $alu model for \4367 ($lt): new $alu
  creating $alu model for \4377 ($ge): new $alu
  creating $alu cell for \4377: $auto$alumacc.cc:485:replace_alu$3551
  creating $alu cell for \4367: $auto$alumacc.cc:485:replace_alu$3560
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_missed_beat_output_stream_entity:
  creating $alu model for \4270 ($lt): new $alu
  creating $alu cell for \4270: $auto$alumacc.cc:485:replace_alu$3572
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_sats_input_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_very_high_loss_output_stream_entity:
  creating $alu model for \4637 ($lt): new $alu
  creating $alu cell for \4637: $auto$alumacc.cc:485:replace_alu$3584
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module high_level_controller:
  creating $macc model for \577 ($add).
  creating $alu model for $macc \577.
  creating $alu cell for \577: $auto$alumacc.cc:485:replace_alu$3595
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module hlqinterface:
  creating $macc model for \1963 ($add).
  creating $macc model for \1970 ($add).
  creating $alu model for $macc \1970.
  creating $alu model for $macc \1963.
  creating $alu cell for \1963: $auto$alumacc.cc:485:replace_alu$3598
  creating $alu cell for \1970: $auto$alumacc.cc:485:replace_alu$3601
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module implementation:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module input_pre_processing:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lat_gps_count_1_sliding_window_entity:
  creating $macc model for \5153 ($add).
  creating $macc model for \5174 ($add).
  creating $macc model for \5179 ($add).
  creating $macc model for \5181 ($add).
  creating $macc model for \5183 ($add).
  creating $macc model for \5185 ($add).
  creating $macc model for \5187 ($add).
  creating $macc model for \5189 ($add).
  creating $macc model for \5191 ($add).
  creating $macc model for \5193 ($add).
  creating $macc model for \5195 ($add).
  creating $macc model for \5197 ($add).
  creating $macc model for \5199 ($add).
  creating $macc model for \5201 ($add).
  creating $macc model for \5203 ($add).
  creating $macc model for \5205 ($add).
  creating $macc model for \5207 ($add).
  creating $macc model for \5209 ($add).
  creating $macc model for \5211 ($add).
  creating $macc model for \5213 ($add).
  creating $macc model for \5215 ($add).
  creating $macc model for \5217 ($add).
  creating $macc model for \5219 ($add).
  creating $macc model for \5221 ($add).
  creating $macc model for \5223 ($add).
  creating $macc model for \5225 ($add).
  creating $macc model for \5227 ($add).
  creating $macc model for \5229 ($add).
  creating $macc model for \5231 ($add).
  creating $macc model for \5233 ($add).
  creating $macc model for \5235 ($add).
  creating $macc model for \5237 ($add).
  creating $macc model for \5239 ($add).
  creating $macc model for \5241 ($add).
  creating $macc model for \5243 ($add).
  creating $macc model for \5245 ($add).
  creating $macc model for \5247 ($add).
  creating $macc model for \5249 ($add).
  creating $macc model for \5251 ($add).
  creating $macc model for \5253 ($add).
  creating $macc model for \5255 ($add).
  creating $macc model for \5257 ($add).
  creating $macc model for \5259 ($add).
  creating $macc model for \5261 ($add).
  creating $macc model for \5263 ($add).
  creating $macc model for \5265 ($add).
  creating $macc model for \5267 ($add).
  creating $macc model for \5269 ($add).
  creating $macc model for \5271 ($add).
  creating $macc model for \5273 ($add).
  creating $macc model for \5275 ($add).
  creating $macc model for \5277 ($add).
  creating $macc model for \5279 ($add).
  creating $macc model for \5281 ($add).
  creating $macc model for \5283 ($add).
  creating $macc model for \5285 ($add).
  creating $macc model for \5287 ($add).
  creating $macc model for \5289 ($add).
  creating $macc model for \5291 ($add).
  creating $macc model for \5293 ($add).
  creating $macc model for \5295 ($add).
  creating $macc model for \5297 ($add).
  creating $macc model for \5299 ($add).
  creating $macc model for \5301 ($add).
  creating $macc model for \5303 ($add).
  creating $macc model for \5305 ($add).
  creating $macc model for \5307 ($add).
  creating $macc model for \5309 ($add).
  creating $macc model for \5311 ($add).
  creating $macc model for \5313 ($add).
  creating $macc model for \5315 ($add).
  creating $macc model for \5317 ($add).
  creating $macc model for \5319 ($add).
  creating $macc model for \5321 ($add).
  creating $macc model for \5323 ($add).
  creating $macc model for \5325 ($add).
  creating $macc model for \5327 ($add).
  creating $macc model for \5329 ($add).
  creating $macc model for \5331 ($add).
  creating $macc model for \5333 ($add).
  creating $macc model for \5335 ($add).
  creating $macc model for \5337 ($add).
  creating $macc model for \5339 ($add).
  creating $macc model for \5341 ($add).
  creating $macc model for \5343 ($add).
  creating $macc model for \5345 ($add).
  creating $macc model for \5347 ($add).
  creating $macc model for \5349 ($add).
  creating $macc model for \5351 ($add).
  creating $macc model for \5353 ($add).
  creating $macc model for \5355 ($add).
  creating $macc model for \5357 ($add).
  creating $macc model for \5359 ($add).
  creating $macc model for \5361 ($add).
  creating $macc model for \5363 ($add).
  creating $macc model for \5365 ($add).
  creating $macc model for \5367 ($add).
  creating $macc model for \5369 ($add).
  creating $macc model for \5371 ($add).
  creating $macc model for \5373 ($add).
  creating $macc model for \5375 ($add).
  creating $macc model for \5377 ($add).
  creating $macc model for \5379 ($add).
  creating $macc model for \5381 ($add).
  creating $macc model for \5383 ($add).
  creating $macc model for \5385 ($add).
  creating $macc model for \5387 ($add).
  creating $macc model for \5389 ($add).
  creating $macc model for \5391 ($add).
  creating $macc model for \5393 ($add).
  creating $macc model for \5395 ($add).
  merging $macc model for \5393 into \5395.
  merging $macc model for \5391 into \5395.
  merging $macc model for \5389 into \5395.
  merging $macc model for \5387 into \5395.
  merging $macc model for \5385 into \5395.
  merging $macc model for \5383 into \5395.
  merging $macc model for \5381 into \5395.
  merging $macc model for \5379 into \5395.
  merging $macc model for \5377 into \5395.
  merging $macc model for \5375 into \5395.
  merging $macc model for \5373 into \5395.
  merging $macc model for \5371 into \5395.
  merging $macc model for \5369 into \5395.
  merging $macc model for \5367 into \5395.
  merging $macc model for \5365 into \5395.
  merging $macc model for \5363 into \5395.
  merging $macc model for \5361 into \5395.
  merging $macc model for \5359 into \5395.
  merging $macc model for \5357 into \5395.
  merging $macc model for \5355 into \5395.
  merging $macc model for \5353 into \5395.
  merging $macc model for \5351 into \5395.
  merging $macc model for \5349 into \5395.
  merging $macc model for \5347 into \5395.
  merging $macc model for \5345 into \5395.
  merging $macc model for \5343 into \5395.
  merging $macc model for \5341 into \5395.
  merging $macc model for \5339 into \5395.
  merging $macc model for \5337 into \5395.
  merging $macc model for \5335 into \5395.
  merging $macc model for \5333 into \5395.
  merging $macc model for \5331 into \5395.
  merging $macc model for \5329 into \5395.
  merging $macc model for \5327 into \5395.
  merging $macc model for \5325 into \5395.
  merging $macc model for \5323 into \5395.
  merging $macc model for \5321 into \5395.
  merging $macc model for \5319 into \5395.
  merging $macc model for \5317 into \5395.
  merging $macc model for \5315 into \5395.
  merging $macc model for \5313 into \5395.
  merging $macc model for \5311 into \5395.
  merging $macc model for \5309 into \5395.
  merging $macc model for \5307 into \5395.
  merging $macc model for \5305 into \5395.
  merging $macc model for \5303 into \5395.
  merging $macc model for \5301 into \5395.
  merging $macc model for \5299 into \5395.
  merging $macc model for \5297 into \5395.
  merging $macc model for \5295 into \5395.
  merging $macc model for \5293 into \5395.
  merging $macc model for \5291 into \5395.
  merging $macc model for \5289 into \5395.
  merging $macc model for \5287 into \5395.
  merging $macc model for \5285 into \5395.
  merging $macc model for \5283 into \5395.
  merging $macc model for \5281 into \5395.
  merging $macc model for \5279 into \5395.
  merging $macc model for \5277 into \5395.
  merging $macc model for \5275 into \5395.
  merging $macc model for \5273 into \5395.
  merging $macc model for \5271 into \5395.
  merging $macc model for \5269 into \5395.
  merging $macc model for \5267 into \5395.
  merging $macc model for \5265 into \5395.
  merging $macc model for \5263 into \5395.
  merging $macc model for \5261 into \5395.
  merging $macc model for \5259 into \5395.
  merging $macc model for \5257 into \5395.
  merging $macc model for \5255 into \5395.
  merging $macc model for \5253 into \5395.
  merging $macc model for \5251 into \5395.
  merging $macc model for \5249 into \5395.
  merging $macc model for \5247 into \5395.
  merging $macc model for \5245 into \5395.
  merging $macc model for \5243 into \5395.
  merging $macc model for \5241 into \5395.
  merging $macc model for \5239 into \5395.
  merging $macc model for \5237 into \5395.
  merging $macc model for \5235 into \5395.
  merging $macc model for \5233 into \5395.
  merging $macc model for \5231 into \5395.
  merging $macc model for \5229 into \5395.
  merging $macc model for \5227 into \5395.
  merging $macc model for \5225 into \5395.
  merging $macc model for \5223 into \5395.
  merging $macc model for \5221 into \5395.
  merging $macc model for \5219 into \5395.
  merging $macc model for \5217 into \5395.
  merging $macc model for \5215 into \5395.
  merging $macc model for \5213 into \5395.
  merging $macc model for \5211 into \5395.
  merging $macc model for \5209 into \5395.
  merging $macc model for \5207 into \5395.
  merging $macc model for \5205 into \5395.
  merging $macc model for \5203 into \5395.
  merging $macc model for \5201 into \5395.
  merging $macc model for \5199 into \5395.
  merging $macc model for \5197 into \5395.
  merging $macc model for \5195 into \5395.
  merging $macc model for \5193 into \5395.
  merging $macc model for \5191 into \5395.
  merging $macc model for \5189 into \5395.
  merging $macc model for \5187 into \5395.
  merging $macc model for \5185 into \5395.
  merging $macc model for \5183 into \5395.
  merging $macc model for \5181 into \5395.
  merging $macc model for \5179 into \5395.
  creating $alu model for $macc \5174.
  creating $alu model for $macc \5153.
  creating $macc cell for \5395: $auto$alumacc.cc:365:replace_macc$3604
  creating $alu model for \5151 ($gt): new $alu
  creating $alu cell for \5151: $auto$alumacc.cc:485:replace_alu$3606
  creating $alu cell for \5153: $auto$alumacc.cc:485:replace_alu$3611
  creating $alu cell for \5174: $auto$alumacc.cc:485:replace_alu$3614
  created 3 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module lat_gps_count_2_sliding_window_entity:
  creating $macc model for \5488 ($add).
  creating $macc model for \5505 ($add).
  creating $alu model for $macc \5505.
  creating $alu model for $macc \5488.
  creating $alu model for \5486 ($gt): new $alu
  creating $alu cell for \5486: $auto$alumacc.cc:485:replace_alu$3618
  creating $alu cell for \5488: $auto$alumacc.cc:485:replace_alu$3623
  creating $alu cell for \5505: $auto$alumacc.cc:485:replace_alu$3626
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lat_gps_count_3_sliding_window_entity:
  creating $macc model for \5594 ($add).
  creating $macc model for \5611 ($add).
  creating $alu model for $macc \5611.
  creating $alu model for $macc \5594.
  creating $alu model for \5592 ($gt): new $alu
  creating $alu cell for \5592: $auto$alumacc.cc:485:replace_alu$3630
  creating $alu cell for \5594: $auto$alumacc.cc:485:replace_alu$3635
  creating $alu cell for \5611: $auto$alumacc.cc:485:replace_alu$3638
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lat_gps_count_4_sliding_window_entity:
  creating $macc model for \5700 ($add).
  creating $macc model for \5717 ($add).
  creating $alu model for $macc \5717.
  creating $alu model for $macc \5700.
  creating $alu model for \5698 ($gt): new $alu
  creating $alu cell for \5698: $auto$alumacc.cc:485:replace_alu$3642
  creating $alu cell for \5700: $auto$alumacc.cc:485:replace_alu$3647
  creating $alu cell for \5717: $auto$alumacc.cc:485:replace_alu$3650
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lat_gps_count_5_sliding_window_entity:
  creating $macc model for \5806 ($add).
  creating $macc model for \5823 ($add).
  creating $alu model for $macc \5823.
  creating $alu model for $macc \5806.
  creating $alu model for \5804 ($gt): new $alu
  creating $alu cell for \5804: $auto$alumacc.cc:485:replace_alu$3654
  creating $alu cell for \5806: $auto$alumacc.cc:485:replace_alu$3659
  creating $alu cell for \5823: $auto$alumacc.cc:485:replace_alu$3662
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lat_gps_count_6_sliding_window_entity:
  creating $macc model for \5912 ($add).
  creating $macc model for \5929 ($add).
  creating $alu model for $macc \5929.
  creating $alu model for $macc \5912.
  creating $alu model for \5910 ($gt): new $alu
  creating $alu cell for \5910: $auto$alumacc.cc:485:replace_alu$3666
  creating $alu cell for \5912: $auto$alumacc.cc:485:replace_alu$3671
  creating $alu cell for \5929: $auto$alumacc.cc:485:replace_alu$3674
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lat_gps_input_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module low_level_controller:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module monitor:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module queue:
  creating $macc model for \676 ($sub).
  creating $macc model for \807 ($add).
  creating $alu model for $macc \807.
  creating $alu model for $macc \676.
  creating $alu model for \634 ($gt): new $alu
  creating $alu model for \637 ($lt): new $alu
  creating $alu model for \917 ($gt): new $alu
  creating $alu cell for \917: $auto$alumacc.cc:485:replace_alu$3680
  creating $alu cell for \637: $auto$alumacc.cc:485:replace_alu$3687
  creating $alu cell for \634: $auto$alumacc.cc:485:replace_alu$3700
  creating $alu cell for \676: $auto$alumacc.cc:485:replace_alu$3707
  creating $alu cell for \807: $auto$alumacc.cc:485:replace_alu$3710
  created 5 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module scheduler:
  creating $macc model for \1652 ($add).
  creating $alu model for $macc \1652.
  creating $alu model for \1648 ($ge): new $alu
  creating $alu cell for \1648: $auto$alumacc.cc:485:replace_alu$3714
  creating $alu cell for \1652: $auto$alumacc.cc:485:replace_alu$3723
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module time_unit:
  creating $macc model for \1617 ($add).
  creating $alu model for $macc \1617.
  creating $alu cell for \1617: $auto$alumacc.cc:485:replace_alu$3726
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module trigger_acc_output_stream_entity:
  creating $alu model for \4177 ($gt): new $alu
  creating $alu cell for \4177: $auto$alumacc.cc:485:replace_alu$3730
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module trigger_gps_sats_output_stream_entity:
  creating $alu model for \4739 ($lt): new $alu
  creating $alu cell for \4739: $auto$alumacc.cc:485:replace_alu$3736
  created 1 $alu and 0 $macc cells.

2.13. Executing SHARE pass (SAT-based resource sharing).

2.14. Executing OPT pass (performing simple optimizations).

2.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_medium_loss_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_missed_beat_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_2_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_3_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_4_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_5_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_6_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module trigger_gps_sats_output_stream_entity.
<suppressed ~1 debug messages>

2.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~229 debug messages>

2.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.14.6. Executing OPT_DFF pass (perform DFF optimizations).

2.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 213 unused cells and 234 unused wires.
<suppressed ~230 debug messages>

2.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~229 debug messages>

2.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.14.16. Finished OPT passes. (There is nothing left to do.)

2.15. Executing MEMORY pass.

2.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.17. Executing OPT pass (performing simple optimizations).

2.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
<suppressed ~8 debug messages>
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module acceleration_x_direction_change_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module acceleration_x_input_stream_entity.
<suppressed ~3 debug messages>
Optimizing module acceleration_x_periodic_output_stream_entity.
<suppressed ~8 debug messages>
Optimizing module acceleration_x_rising_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module acceleration_x_sinking_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module check_new_input.
<suppressed ~1 debug messages>
Optimizing module clock_pre_processing.
<suppressed ~4 debug messages>
Optimizing module evaluator.
<suppressed ~73 debug messages>
Optimizing module event_delay.
<suppressed ~4 debug messages>
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
<suppressed ~11 debug messages>
Optimizing module gps_medium_loss_output_stream_entity.
<suppressed ~11 debug messages>
Optimizing module gps_missed_beat_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module gps_sats_input_stream_entity.
<suppressed ~3 debug messages>
Optimizing module gps_very_high_loss_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module high_level_controller.
<suppressed ~1 debug messages>
Optimizing module hlqinterface.
<suppressed ~12 debug messages>
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module lat_gps_count_2_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module lat_gps_count_3_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module lat_gps_count_4_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module lat_gps_count_5_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module lat_gps_count_6_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module lat_gps_input_stream_entity.
<suppressed ~3 debug messages>
Optimizing module low_level_controller.
<suppressed ~5 debug messages>
Optimizing module monitor.
Optimizing module queue.
<suppressed ~104 debug messages>
Optimizing module scheduler.
<suppressed ~2 debug messages>
Optimizing module time_unit.
<suppressed ~1 debug messages>
Optimizing module trigger_acc_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module trigger_gps_sats_output_stream_entity.
<suppressed ~9 debug messages>

2.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
<suppressed ~3 debug messages>
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~3 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 2 cells.

2.17.3. Executing OPT_DFF pass (perform DFF optimizations).

2.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 12 unused cells and 298 unused wires.
<suppressed ~42 debug messages>

2.17.5. Finished fast OPT passes.

2.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module acceleration_x_direction_change_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module acceleration_x_rising_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module acceleration_x_sinking_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~1 debug messages>
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_medium_loss_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_missed_beat_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_2_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_3_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_4_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_5_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_6_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
<suppressed ~1 debug messages>
Optimizing module monitor.
Optimizing module queue.
<suppressed ~2 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module trigger_gps_sats_output_stream_entity.
<suppressed ~1 debug messages>

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
<suppressed ~3 debug messages>
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~3 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
<suppressed ~3 debug messages>
Removed a total of 13 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.19.6. Executing OPT_SHARE pass.

2.19.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$2425 ($adffe) from module acceleration_x_direction_change_count_0_sliding_window_entity (D = \last_ts_before_upd [4:0], Q = \last_ts_before_upd [4:0]).
Handling D = Q on $auto$ff.cc:266:slice$3771 ($adffe) from module acceleration_x_direction_change_count_0_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3771 ($dlatch) from module acceleration_x_direction_change_count_0_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3771 ($dlatch) from module acceleration_x_direction_change_count_0_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3771 ($dlatch) from module acceleration_x_direction_change_count_0_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3771 ($dlatch) from module acceleration_x_direction_change_count_0_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3771 ($dlatch) from module acceleration_x_direction_change_count_0_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$2832 ($adffe) from module lat_gps_count_1_sliding_window_entity (D = \last_ts_before_upd [4:0], Q = \last_ts_before_upd [4:0]).
Handling D = Q on $auto$ff.cc:266:slice$3777 ($adffe) from module lat_gps_count_1_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3777 ($dlatch) from module lat_gps_count_1_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3777 ($dlatch) from module lat_gps_count_1_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3777 ($dlatch) from module lat_gps_count_1_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3777 ($dlatch) from module lat_gps_count_1_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3777 ($dlatch) from module lat_gps_count_1_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$2883 ($adffe) from module lat_gps_count_2_sliding_window_entity (D = \last_ts_before_upd [6:0], Q = \last_ts_before_upd [6:0]).
Handling D = Q on $auto$ff.cc:266:slice$3783 ($adffe) from module lat_gps_count_2_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3783 ($dlatch) from module lat_gps_count_2_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$2934 ($adffe) from module lat_gps_count_3_sliding_window_entity (D = \last_ts_before_upd [6:0], Q = \last_ts_before_upd [6:0]).
Handling D = Q on $auto$ff.cc:266:slice$3789 ($adffe) from module lat_gps_count_3_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3789 ($dlatch) from module lat_gps_count_3_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$2985 ($adffe) from module lat_gps_count_4_sliding_window_entity (D = \last_ts_before_upd [6:0], Q = \last_ts_before_upd [6:0]).
Handling D = Q on $auto$ff.cc:266:slice$3795 ($adffe) from module lat_gps_count_4_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3795 ($dlatch) from module lat_gps_count_4_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$3036 ($adffe) from module lat_gps_count_5_sliding_window_entity (D = \last_ts_before_upd [6:0], Q = \last_ts_before_upd [6:0]).
Handling D = Q on $auto$ff.cc:266:slice$3801 ($adffe) from module lat_gps_count_5_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3801 ($dlatch) from module lat_gps_count_5_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$3087 ($adffe) from module lat_gps_count_6_sliding_window_entity (D = \last_ts_before_upd [6:0], Q = \last_ts_before_upd [6:0]).
Handling D = Q on $auto$ff.cc:266:slice$3807 ($adffe) from module lat_gps_count_6_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3807 ($dlatch) from module lat_gps_count_6_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$3431 ($adffe) from module scheduler (D = \time_of_next_deadline [4:0], Q = \time_of_next_deadline [4:0]).
Handling D = Q on $auto$ff.cc:266:slice$3813 ($adffe) from module scheduler (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3813 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3813 ($dlatch) from module scheduler.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3813 ($dlatch) from module scheduler.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3813 ($dlatch) from module scheduler.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3813 ($dlatch) from module scheduler.
Adding EN signal on \1622 ($adff) from module time_unit (D = \sys_time [2:0], Q = \sys_time [2:0]).
Handling D = Q on $auto$ff.cc:266:slice$3819 ($adffe) from module time_unit (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3819 ($dlatch) from module time_unit.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3819 ($dlatch) from module time_unit.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3819 ($dlatch) from module time_unit.

2.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 17 unused cells and 37 unused wires.
<suppressed ~39 debug messages>

2.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.19.10. Rerunning OPT passes. (Maybe there is more to do..)

2.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

2.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.19.14. Executing OPT_SHARE pass.

2.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3430 ($adffe) from module scheduler.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3430 ($adffe) from module scheduler.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3430 ($adffe) from module scheduler.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3430 ($adffe) from module scheduler.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3430 ($adffe) from module scheduler.

2.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.19.18. Rerunning OPT passes. (Maybe there is more to do..)

2.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \acceleration_x_changes_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_direction_change_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \acceleration_x_periodic_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_rising_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \acceleration_x_sinking_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_medium_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_missed_beat_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_sats_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \gps_very_high_loss_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lat_gps_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_2_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_3_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_4_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_5_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_count_6_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lat_gps_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \trigger_acc_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \trigger_gps_sats_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

2.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \acceleration_x_changes_output_stream_entity.
  Optimizing cells in module \acceleration_x_direction_change_count_0_sliding_window_entity.
  Optimizing cells in module \acceleration_x_direction_change_output_stream_entity.
  Optimizing cells in module \acceleration_x_input_stream_entity.
  Optimizing cells in module \acceleration_x_periodic_output_stream_entity.
  Optimizing cells in module \acceleration_x_rising_output_stream_entity.
  Optimizing cells in module \acceleration_x_sinking_output_stream_entity.
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \gps_high_loss_output_stream_entity.
  Optimizing cells in module \gps_medium_loss_output_stream_entity.
  Optimizing cells in module \gps_missed_beat_output_stream_entity.
  Optimizing cells in module \gps_sats_input_stream_entity.
  Optimizing cells in module \gps_very_high_loss_output_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \lat_gps_count_1_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_2_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_3_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_4_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_5_sliding_window_entity.
  Optimizing cells in module \lat_gps_count_6_sliding_window_entity.
  Optimizing cells in module \lat_gps_input_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
  Optimizing cells in module \trigger_acc_output_stream_entity.
  Optimizing cells in module \trigger_gps_sats_output_stream_entity.
Performed a total of 0 changes.

2.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 0 cells.

2.19.22. Executing OPT_SHARE pass.

2.19.23. Executing OPT_DFF pass (perform DFF optimizations).

2.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..

2.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
Optimizing module lat_gps_count_2_sliding_window_entity.
Optimizing module lat_gps_count_3_sliding_window_entity.
Optimizing module lat_gps_count_4_sliding_window_entity.
Optimizing module lat_gps_count_5_sliding_window_entity.
Optimizing module lat_gps_count_6_sliding_window_entity.
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
Optimizing module trigger_gps_sats_output_stream_entity.

2.19.26. Finished OPT passes. (There is nothing left to do.)

2.20. Executing TECHMAP pass (map to technology primitives).

2.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$e18933546fa509c22352c74dccd86650a26040b2\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod$1fa983392dbbedce60236f4b4b698dd6d3c27e26\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111111 for cells of type $lcu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$9372bd4570ba4a5b302416ad52cf0b982084fec5\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111101 for cells of type $lcu.
Using template $paramod$f75a7d2be2182e574d28d1acaf264499bd5c8efb\_90_alu for cells of type $alu.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111011 for cells of type $lcu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using template $paramod$7b00947614a4c48e09c066dca449366ddfa907a5\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$19e2580c9084a01134cf124dfa77fb4500b707f9\_90_alu for cells of type $alu.
Using template $paramod$06a9a25e193457b564e50ab7b7ad40e176246e9c\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$c82eb61d9b523d8bbed1620edd115364910bffc7\_90_alu for cells of type $alu.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111001 for cells of type $lcu.
Using extmapper maccmap for cells of type $macc.
  add \count_buckets [63:0] (64 bits, unsigned)
  add \count_buckets [7039:6976] (64 bits, unsigned)
  add \count_buckets [6975:6912] (64 bits, unsigned)
  add \count_buckets [6911:6848] (64 bits, unsigned)
  add \count_buckets [6847:6784] (64 bits, unsigned)
  add \count_buckets [6783:6720] (64 bits, unsigned)
  add \count_buckets [6719:6656] (64 bits, unsigned)
  add \count_buckets [6655:6592] (64 bits, unsigned)
  add \count_buckets [6591:6528] (64 bits, unsigned)
  add \count_buckets [6527:6464] (64 bits, unsigned)
  add \count_buckets [6463:6400] (64 bits, unsigned)
  add \count_buckets [6399:6336] (64 bits, unsigned)
  add \count_buckets [6335:6272] (64 bits, unsigned)
  add \count_buckets [6271:6208] (64 bits, unsigned)
  add \count_buckets [6207:6144] (64 bits, unsigned)
  add \count_buckets [6143:6080] (64 bits, unsigned)
  add \count_buckets [6079:6016] (64 bits, unsigned)
  add \count_buckets [6015:5952] (64 bits, unsigned)
  add \count_buckets [5951:5888] (64 bits, unsigned)
  add \count_buckets [5887:5824] (64 bits, unsigned)
  add \count_buckets [5823:5760] (64 bits, unsigned)
  add \count_buckets [5759:5696] (64 bits, unsigned)
  add \count_buckets [5695:5632] (64 bits, unsigned)
  add \count_buckets [5631:5568] (64 bits, unsigned)
  add \count_buckets [5567:5504] (64 bits, unsigned)
  add \count_buckets [5503:5440] (64 bits, unsigned)
  add \count_buckets [5439:5376] (64 bits, unsigned)
  add \count_buckets [5375:5312] (64 bits, unsigned)
  add \count_buckets [5311:5248] (64 bits, unsigned)
  add \count_buckets [5247:5184] (64 bits, unsigned)
  add \count_buckets [5183:5120] (64 bits, unsigned)
  add \count_buckets [5119:5056] (64 bits, unsigned)
  add \count_buckets [5055:4992] (64 bits, unsigned)
  add \count_buckets [4991:4928] (64 bits, unsigned)
  add \count_buckets [4927:4864] (64 bits, unsigned)
  add \count_buckets [4863:4800] (64 bits, unsigned)
  add \count_buckets [4799:4736] (64 bits, unsigned)
  add \count_buckets [4735:4672] (64 bits, unsigned)
  add \count_buckets [4671:4608] (64 bits, unsigned)
  add \count_buckets [4607:4544] (64 bits, unsigned)
  add \count_buckets [4543:4480] (64 bits, unsigned)
  add \count_buckets [4479:4416] (64 bits, unsigned)
  add \count_buckets [4415:4352] (64 bits, unsigned)
  add \count_buckets [4351:4288] (64 bits, unsigned)
  add \count_buckets [4287:4224] (64 bits, unsigned)
  add \count_buckets [4223:4160] (64 bits, unsigned)
  add \count_buckets [4159:4096] (64 bits, unsigned)
  add \count_buckets [4095:4032] (64 bits, unsigned)
  add \count_buckets [4031:3968] (64 bits, unsigned)
  add \count_buckets [3967:3904] (64 bits, unsigned)
  add \count_buckets [3903:3840] (64 bits, unsigned)
  add \count_buckets [3839:3776] (64 bits, unsigned)
  add \count_buckets [3775:3712] (64 bits, unsigned)
  add \count_buckets [3711:3648] (64 bits, unsigned)
  add \count_buckets [3647:3584] (64 bits, unsigned)
  add \count_buckets [3583:3520] (64 bits, unsigned)
  add \count_buckets [3519:3456] (64 bits, unsigned)
  add \count_buckets [3455:3392] (64 bits, unsigned)
  add \count_buckets [3391:3328] (64 bits, unsigned)
  add \count_buckets [3327:3264] (64 bits, unsigned)
  add \count_buckets [3263:3200] (64 bits, unsigned)
  add \count_buckets [3199:3136] (64 bits, unsigned)
  add \count_buckets [3135:3072] (64 bits, unsigned)
  add \count_buckets [3071:3008] (64 bits, unsigned)
  add \count_buckets [3007:2944] (64 bits, unsigned)
  add \count_buckets [2943:2880] (64 bits, unsigned)
  add \count_buckets [2879:2816] (64 bits, unsigned)
  add \count_buckets [2815:2752] (64 bits, unsigned)
  add \count_buckets [2751:2688] (64 bits, unsigned)
  add \count_buckets [2687:2624] (64 bits, unsigned)
  add \count_buckets [2623:2560] (64 bits, unsigned)
  add \count_buckets [2559:2496] (64 bits, unsigned)
  add \count_buckets [2495:2432] (64 bits, unsigned)
  add \count_buckets [2431:2368] (64 bits, unsigned)
  add \count_buckets [2367:2304] (64 bits, unsigned)
  add \count_buckets [2303:2240] (64 bits, unsigned)
  add \count_buckets [2239:2176] (64 bits, unsigned)
  add \count_buckets [2175:2112] (64 bits, unsigned)
  add \count_buckets [2111:2048] (64 bits, unsigned)
  add \count_buckets [2047:1984] (64 bits, unsigned)
  add \count_buckets [1983:1920] (64 bits, unsigned)
  add \count_buckets [1919:1856] (64 bits, unsigned)
  add \count_buckets [1855:1792] (64 bits, unsigned)
  add \count_buckets [1791:1728] (64 bits, unsigned)
  add \count_buckets [1727:1664] (64 bits, unsigned)
  add \count_buckets [1663:1600] (64 bits, unsigned)
  add \count_buckets [1599:1536] (64 bits, unsigned)
  add \count_buckets [1535:1472] (64 bits, unsigned)
  add \count_buckets [1471:1408] (64 bits, unsigned)
  add \count_buckets [1407:1344] (64 bits, unsigned)
  add \count_buckets [1343:1280] (64 bits, unsigned)
  add \count_buckets [1279:1216] (64 bits, unsigned)
  add \count_buckets [1215:1152] (64 bits, unsigned)
  add \count_buckets [1151:1088] (64 bits, unsigned)
  add \count_buckets [1087:1024] (64 bits, unsigned)
  add \count_buckets [1023:960] (64 bits, unsigned)
  add \count_buckets [959:896] (64 bits, unsigned)
  add \count_buckets [895:832] (64 bits, unsigned)
  add \count_buckets [831:768] (64 bits, unsigned)
  add \count_buckets [767:704] (64 bits, unsigned)
  add \count_buckets [703:640] (64 bits, unsigned)
  add \count_buckets [639:576] (64 bits, unsigned)
  add \count_buckets [575:512] (64 bits, unsigned)
  add \count_buckets [511:448] (64 bits, unsigned)
  add \count_buckets [447:384] (64 bits, unsigned)
  add \count_buckets [383:320] (64 bits, unsigned)
  add \count_buckets [319:256] (64 bits, unsigned)
  add \count_buckets [255:192] (64 bits, unsigned)
  add \count_buckets [191:128] (64 bits, unsigned)
  add \count_buckets [127:64] (64 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$1e402e64350f17d7d96d4d19397585e7730f3657\_90_modfloor for cells of type $modfloor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod$1e402e64350f17d7d96d4d19397585e7730f3657\$__div_mod_floor for cells of type $__div_mod_floor.
Running "alumacc" on wrapper $extern:wrap:$add:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$add:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$add:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_and.
Running "alumacc" on wrapper $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod\$__div_mod_u\WIDTH=32'00000000000000000000000000100000 for cells of type $__div_mod_u.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$789c344356a154d2afc7b832b41d1067dbc946ba\_90_alu for cells of type $alu.
Using template $paramod$e39069e3f4ee35c1eea86993bd74689959babaab\_90_alu for cells of type $alu.
Using template $paramod$d7aca3dc44b07ff19908fb1a3b606577588c15f1\_90_alu for cells of type $alu.
Using template $paramod$f9e3a3c4b84f99cb56fad07743ec44ad55b11c8b\_90_alu for cells of type $alu.
Using template $paramod$dd5ba471f7dcf35707f23b88cfd15b9582f97277\_90_alu for cells of type $alu.
Using template $paramod$b7531bc0616f8d4cdd8159edd2237c9ddbb2ce01\_90_alu for cells of type $alu.
Using template $paramod$ff8ba121d2f8e85b775c9f35ef677a1a276e7e1b\_90_alu for cells of type $alu.
Using template $paramod$9a66d4bebbc4fab84566caffef9f094a1a467389\_90_alu for cells of type $alu.
Using template $paramod$57bc309a5d8a948cec8981d26d896ee1cbf54d58\_90_alu for cells of type $alu.
Using template $paramod$f94cfdb8ad389f4fc4515bcb65bccd7e2d189e95\_90_alu for cells of type $alu.
Using template $paramod$2a25669ccd39fe7c0fbfb2a4d17416fc78667f00\_90_alu for cells of type $alu.
Using template $paramod$d9397dfdf5f7cf5715aebc9527845402880218a0\_90_alu for cells of type $alu.
Using template $paramod$acc477ace2583cc2ee0cf651c72a385d2bbbe9f1\_90_alu for cells of type $alu.
Using template $paramod$415abdcadc251df4f0f033b62b8f3296b8461b4e\_90_alu for cells of type $alu.
Using template $paramod$6573c1c269218f299badf6e04ca86aa37fdb352c\_90_alu for cells of type $alu.
Using template $paramod$6a21b72c9c0b32e81b169c7e08a4d8b9c462448f\_90_alu for cells of type $alu.
Using template $paramod$324e0706ebb77f1915b22f4a136962ec3fd1d7ff\_90_alu for cells of type $alu.
Using template $paramod$461fc931d630cb01bec1fea87f37fbcc53f6f6a4\_90_alu for cells of type $alu.
Using template $paramod$fe074227b1c5fbaa1ea56076182c29dbcf3a782a\_90_alu for cells of type $alu.
Using template $paramod$85502450775e62e9c6a2fe29020b3433d4335647\_90_alu for cells of type $alu.
Using template $paramod$e32c921f95fe0e2350204f4ecefc9e296355521b\_90_alu for cells of type $alu.
Using template $paramod$05d913fba320393c7e943e625bef3af776153b60\_90_alu for cells of type $alu.
Using template $paramod$8e07e2c0a3efc148d2f3714f3901076678774ed1\_90_alu for cells of type $alu.
Using template $paramod$5b7e592b3c2951af6800b7fd597f66a79b72b91c\_90_alu for cells of type $alu.
Using template $paramod$90182783100594e2dd636a282c4723cfc9adaedd\_90_alu for cells of type $alu.
Using template $paramod$851c5c9b30913ea2deae68e3ca9e9c4e649723bc\_90_alu for cells of type $alu.
Using template $paramod$1445aacdb5f2a1ef9fedf1373097ffa45438211d\_90_alu for cells of type $alu.
Using template $paramod$7add42b712fe5bbbba521e93062103d6bf78a453\_90_alu for cells of type $alu.
Using template $paramod$b6f86f6a0c43c26b22ee55f51e05d5951f0e6562\_90_alu for cells of type $alu.
Using template $paramod$044fdceace8c449ec99f900b42120ac005ff4065\_90_alu for cells of type $alu.
Using template $paramod$b6b58933bcf3c8b9e3e5de18c2637bd0e12c7c47\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111110 for cells of type $lcu.
Using template $paramod$570e0f39313dcc7fd363660e424ed65456d5e528\_90_alu for cells of type $alu.
Using template $paramod$998cf7bc9d7210191f713bc4d6d4662cd93b2388\_90_alu for cells of type $alu.
Using template $paramod$ff3be08ab49fb6d842ec632f71d7bdfdfeac11f2\_90_alu for cells of type $alu.
Using template $paramod$6803672fd11fe2b170fd77183bed09a9a4180daf\_90_alu for cells of type $alu.
Using template $paramod$cce8942472449c9091d3e668819b0b8aa71c31b9\_90_alu for cells of type $alu.
  add \count_buckets [63:0] (64 bits, unsigned)
  add \count_buckets [6399:6336] (64 bits, unsigned)
  add \count_buckets [6335:6272] (64 bits, unsigned)
  add \count_buckets [6271:6208] (64 bits, unsigned)
  add \count_buckets [6207:6144] (64 bits, unsigned)
  add \count_buckets [6143:6080] (64 bits, unsigned)
  add \count_buckets [6079:6016] (64 bits, unsigned)
  add \count_buckets [6015:5952] (64 bits, unsigned)
  add \count_buckets [5951:5888] (64 bits, unsigned)
  add \count_buckets [5887:5824] (64 bits, unsigned)
  add \count_buckets [5823:5760] (64 bits, unsigned)
  add \count_buckets [5759:5696] (64 bits, unsigned)
  add \count_buckets [5695:5632] (64 bits, unsigned)
  add \count_buckets [5631:5568] (64 bits, unsigned)
  add \count_buckets [5567:5504] (64 bits, unsigned)
  add \count_buckets [5503:5440] (64 bits, unsigned)
  add \count_buckets [5439:5376] (64 bits, unsigned)
  add \count_buckets [5375:5312] (64 bits, unsigned)
  add \count_buckets [5311:5248] (64 bits, unsigned)
  add \count_buckets [5247:5184] (64 bits, unsigned)
  add \count_buckets [5183:5120] (64 bits, unsigned)
  add \count_buckets [5119:5056] (64 bits, unsigned)
  add \count_buckets [5055:4992] (64 bits, unsigned)
  add \count_buckets [4991:4928] (64 bits, unsigned)
  add \count_buckets [4927:4864] (64 bits, unsigned)
  add \count_buckets [4863:4800] (64 bits, unsigned)
  add \count_buckets [4799:4736] (64 bits, unsigned)
  add \count_buckets [4735:4672] (64 bits, unsigned)
  add \count_buckets [4671:4608] (64 bits, unsigned)
  add \count_buckets [4607:4544] (64 bits, unsigned)
  add \count_buckets [4543:4480] (64 bits, unsigned)
  add \count_buckets [4479:4416] (64 bits, unsigned)
  add \count_buckets [4415:4352] (64 bits, unsigned)
  add \count_buckets [4351:4288] (64 bits, unsigned)
  add \count_buckets [4287:4224] (64 bits, unsigned)
  add \count_buckets [4223:4160] (64 bits, unsigned)
  add \count_buckets [4159:4096] (64 bits, unsigned)
  add \count_buckets [4095:4032] (64 bits, unsigned)
  add \count_buckets [4031:3968] (64 bits, unsigned)
  add \count_buckets [3967:3904] (64 bits, unsigned)
  add \count_buckets [3903:3840] (64 bits, unsigned)
  add \count_buckets [3839:3776] (64 bits, unsigned)
  add \count_buckets [3775:3712] (64 bits, unsigned)
  add \count_buckets [3711:3648] (64 bits, unsigned)
  add \count_buckets [3647:3584] (64 bits, unsigned)
  add \count_buckets [3583:3520] (64 bits, unsigned)
  add \count_buckets [3519:3456] (64 bits, unsigned)
  add \count_buckets [3455:3392] (64 bits, unsigned)
  add \count_buckets [3391:3328] (64 bits, unsigned)
  add \count_buckets [3327:3264] (64 bits, unsigned)
  add \count_buckets [3263:3200] (64 bits, unsigned)
  add \count_buckets [3199:3136] (64 bits, unsigned)
  add \count_buckets [3135:3072] (64 bits, unsigned)
  add \count_buckets [3071:3008] (64 bits, unsigned)
  add \count_buckets [3007:2944] (64 bits, unsigned)
  add \count_buckets [2943:2880] (64 bits, unsigned)
  add \count_buckets [2879:2816] (64 bits, unsigned)
  add \count_buckets [2815:2752] (64 bits, unsigned)
  add \count_buckets [2751:2688] (64 bits, unsigned)
  add \count_buckets [2687:2624] (64 bits, unsigned)
  add \count_buckets [2623:2560] (64 bits, unsigned)
  add \count_buckets [2559:2496] (64 bits, unsigned)
  add \count_buckets [2495:2432] (64 bits, unsigned)
  add \count_buckets [2431:2368] (64 bits, unsigned)
  add \count_buckets [2367:2304] (64 bits, unsigned)
  add \count_buckets [2303:2240] (64 bits, unsigned)
  add \count_buckets [2239:2176] (64 bits, unsigned)
  add \count_buckets [2175:2112] (64 bits, unsigned)
  add \count_buckets [2111:2048] (64 bits, unsigned)
  add \count_buckets [2047:1984] (64 bits, unsigned)
  add \count_buckets [1983:1920] (64 bits, unsigned)
  add \count_buckets [1919:1856] (64 bits, unsigned)
  add \count_buckets [1855:1792] (64 bits, unsigned)
  add \count_buckets [1791:1728] (64 bits, unsigned)
  add \count_buckets [1727:1664] (64 bits, unsigned)
  add \count_buckets [1663:1600] (64 bits, unsigned)
  add \count_buckets [1599:1536] (64 bits, unsigned)
  add \count_buckets [1535:1472] (64 bits, unsigned)
  add \count_buckets [1471:1408] (64 bits, unsigned)
  add \count_buckets [1407:1344] (64 bits, unsigned)
  add \count_buckets [1343:1280] (64 bits, unsigned)
  add \count_buckets [1279:1216] (64 bits, unsigned)
  add \count_buckets [1215:1152] (64 bits, unsigned)
  add \count_buckets [1151:1088] (64 bits, unsigned)
  add \count_buckets [1087:1024] (64 bits, unsigned)
  add \count_buckets [1023:960] (64 bits, unsigned)
  add \count_buckets [959:896] (64 bits, unsigned)
  add \count_buckets [895:832] (64 bits, unsigned)
  add \count_buckets [831:768] (64 bits, unsigned)
  add \count_buckets [767:704] (64 bits, unsigned)
  add \count_buckets [703:640] (64 bits, unsigned)
  add \count_buckets [639:576] (64 bits, unsigned)
  add \count_buckets [575:512] (64 bits, unsigned)
  add \count_buckets [511:448] (64 bits, unsigned)
  add \count_buckets [447:384] (64 bits, unsigned)
  add \count_buckets [383:320] (64 bits, unsigned)
  add \count_buckets [319:256] (64 bits, unsigned)
  add \count_buckets [255:192] (64 bits, unsigned)
  add \count_buckets [191:128] (64 bits, unsigned)
  add \count_buckets [127:64] (64 bits, unsigned)
No more expansions possible.
<suppressed ~37591 debug messages>

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
<suppressed ~2 debug messages>
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
<suppressed ~1230 debug messages>
Optimizing module acceleration_x_direction_change_output_stream_entity.
<suppressed ~2 debug messages>
Optimizing module acceleration_x_input_stream_entity.
<suppressed ~2 debug messages>
Optimizing module acceleration_x_periodic_output_stream_entity.
<suppressed ~2 debug messages>
Optimizing module acceleration_x_rising_output_stream_entity.
<suppressed ~429 debug messages>
Optimizing module acceleration_x_sinking_output_stream_entity.
<suppressed ~321 debug messages>
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~562 debug messages>
Optimizing module evaluator.
<suppressed ~4 debug messages>
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
<suppressed ~736 debug messages>
Optimizing module gps_medium_loss_output_stream_entity.
<suppressed ~722 debug messages>
Optimizing module gps_missed_beat_output_stream_entity.
<suppressed ~362 debug messages>
Optimizing module gps_sats_input_stream_entity.
<suppressed ~2 debug messages>
Optimizing module gps_very_high_loss_output_stream_entity.
<suppressed ~362 debug messages>
Optimizing module high_level_controller.
<suppressed ~13 debug messages>
Optimizing module hlqinterface.
<suppressed ~21848 debug messages>
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
<suppressed ~1263 debug messages>
Optimizing module lat_gps_count_2_sliding_window_entity.
<suppressed ~780 debug messages>
Optimizing module lat_gps_count_3_sliding_window_entity.
<suppressed ~780 debug messages>
Optimizing module lat_gps_count_4_sliding_window_entity.
<suppressed ~780 debug messages>
Optimizing module lat_gps_count_5_sliding_window_entity.
<suppressed ~780 debug messages>
Optimizing module lat_gps_count_6_sliding_window_entity.
<suppressed ~780 debug messages>
Optimizing module lat_gps_input_stream_entity.
<suppressed ~2 debug messages>
Optimizing module low_level_controller.
<suppressed ~6 debug messages>
Optimizing module monitor.
Optimizing module queue.
<suppressed ~1166 debug messages>
Optimizing module scheduler.
<suppressed ~406 debug messages>
Optimizing module time_unit.
<suppressed ~346 debug messages>
Optimizing module trigger_acc_output_stream_entity.
<suppressed ~362 debug messages>
Optimizing module trigger_gps_sats_output_stream_entity.
<suppressed ~374 debug messages>

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
<suppressed ~48 debug messages>
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
<suppressed ~96 debug messages>
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
<suppressed ~189 debug messages>
Finding identical cells in module `\evaluator'.
<suppressed ~3 debug messages>
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
<suppressed ~336 debug messages>
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
<suppressed ~345 debug messages>
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
<suppressed ~174 debug messages>
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
<suppressed ~162 debug messages>
Finding identical cells in module `\high_level_controller'.
<suppressed ~9 debug messages>
Finding identical cells in module `\hlqinterface'.
<suppressed ~27417 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
<suppressed ~48 debug messages>
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
<suppressed ~48 debug messages>
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
<suppressed ~48 debug messages>
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
<suppressed ~51 debug messages>
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
<suppressed ~51 debug messages>
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
<suppressed ~51 debug messages>
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
<suppressed ~6 debug messages>
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~645 debug messages>
Finding identical cells in module `\scheduler'.
<suppressed ~201 debug messages>
Finding identical cells in module `\time_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\trigger_acc_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
<suppressed ~177 debug messages>
Removed a total of 10042 cells.

2.21.3. Executing OPT_DFF pass (perform DFF optimizations).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 5151 unused cells and 24478 unused wires.
<suppressed ~5183 debug messages>

2.21.5. Finished fast OPT passes.

2.22. Executing ABC pass (technology mapping using ABC).

2.22.1. Extracting gate netlist of module `\acceleration_x_changes_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 79 gates and 148 wires to a netlist network with 68 inputs and 70 outputs.

2.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.1.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:       68
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       70
Removing temp directory.

2.22.2. Extracting gate netlist of module `\acceleration_x_direction_change_count_0_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 31993 gates and 38523 wires to a netlist network with 6529 inputs and 196 outputs.

2.22.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.2.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:             ORNOT cells:       71
ABC RESULTS:               NOT cells:       38
ABC RESULTS:               AND cells:       96
ABC RESULTS:              XNOR cells:     2926
ABC RESULTS:              NAND cells:     2111
ABC RESULTS:                OR cells:     4179
ABC RESULTS:               NOR cells:      499
ABC RESULTS:            ANDNOT cells:    12226
ABC RESULTS:               XOR cells:     9791
ABC RESULTS:        internal signals:    31798
ABC RESULTS:           input signals:     6529
ABC RESULTS:          output signals:      196
Removing temp directory.

2.22.3. Extracting gate netlist of module `\acceleration_x_direction_change_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 21 gates and 32 wires to a netlist network with 10 inputs and 7 outputs.

2.22.3.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.3.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               AND cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.4. Extracting gate netlist of module `\acceleration_x_input_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

2.22.4.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.4.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

2.22.5. Extracting gate netlist of module `\acceleration_x_periodic_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 213 wires to a netlist network with 69 inputs and 70 outputs.

2.22.5.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.5.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               AND cells:       64
ABC RESULTS:            ANDNOT cells:       68
ABC RESULTS:        internal signals:       74
ABC RESULTS:           input signals:       69
ABC RESULTS:          output signals:       70
Removing temp directory.

2.22.6. Extracting gate netlist of module `\acceleration_x_rising_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 744 gates and 878 wires to a netlist network with 133 inputs and 7 outputs.

2.22.6.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:               NOT cells:       14
ABC RESULTS:               NOR cells:       58
ABC RESULTS:             ORNOT cells:       48
ABC RESULTS:               MUX cells:       65
ABC RESULTS:               XOR cells:      126
ABC RESULTS:                OR cells:       97
ABC RESULTS:            ANDNOT cells:      200
ABC RESULTS:        internal signals:      738
ABC RESULTS:           input signals:      133
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.7. Extracting gate netlist of module `\acceleration_x_sinking_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 891 gates and 1025 wires to a netlist network with 133 inputs and 7 outputs.

2.22.7.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.7.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       65
ABC RESULTS:               NOR cells:       40
ABC RESULTS:               NOT cells:       46
ABC RESULTS:               AND cells:       12
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:               XOR cells:      118
ABC RESULTS:             ORNOT cells:       59
ABC RESULTS:              NAND cells:        1
ABC RESULTS:                OR cells:       81
ABC RESULTS:            ANDNOT cells:      336
ABC RESULTS:        internal signals:      885
ABC RESULTS:           input signals:      133
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.8. Extracting gate netlist of module `\check_new_input' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

2.22.8.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.8.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

2.22.9. Extracting gate netlist of module `\clock_pre_processing' to `<abc-temp-dir>/input.blif'..
Extracted 320 gates and 386 wires to a netlist network with 65 inputs and 67 outputs.

2.22.9.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.9.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               AND cells:        1
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              NAND cells:       40
ABC RESULTS:                OR cells:       96
ABC RESULTS:             ORNOT cells:       25
ABC RESULTS:               XOR cells:       48
ABC RESULTS:            ANDNOT cells:       81
ABC RESULTS:        internal signals:      254
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       67
Removing temp directory.

2.22.10. Extracting gate netlist of module `\evaluator' to `<abc-temp-dir>/input.blif'..
Extracted 189 gates and 263 wires to a netlist network with 73 inputs and 40 outputs.

2.22.10.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.10.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               AND cells:       26
ABC RESULTS:              NAND cells:       17
ABC RESULTS:                OR cells:       33
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       90
ABC RESULTS:        internal signals:      150
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       40
Removing temp directory.

2.22.11. Extracting gate netlist of module `\event_delay' to `<abc-temp-dir>/input.blif'..
Extracted 259 gates and 520 wires to a netlist network with 260 inputs and 259 outputs.

2.22.11.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      259
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:      260
ABC RESULTS:          output signals:      259
Removing temp directory.

2.22.12. Extracting gate netlist of module `\extinterface' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.13. Extracting gate netlist of module `\gps_high_loss_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 292 gates and 425 wires to a netlist network with 132 inputs and 7 outputs.

2.22.13.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.13.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        7
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:                OR cells:      121
ABC RESULTS:            ANDNOT cells:       19
ABC RESULTS:        internal signals:      286
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.14. Extracting gate netlist of module `\gps_medium_loss_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 282 gates and 415 wires to a netlist network with 132 inputs and 7 outputs.

2.22.14.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.14.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:      125
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:        internal signals:      276
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.15. Extracting gate netlist of module `\gps_missed_beat_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 150 gates and 219 wires to a netlist network with 68 inputs and 7 outputs.

2.22.15.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.15.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:                OR cells:       63
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:        internal signals:      144
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.16. Extracting gate netlist of module `\gps_sats_input_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

2.22.16.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.16.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

2.22.17. Extracting gate netlist of module `\gps_very_high_loss_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 155 gates and 224 wires to a netlist network with 68 inputs and 7 outputs.

2.22.17.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.17.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              NAND cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:                OR cells:       65
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:        internal signals:      149
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.18. Extracting gate netlist of module `\high_level_controller' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

2.22.18.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.18.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

2.22.19. Extracting gate netlist of module `\hlqinterface' to `<abc-temp-dir>/input.blif'..
Extracted 6680 gates and 6848 wires to a netlist network with 167 inputs and 105 outputs.

2.22.19.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       74
ABC RESULTS:               NOR cells:      349
ABC RESULTS:             ORNOT cells:      221
ABC RESULTS:                OR cells:      388
ABC RESULTS:              XNOR cells:      141
ABC RESULTS:               MUX cells:     1035
ABC RESULTS:               NOT cells:      360
ABC RESULTS:              NAND cells:       92
ABC RESULTS:            ANDNOT cells:     2115
ABC RESULTS:               XOR cells:      791
ABC RESULTS:        internal signals:     6576
ABC RESULTS:           input signals:      167
ABC RESULTS:          output signals:      105
Removing temp directory.

2.22.20. Extracting gate netlist of module `\implementation' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.21. Extracting gate netlist of module `\input_pre_processing' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.22. Extracting gate netlist of module `\lat_gps_count_1_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 35129 gates and 42299 wires to a netlist network with 7169 inputs and 196 outputs.

2.22.22.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.22.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               AND cells:       33
ABC RESULTS:             ORNOT cells:      101
ABC RESULTS:               NOT cells:       40
ABC RESULTS:              XNOR cells:     3162
ABC RESULTS:              NAND cells:     2361
ABC RESULTS:                OR cells:     4483
ABC RESULTS:               NOR cells:      663
ABC RESULTS:            ANDNOT cells:    13409
ABC RESULTS:               XOR cells:    10823
ABC RESULTS:        internal signals:    34934
ABC RESULTS:           input signals:     7169
ABC RESULTS:          output signals:      196
Removing temp directory.

2.22.23. Extracting gate netlist of module `\lat_gps_count_2_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 825 gates and 1017 wires to a netlist network with 191 inputs and 130 outputs.

2.22.23.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.23.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               AND cells:        7
ABC RESULTS:             ORNOT cells:       89
ABC RESULTS:              XNOR cells:       58
ABC RESULTS:              NAND cells:       74
ABC RESULTS:                OR cells:      104
ABC RESULTS:            ANDNOT cells:      270
ABC RESULTS:               XOR cells:      118
ABC RESULTS:        internal signals:      696
ABC RESULTS:           input signals:      191
ABC RESULTS:          output signals:      130
Removing temp directory.

2.22.24. Extracting gate netlist of module `\lat_gps_count_3_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 825 gates and 1017 wires to a netlist network with 191 inputs and 130 outputs.

2.22.24.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.24.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:             ORNOT cells:       83
ABC RESULTS:              XNOR cells:       60
ABC RESULTS:              NAND cells:       79
ABC RESULTS:                OR cells:      102
ABC RESULTS:            ANDNOT cells:      271
ABC RESULTS:               XOR cells:      116
ABC RESULTS:        internal signals:      696
ABC RESULTS:           input signals:      191
ABC RESULTS:          output signals:      130
Removing temp directory.

2.22.25. Extracting gate netlist of module `\lat_gps_count_4_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 824 gates and 1016 wires to a netlist network with 191 inputs and 130 outputs.

2.22.25.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.25.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               AND cells:        7
ABC RESULTS:             ORNOT cells:       89
ABC RESULTS:              XNOR cells:       58
ABC RESULTS:              NAND cells:       74
ABC RESULTS:                OR cells:      103
ABC RESULTS:            ANDNOT cells:      269
ABC RESULTS:               XOR cells:      118
ABC RESULTS:        internal signals:      695
ABC RESULTS:           input signals:      191
ABC RESULTS:          output signals:      130
Removing temp directory.

2.22.26. Extracting gate netlist of module `\lat_gps_count_5_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 824 gates and 1016 wires to a netlist network with 191 inputs and 130 outputs.

2.22.26.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.26.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:             ORNOT cells:       82
ABC RESULTS:              XNOR cells:       60
ABC RESULTS:              NAND cells:       79
ABC RESULTS:                OR cells:       98
ABC RESULTS:            ANDNOT cells:      275
ABC RESULTS:               XOR cells:      116
ABC RESULTS:        internal signals:      695
ABC RESULTS:           input signals:      191
ABC RESULTS:          output signals:      130
Removing temp directory.

2.22.27. Extracting gate netlist of module `\lat_gps_count_6_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 824 gates and 1016 wires to a netlist network with 191 inputs and 130 outputs.

2.22.27.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.27.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:        8
ABC RESULTS:             ORNOT cells:       82
ABC RESULTS:              XNOR cells:       60
ABC RESULTS:              NAND cells:       79
ABC RESULTS:                OR cells:       98
ABC RESULTS:            ANDNOT cells:      275
ABC RESULTS:               XOR cells:      116
ABC RESULTS:        internal signals:      695
ABC RESULTS:           input signals:      191
ABC RESULTS:          output signals:      130
Removing temp directory.

2.22.28. Extracting gate netlist of module `\lat_gps_input_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

2.22.28.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.28.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

2.22.29. Extracting gate netlist of module `\low_level_controller' to `<abc-temp-dir>/input.blif'..
Extracted 29 gates and 35 wires to a netlist network with 5 inputs and 7 outputs.

2.22.29.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.29.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:                OR cells:       10
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.30. Extracting gate netlist of module `\monitor' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.31. Extracting gate netlist of module `\queue' to `<abc-temp-dir>/input.blif'..
Extracted 709 gates and 1286 wires to a netlist network with 577 inputs and 310 outputs.

2.22.31.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.31.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        7
ABC RESULTS:               AND cells:       14
ABC RESULTS:               XOR cells:       62
ABC RESULTS:               MUX cells:      301
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:       41
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:            ANDNOT cells:       83
ABC RESULTS:                OR cells:       61
ABC RESULTS:        internal signals:      399
ABC RESULTS:           input signals:      577
ABC RESULTS:          output signals:      310
Removing temp directory.

2.22.32. Extracting gate netlist of module `\scheduler' to `<abc-temp-dir>/input.blif'..
Extracted 553 gates and 676 wires to a netlist network with 123 inputs and 60 outputs.

2.22.32.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.32.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        3
ABC RESULTS:             ORNOT cells:       73
ABC RESULTS:              XNOR cells:       34
ABC RESULTS:                OR cells:       68
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               AND cells:       10
ABC RESULTS:              NAND cells:       25
ABC RESULTS:            ANDNOT cells:      175
ABC RESULTS:               XOR cells:       83
ABC RESULTS:        internal signals:      493
ABC RESULTS:           input signals:      123
ABC RESULTS:          output signals:       60
Removing temp directory.

2.22.33. Extracting gate netlist of module `\time_unit' to `<abc-temp-dir>/input.blif'..
Extracted 175 gates and 236 wires to a netlist network with 61 inputs and 61 outputs.

2.22.33.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.33.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:       21
ABC RESULTS:              NAND cells:       29
ABC RESULTS:                OR cells:       43
ABC RESULTS:            ANDNOT cells:       33
ABC RESULTS:               XOR cells:       39
ABC RESULTS:        internal signals:      114
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       61
Removing temp directory.

2.22.34. Extracting gate netlist of module `\trigger_acc_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 211 wires to a netlist network with 67 inputs and 7 outputs.

2.22.34.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.34.2. Re-integrating ABC results.
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:       59
ABC RESULTS:               NOR cells:        4
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:        internal signals:      137
ABC RESULTS:           input signals:       67
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.35. Extracting gate netlist of module `\trigger_gps_sats_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 218 gates and 288 wires to a netlist network with 69 inputs and 7 outputs.

2.22.35.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.35.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:       60
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              NAND cells:        7
ABC RESULTS:                OR cells:       60
ABC RESULTS:            ANDNOT cells:       13
ABC RESULTS:        internal signals:      212
ABC RESULTS:           input signals:       69
ABC RESULTS:          output signals:        7
Removing temp directory.

2.23. Executing OPT pass (performing simple optimizations).

2.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module acceleration_x_changes_output_stream_entity.
Optimizing module acceleration_x_direction_change_count_0_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module acceleration_x_direction_change_output_stream_entity.
Optimizing module acceleration_x_input_stream_entity.
Optimizing module acceleration_x_periodic_output_stream_entity.
Optimizing module acceleration_x_rising_output_stream_entity.
Optimizing module acceleration_x_sinking_output_stream_entity.
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~2 debug messages>
Optimizing module evaluator.
<suppressed ~15 debug messages>
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module gps_high_loss_output_stream_entity.
Optimizing module gps_medium_loss_output_stream_entity.
Optimizing module gps_missed_beat_output_stream_entity.
Optimizing module gps_sats_input_stream_entity.
Optimizing module gps_very_high_loss_output_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module input_pre_processing.
Optimizing module lat_gps_count_1_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_2_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_3_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_4_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module lat_gps_count_5_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_count_6_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module lat_gps_input_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module queue.
<suppressed ~19 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module trigger_acc_output_stream_entity.
<suppressed ~2 debug messages>
Optimizing module trigger_gps_sats_output_stream_entity.

2.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\acceleration_x_changes_output_stream_entity'.
Finding identical cells in module `\acceleration_x_direction_change_count_0_sliding_window_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\acceleration_x_direction_change_output_stream_entity'.
Finding identical cells in module `\acceleration_x_input_stream_entity'.
Finding identical cells in module `\acceleration_x_periodic_output_stream_entity'.
Finding identical cells in module `\acceleration_x_rising_output_stream_entity'.
Finding identical cells in module `\acceleration_x_sinking_output_stream_entity'.
<suppressed ~48 debug messages>
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\gps_high_loss_output_stream_entity'.
Finding identical cells in module `\gps_medium_loss_output_stream_entity'.
Finding identical cells in module `\gps_missed_beat_output_stream_entity'.
Finding identical cells in module `\gps_sats_input_stream_entity'.
Finding identical cells in module `\gps_very_high_loss_output_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~447 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\lat_gps_count_1_sliding_window_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\lat_gps_count_2_sliding_window_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\lat_gps_count_3_sliding_window_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\lat_gps_count_4_sliding_window_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\lat_gps_count_5_sliding_window_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\lat_gps_count_6_sliding_window_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\lat_gps_input_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\queue'.
<suppressed ~18 debug messages>
Finding identical cells in module `\scheduler'.
<suppressed ~3 debug messages>
Finding identical cells in module `\time_unit'.
Finding identical cells in module `\trigger_acc_output_stream_entity'.
Finding identical cells in module `\trigger_gps_sats_output_stream_entity'.
Removed a total of 182 cells.

2.23.3. Executing OPT_DFF pass (perform DFF optimizations).

2.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \acceleration_x_changes_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_count_0_sliding_window_entity..
Finding unused cells or wires in module \acceleration_x_direction_change_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_input_stream_entity..
Finding unused cells or wires in module \acceleration_x_periodic_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_rising_output_stream_entity..
Finding unused cells or wires in module \acceleration_x_sinking_output_stream_entity..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \gps_high_loss_output_stream_entity..
Finding unused cells or wires in module \gps_medium_loss_output_stream_entity..
Finding unused cells or wires in module \gps_missed_beat_output_stream_entity..
Finding unused cells or wires in module \gps_sats_input_stream_entity..
Finding unused cells or wires in module \gps_very_high_loss_output_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \lat_gps_count_1_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_2_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_3_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_4_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_5_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_count_6_sliding_window_entity..
Finding unused cells or wires in module \lat_gps_input_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \trigger_acc_output_stream_entity..
Finding unused cells or wires in module \trigger_gps_sats_output_stream_entity..
Removed 2 unused cells and 25877 unused wires.
<suppressed ~35 debug messages>

2.23.5. Finished fast OPT passes.

2.24. Executing HIERARCHY pass (managing design hierarchy).

2.24.1. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \clock_pre_processing
Used module:     \input_pre_processing
Used module:     \monitor
Used module:         \high_level_controller
Used module:             \check_new_input
Used module:             \event_delay
Used module:             \extinterface
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \acceleration_x_changes_output_stream_entity
Used module:                 \acceleration_x_direction_change_count_0_sliding_window_entity
Used module:                 \acceleration_x_direction_change_output_stream_entity
Used module:                 \acceleration_x_input_stream_entity
Used module:                 \acceleration_x_periodic_output_stream_entity
Used module:                 \acceleration_x_rising_output_stream_entity
Used module:                 \acceleration_x_sinking_output_stream_entity
Used module:                 \gps_high_loss_output_stream_entity
Used module:                 \gps_medium_loss_output_stream_entity
Used module:                 \gps_missed_beat_output_stream_entity
Used module:                 \gps_sats_input_stream_entity
Used module:                 \gps_very_high_loss_output_stream_entity
Used module:                 \lat_gps_count_1_sliding_window_entity
Used module:                 \lat_gps_count_2_sliding_window_entity
Used module:                 \lat_gps_count_3_sliding_window_entity
Used module:                 \lat_gps_count_4_sliding_window_entity
Used module:                 \lat_gps_count_5_sliding_window_entity
Used module:                 \lat_gps_count_6_sliding_window_entity
Used module:                 \lat_gps_input_stream_entity
Used module:                 \trigger_acc_output_stream_entity
Used module:                 \trigger_gps_sats_output_stream_entity
Used module:         \queue

2.24.2. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \clock_pre_processing
Used module:     \input_pre_processing
Used module:     \monitor
Used module:         \high_level_controller
Used module:             \check_new_input
Used module:             \event_delay
Used module:             \extinterface
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \acceleration_x_changes_output_stream_entity
Used module:                 \acceleration_x_direction_change_count_0_sliding_window_entity
Used module:                 \acceleration_x_direction_change_output_stream_entity
Used module:                 \acceleration_x_input_stream_entity
Used module:                 \acceleration_x_periodic_output_stream_entity
Used module:                 \acceleration_x_rising_output_stream_entity
Used module:                 \acceleration_x_sinking_output_stream_entity
Used module:                 \gps_high_loss_output_stream_entity
Used module:                 \gps_medium_loss_output_stream_entity
Used module:                 \gps_missed_beat_output_stream_entity
Used module:                 \gps_sats_input_stream_entity
Used module:                 \gps_very_high_loss_output_stream_entity
Used module:                 \lat_gps_count_1_sliding_window_entity
Used module:                 \lat_gps_count_2_sliding_window_entity
Used module:                 \lat_gps_count_3_sliding_window_entity
Used module:                 \lat_gps_count_4_sliding_window_entity
Used module:                 \lat_gps_count_5_sliding_window_entity
Used module:                 \lat_gps_count_6_sliding_window_entity
Used module:                 \lat_gps_input_stream_entity
Used module:                 \trigger_acc_output_stream_entity
Used module:                 \trigger_gps_sats_output_stream_entity
Used module:         \queue
Removed 0 unused modules.

2.25. Printing statistics.

=== acceleration_x_changes_output_stream_entity ===

   Number of wires:                 88
   Number of wire bits:            277
   Number of public wires:          14
   Number of public wire bits:     203
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                141
     $_ANDNOT_                      68
     $_DFFE_PP0P_                   67
     $_MUX_                          1
     $_NOR_                          2
     $_NOT_                          1
     $_OR_                           2

=== acceleration_x_direction_change_count_0_sliding_window_entity ===

   Number of wires:              31840
   Number of wire bits:          38922
   Number of public wires:          19
   Number of public wire bits:    6670
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              38463
     $_ANDNOT_                   12226
     $_AND_                         96
     $_DFFE_PP0P_                 6526
     $_MUX_                          1
     $_NAND_                      2111
     $_NOR_                        499
     $_NOT_                         38
     $_ORNOT_                       71
     $_OR_                        4178
     $_XNOR_                      2926
     $_XOR_                       9791

=== acceleration_x_direction_change_output_stream_entity ===

   Number of wires:                 36
   Number of wire bits:             36
   Number of public wires:          20
   Number of public wire bits:      20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $_ANDNOT_                       7
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         2
     $_NOR_                          2
     $_NOT_                          1
     $_OR_                           2

=== acceleration_x_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== acceleration_x_periodic_output_stream_entity ===

   Number of wires:                152
   Number of wire bits:            471
   Number of public wires:          14
   Number of public wire bits:     333
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                270
     $_ANDNOT_                      68
     $_AND_                         64
     $_DFFE_PP0P_                  132
     $_MUX_                          1
     $_NOR_                          2
     $_NOT_                          1
     $_OR_                           2

=== acceleration_x_rising_output_stream_entity ===

   Number of wires:                635
   Number of wire bits:            765
   Number of public wires:          16
   Number of public wire bits:     146
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                625
     $_ANDNOT_                     200
     $_AND_                         11
     $_DFFE_PP0P_                    6
     $_MUX_                         65
     $_NOR_                         58
     $_NOT_                         14
     $_ORNOT_                       48
     $_OR_                          97
     $_XOR_                        126

=== acceleration_x_sinking_output_stream_entity ===

   Number of wires:                768
   Number of wire bits:            898
   Number of public wires:          16
   Number of public wire bits:     146
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                758
     $_ANDNOT_                     326
     $_AND_                         12
     $_DFFE_PP0P_                    6
     $_MUX_                         65
     $_NAND_                         1
     $_NOR_                         38
     $_NOT_                         46
     $_ORNOT_                       59
     $_OR_                          77
     $_XNOR_                        10
     $_XOR_                        118

=== check_new_input ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ANDNOT_                       1
     $_DFF_PP0_                      2

=== clock_pre_processing ===

   Number of wires:                324
   Number of wire bits:            386
   Number of public wires:          10
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                381
     $_ANDNOT_                      81
     $_AND_                          1
     $_DFFE_PP0N_                   60
     $_DFFE_PP0P_                    2
     $_DFFE_PP1N_                    4
     $_DFF_PP0_                      1
     $_MUX_                          2
     $_NAND_                        40
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                       25
     $_OR_                          96
     $_XNOR_                        13
     $_XOR_                         48

=== evaluator ===

   Number of wires:                437
   Number of wire bits:           2459
   Number of public wires:         263
   Number of public wire bits:    2285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                232
     $_ANDNOT_                      90
     $_AND_                         26
     $_DFFE_PP0N_                   15
     $_DFFE_PP0P_                   21
     $_DFFE_PP1P_                    1
     $_DFF_PP1_                      1
     $_NAND_                        17
     $_NOT_                          1
     $_ORNOT_                        6
     $_OR_                          33
     acceleration_x_changes_output_stream_entity      1
     acceleration_x_direction_change_count_0_sliding_window_entity      1
     acceleration_x_direction_change_output_stream_entity      1
     acceleration_x_input_stream_entity      1
     acceleration_x_periodic_output_stream_entity      1
     acceleration_x_rising_output_stream_entity      1
     acceleration_x_sinking_output_stream_entity      1
     gps_high_loss_output_stream_entity      1
     gps_medium_loss_output_stream_entity      1
     gps_missed_beat_output_stream_entity      1
     gps_sats_input_stream_entity      1
     gps_very_high_loss_output_stream_entity      1
     lat_gps_count_1_sliding_window_entity      1
     lat_gps_count_2_sliding_window_entity      1
     lat_gps_count_3_sliding_window_entity      1
     lat_gps_count_4_sliding_window_entity      1
     lat_gps_count_5_sliding_window_entity      1
     lat_gps_count_6_sliding_window_entity      1
     lat_gps_input_stream_entity      1
     trigger_acc_output_stream_entity      1
     trigger_gps_sats_output_stream_entity      1

=== event_delay ===

   Number of wires:                285
   Number of wire bits:           1041
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                519
     $_AND_                        259
     $_DFF_PP0_                    260

=== extinterface ===

   Number of wires:                 23
   Number of wire bits:            779
   Number of public wires:          23
   Number of public wire bits:     779
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                259
     $_DFF_PP0_                    259

=== gps_high_loss_output_stream_entity ===

   Number of wires:                173
   Number of wire bits:            299
   Number of public wires:          16
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                161
     $_ANDNOT_                      19
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         3
     $_NOR_                          7
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                         121

=== gps_medium_loss_output_stream_entity ===

   Number of wires:                166
   Number of wire bits:            292
   Number of public wires:          16
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                154
     $_ANDNOT_                      15
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         3
     $_NOR_                          3
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                         125

=== gps_missed_beat_output_stream_entity ===

   Number of wires:                 94
   Number of wire bits:            157
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $_ANDNOT_                      10
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NOR_                          3
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          63

=== gps_sats_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== gps_very_high_loss_output_stream_entity ===

   Number of wires:                 99
   Number of wire bits:            162
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 89
     $_ANDNOT_                      10
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         1
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          65

=== high_level_controller ===

   Number of wires:                 92
   Number of wire bits:           2048
   Number of public wires:          88
   Number of public wire bits:    1979
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_AND_                          1
     $_DFF_PP0_                      3
     $_NOT_                          1
     $_XOR_                          1
     check_new_input                 1
     event_delay                     1
     extinterface                    1
     hlqinterface                    1
     scheduler                       1
     time_unit                       1

=== hlqinterface ===

   Number of wires:               5495
   Number of wire bits:           8930
   Number of public wires:         109
   Number of public wire bits:    3511
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5713
     $_ANDNOT_                    1971
     $_AND_                         71
     $_DFFE_PP0P_                  288
     $_DFF_PP0_                      8
     $_MUX_                       1035
     $_NAND_                        92
     $_NOR_                        349
     $_NOT_                        360
     $_ORNOT_                      221
     $_OR_                         386
     $_XNOR_                       141
     $_XOR_                        791

=== implementation ===

   Number of wires:                 65
   Number of wire bits:           1577
   Number of public wires:          65
   Number of public wire bits:    1577
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1

=== input_pre_processing ===

   Number of wires:                 26
   Number of wire bits:            782
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $_DFF_PP0_                    260

=== lat_gps_count_1_sliding_window_entity ===

   Number of wires:              34977
   Number of wire bits:          42699
   Number of public wires:          19
   Number of public wire bits:    7373
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              42241
     $_ANDNOT_                   13409
     $_AND_                         33
     $_DFFE_PP0P_                 7166
     $_MUX_                          1
     $_NAND_                      2361
     $_NOR_                        663
     $_NOT_                         40
     $_ORNOT_                      101
     $_OR_                        4482
     $_XNOR_                      3162
     $_XOR_                      10823

=== lat_gps_count_2_sliding_window_entity ===

   Number of wires:                701
   Number of wire bits:           1191
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                925
     $_ANDNOT_                     270
     $_AND_                          7
     $_DFFE_PP0P_                  188
     $_MUX_                          2
     $_NAND_                        74
     $_NOR_                         10
     $_NOT_                          6
     $_ORNOT_                       89
     $_OR_                         103
     $_XNOR_                        58
     $_XOR_                        118

=== lat_gps_count_3_sliding_window_entity ===

   Number of wires:                701
   Number of wire bits:           1191
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                925
     $_ANDNOT_                     271
     $_AND_                          8
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        79
     $_NOR_                         12
     $_NOT_                          6
     $_ORNOT_                       83
     $_OR_                         101
     $_XNOR_                        60
     $_XOR_                        116

=== lat_gps_count_4_sliding_window_entity ===

   Number of wires:                698
   Number of wire bits:           1188
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                922
     $_ANDNOT_                     269
     $_AND_                          7
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        74
     $_NOR_                         11
     $_NOT_                          5
     $_ORNOT_                       89
     $_OR_                         102
     $_XNOR_                        58
     $_XOR_                        118

=== lat_gps_count_5_sliding_window_entity ===

   Number of wires:                699
   Number of wire bits:           1189
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                923
     $_ANDNOT_                     275
     $_AND_                          8
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        79
     $_NOR_                         12
     $_NOT_                          5
     $_ORNOT_                       82
     $_OR_                          97
     $_XNOR_                        60
     $_XOR_                        116

=== lat_gps_count_6_sliding_window_entity ===

   Number of wires:                699
   Number of wire bits:           1189
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                923
     $_ANDNOT_                     275
     $_AND_                          8
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        79
     $_NOR_                         12
     $_NOT_                          5
     $_ORNOT_                       82
     $_OR_                          97
     $_XNOR_                        60
     $_XOR_                        116

=== lat_gps_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== low_level_controller ===

   Number of wires:                 73
   Number of wire bits:            579
   Number of public wires:          51
   Number of public wire bits:     557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_ANDNOT_                       6
     $_AND_                          1
     $_DFFE_PP0P_                    2
     $_DFF_PP0_                      2
     $_DFF_PP1_                      1
     $_NAND_                         1
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          10
     evaluator                       1

=== monitor ===

   Number of wires:                149
   Number of wire bits:           2417
   Number of public wires:         148
   Number of public wire bits:    2416
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                396
     $_DFF_NP0_                    393
     high_level_controller           1
     low_level_controller            1
     queue                           1

=== queue ===

   Number of wires:                683
   Number of wire bits:           1992
   Number of public wires:          84
   Number of public wire bits:    1393
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1446
     $_ANDNOT_                      83
     $_AND_                         13
     $_DFFE_PP0P_                  846
     $_DFF_PP0_                      1
     $_MUX_                        301
     $_NAND_                        18
     $_NOR_                         36
     $_NOT_                          7
     $_ORNOT_                       18
     $_OR_                          61
     $_XOR_                         62

=== scheduler ===

   Number of wires:                430
   Number of wire bits:           2077
   Number of public wires:           9
   Number of public wire bits:    1540
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                597
     $_ANDNOT_                     175
     $_AND_                         10
     $_DFFE_PP0P_                  111
     $_DFFE_PP1P_                    7
     $_DFF_PP0_                      1
     $_NAND_                        25
     $_NOR_                          8
     $_NOT_                          3
     $_ORNOT_                       73
     $_OR_                          67
     $_XNOR_                        34
     $_XOR_                         83

=== time_unit ===

   Number of wires:                122
   Number of wire bits:            368
   Number of public wires:           4
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                238
     $_ANDNOT_                      33
     $_AND_                          5
     $_DFF_PP0_                     61
     $_NAND_                        29
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                          43
     $_XNOR_                        21
     $_XOR_                         39

=== trigger_acc_output_stream_entity ===

   Number of wires:                 87
   Number of wire bits:            150
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 77
     $_ANDNOT_                       6
     $_AND_                          1
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                    2
     $_MUX_                          1
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                          59

=== trigger_gps_sats_output_stream_entity ===

   Number of wires:                161
   Number of wire bits:            224
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                151
     $_ANDNOT_                      13
     $_AND_                         60
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         7
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                          60

=== design hierarchy ===

   implementation                    1
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1
       high_level_controller         1
         check_new_input             1
         event_delay                 1
         extinterface                1
         hlqinterface                1
         scheduler                   1
         time_unit                   1
       low_level_controller          1
         evaluator                   1
           acceleration_x_changes_output_stream_entity      1
           acceleration_x_direction_change_count_0_sliding_window_entity      1
           acceleration_x_direction_change_output_stream_entity      1
           acceleration_x_input_stream_entity      1
           acceleration_x_periodic_output_stream_entity      1
           acceleration_x_rising_output_stream_entity      1
           acceleration_x_sinking_output_stream_entity      1
           gps_high_loss_output_stream_entity      1
           gps_medium_loss_output_stream_entity      1
           gps_missed_beat_output_stream_entity      1
           gps_sats_input_stream_entity      1
           gps_very_high_loss_output_stream_entity      1
           lat_gps_count_1_sliding_window_entity      1
           lat_gps_count_2_sliding_window_entity      1
           lat_gps_count_3_sliding_window_entity      1
           lat_gps_count_4_sliding_window_entity      1
           lat_gps_count_5_sliding_window_entity      1
           lat_gps_count_6_sliding_window_entity      1
           lat_gps_input_stream_entity      1
           trigger_acc_output_stream_entity      1
           trigger_gps_sats_output_stream_entity      1
       queue                         1

   Number of wires:              81021
   Number of wire bits:         117345
   Number of public wires:        1243
   Number of public wire bits:   35874
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              98108
     $_ANDNOT_                   30180
     $_AND_                        706
     $_DFFE_PP0N_                   77
     $_DFFE_PP0P_                16337
     $_DFFE_PP1N_                    4
     $_DFFE_PP1P_                    8
     $_DFF_NP0_                    393
     $_DFF_PP0_                    858
     $_DFF_PP1_                      2
     $_MUX_                       1485
     $_NAND_                      5099
     $_NOR_                       1744
     $_NOT_                        551
     $_ORNOT_                     1066
     $_OR_                       10529
     $_XNOR_                      6603
     $_XOR_                      22466

2.26. Executing CHECK pass (checking for obvious problems).
Checking module acceleration_x_changes_output_stream_entity...
Checking module acceleration_x_direction_change_count_0_sliding_window_entity...
Checking module acceleration_x_direction_change_output_stream_entity...
Checking module acceleration_x_input_stream_entity...
Checking module acceleration_x_periodic_output_stream_entity...
Checking module acceleration_x_rising_output_stream_entity...
Checking module acceleration_x_sinking_output_stream_entity...
Checking module check_new_input...
Checking module clock_pre_processing...
Checking module evaluator...
Checking module event_delay...
Checking module extinterface...
Checking module gps_high_loss_output_stream_entity...
Checking module gps_medium_loss_output_stream_entity...
Checking module gps_missed_beat_output_stream_entity...
Checking module gps_sats_input_stream_entity...
Checking module gps_very_high_loss_output_stream_entity...
Checking module high_level_controller...
Checking module hlqinterface...
Checking module implementation...
Checking module input_pre_processing...
Checking module lat_gps_count_1_sliding_window_entity...
Checking module lat_gps_count_2_sliding_window_entity...
Checking module lat_gps_count_3_sliding_window_entity...
Checking module lat_gps_count_4_sliding_window_entity...
Checking module lat_gps_count_5_sliding_window_entity...
Checking module lat_gps_count_6_sliding_window_entity...
Checking module lat_gps_input_stream_entity...
Checking module low_level_controller...
Checking module monitor...
Checking module queue...
Checking module scheduler...
Checking module time_unit...
Checking module trigger_acc_output_stream_entity...
Checking module trigger_gps_sats_output_stream_entity...
Found and reported 0 problems.

3. Printing statistics.

=== acceleration_x_changes_output_stream_entity ===

   Number of wires:                 88
   Number of wire bits:            277
   Number of public wires:          14
   Number of public wire bits:     203
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                141
     $_ANDNOT_                      68
     $_DFFE_PP0P_                   67
     $_MUX_                          1
     $_NOR_                          2
     $_NOT_                          1
     $_OR_                           2

=== acceleration_x_direction_change_count_0_sliding_window_entity ===

   Number of wires:              31840
   Number of wire bits:          38922
   Number of public wires:          19
   Number of public wire bits:    6670
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              38463
     $_ANDNOT_                   12226
     $_AND_                         96
     $_DFFE_PP0P_                 6526
     $_MUX_                          1
     $_NAND_                      2111
     $_NOR_                        499
     $_NOT_                         38
     $_ORNOT_                       71
     $_OR_                        4178
     $_XNOR_                      2926
     $_XOR_                       9791

=== acceleration_x_direction_change_output_stream_entity ===

   Number of wires:                 36
   Number of wire bits:             36
   Number of public wires:          20
   Number of public wire bits:      20
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $_ANDNOT_                       7
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         2
     $_NOR_                          2
     $_NOT_                          1
     $_OR_                           2

=== acceleration_x_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== acceleration_x_periodic_output_stream_entity ===

   Number of wires:                152
   Number of wire bits:            471
   Number of public wires:          14
   Number of public wire bits:     333
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                270
     $_ANDNOT_                      68
     $_AND_                         64
     $_DFFE_PP0P_                  132
     $_MUX_                          1
     $_NOR_                          2
     $_NOT_                          1
     $_OR_                           2

=== acceleration_x_rising_output_stream_entity ===

   Number of wires:                635
   Number of wire bits:            765
   Number of public wires:          16
   Number of public wire bits:     146
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                625
     $_ANDNOT_                     200
     $_AND_                         11
     $_DFFE_PP0P_                    6
     $_MUX_                         65
     $_NOR_                         58
     $_NOT_                         14
     $_ORNOT_                       48
     $_OR_                          97
     $_XOR_                        126

=== acceleration_x_sinking_output_stream_entity ===

   Number of wires:                768
   Number of wire bits:            898
   Number of public wires:          16
   Number of public wire bits:     146
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                758
     $_ANDNOT_                     326
     $_AND_                         12
     $_DFFE_PP0P_                    6
     $_MUX_                         65
     $_NAND_                         1
     $_NOR_                         38
     $_NOT_                         46
     $_ORNOT_                       59
     $_OR_                          77
     $_XNOR_                        10
     $_XOR_                        118

=== check_new_input ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ANDNOT_                       1
     $_DFF_PP0_                      2

=== clock_pre_processing ===

   Number of wires:                324
   Number of wire bits:            386
   Number of public wires:          10
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                381
     $_ANDNOT_                      81
     $_AND_                          1
     $_DFFE_PP0N_                   60
     $_DFFE_PP0P_                    2
     $_DFFE_PP1N_                    4
     $_DFF_PP0_                      1
     $_MUX_                          2
     $_NAND_                        40
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                       25
     $_OR_                          96
     $_XNOR_                        13
     $_XOR_                         48

=== evaluator ===

   Number of wires:                437
   Number of wire bits:           2459
   Number of public wires:         263
   Number of public wire bits:    2285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                232
     $_ANDNOT_                      90
     $_AND_                         26
     $_DFFE_PP0N_                   15
     $_DFFE_PP0P_                   21
     $_DFFE_PP1P_                    1
     $_DFF_PP1_                      1
     $_NAND_                        17
     $_NOT_                          1
     $_ORNOT_                        6
     $_OR_                          33
     acceleration_x_changes_output_stream_entity      1
     acceleration_x_direction_change_count_0_sliding_window_entity      1
     acceleration_x_direction_change_output_stream_entity      1
     acceleration_x_input_stream_entity      1
     acceleration_x_periodic_output_stream_entity      1
     acceleration_x_rising_output_stream_entity      1
     acceleration_x_sinking_output_stream_entity      1
     gps_high_loss_output_stream_entity      1
     gps_medium_loss_output_stream_entity      1
     gps_missed_beat_output_stream_entity      1
     gps_sats_input_stream_entity      1
     gps_very_high_loss_output_stream_entity      1
     lat_gps_count_1_sliding_window_entity      1
     lat_gps_count_2_sliding_window_entity      1
     lat_gps_count_3_sliding_window_entity      1
     lat_gps_count_4_sliding_window_entity      1
     lat_gps_count_5_sliding_window_entity      1
     lat_gps_count_6_sliding_window_entity      1
     lat_gps_input_stream_entity      1
     trigger_acc_output_stream_entity      1
     trigger_gps_sats_output_stream_entity      1

=== event_delay ===

   Number of wires:                285
   Number of wire bits:           1041
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                519
     $_AND_                        259
     $_DFF_PP0_                    260

=== extinterface ===

   Number of wires:                 23
   Number of wire bits:            779
   Number of public wires:          23
   Number of public wire bits:     779
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                259
     $_DFF_PP0_                    259

=== gps_high_loss_output_stream_entity ===

   Number of wires:                173
   Number of wire bits:            299
   Number of public wires:          16
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                161
     $_ANDNOT_                      19
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         3
     $_NOR_                          7
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                         121

=== gps_medium_loss_output_stream_entity ===

   Number of wires:                166
   Number of wire bits:            292
   Number of public wires:          16
   Number of public wire bits:     142
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                154
     $_ANDNOT_                      15
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         3
     $_NOR_                          3
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                         125

=== gps_missed_beat_output_stream_entity ===

   Number of wires:                 94
   Number of wire bits:            157
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $_ANDNOT_                      10
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NOR_                          3
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          63

=== gps_sats_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== gps_very_high_loss_output_stream_entity ===

   Number of wires:                 99
   Number of wire bits:            162
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 89
     $_ANDNOT_                      10
     $_AND_                          1
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         1
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          65

=== high_level_controller ===

   Number of wires:                 92
   Number of wire bits:           2048
   Number of public wires:          88
   Number of public wire bits:    1979
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_AND_                          1
     $_DFF_PP0_                      3
     $_NOT_                          1
     $_XOR_                          1
     check_new_input                 1
     event_delay                     1
     extinterface                    1
     hlqinterface                    1
     scheduler                       1
     time_unit                       1

=== hlqinterface ===

   Number of wires:               5495
   Number of wire bits:           8930
   Number of public wires:         109
   Number of public wire bits:    3511
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5713
     $_ANDNOT_                    1971
     $_AND_                         71
     $_DFFE_PP0P_                  288
     $_DFF_PP0_                      8
     $_MUX_                       1035
     $_NAND_                        92
     $_NOR_                        349
     $_NOT_                        360
     $_ORNOT_                      221
     $_OR_                         386
     $_XNOR_                       141
     $_XOR_                        791

=== implementation ===

   Number of wires:                 65
   Number of wire bits:           1577
   Number of public wires:          65
   Number of public wire bits:    1577
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1

=== input_pre_processing ===

   Number of wires:                 26
   Number of wire bits:            782
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $_DFF_PP0_                    260

=== lat_gps_count_1_sliding_window_entity ===

   Number of wires:              34977
   Number of wire bits:          42699
   Number of public wires:          19
   Number of public wire bits:    7373
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              42241
     $_ANDNOT_                   13409
     $_AND_                         33
     $_DFFE_PP0P_                 7166
     $_MUX_                          1
     $_NAND_                      2361
     $_NOR_                        663
     $_NOT_                         40
     $_ORNOT_                      101
     $_OR_                        4482
     $_XNOR_                      3162
     $_XOR_                      10823

=== lat_gps_count_2_sliding_window_entity ===

   Number of wires:                701
   Number of wire bits:           1191
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                925
     $_ANDNOT_                     270
     $_AND_                          7
     $_DFFE_PP0P_                  188
     $_MUX_                          2
     $_NAND_                        74
     $_NOR_                         10
     $_NOT_                          6
     $_ORNOT_                       89
     $_OR_                         103
     $_XNOR_                        58
     $_XOR_                        118

=== lat_gps_count_3_sliding_window_entity ===

   Number of wires:                701
   Number of wire bits:           1191
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                925
     $_ANDNOT_                     271
     $_AND_                          8
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        79
     $_NOR_                         12
     $_NOT_                          6
     $_ORNOT_                       83
     $_OR_                         101
     $_XNOR_                        60
     $_XOR_                        116

=== lat_gps_count_4_sliding_window_entity ===

   Number of wires:                698
   Number of wire bits:           1188
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                922
     $_ANDNOT_                     269
     $_AND_                          7
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        74
     $_NOR_                         11
     $_NOT_                          5
     $_ORNOT_                       89
     $_OR_                         102
     $_XNOR_                        58
     $_XOR_                        118

=== lat_gps_count_5_sliding_window_entity ===

   Number of wires:                699
   Number of wire bits:           1189
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                923
     $_ANDNOT_                     275
     $_AND_                          8
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        79
     $_NOR_                         12
     $_NOT_                          5
     $_ORNOT_                       82
     $_OR_                          97
     $_XNOR_                        60
     $_XOR_                        116

=== lat_gps_count_6_sliding_window_entity ===

   Number of wires:                699
   Number of wire bits:           1189
   Number of public wires:          19
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                923
     $_ANDNOT_                     275
     $_AND_                          8
     $_DFFE_PP0P_                  188
     $_MUX_                          1
     $_NAND_                        79
     $_NOR_                         12
     $_NOT_                          5
     $_ORNOT_                       82
     $_OR_                          97
     $_XNOR_                        60
     $_XOR_                        116

=== lat_gps_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== low_level_controller ===

   Number of wires:                 73
   Number of wire bits:            579
   Number of public wires:          51
   Number of public wire bits:     557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_ANDNOT_                       6
     $_AND_                          1
     $_DFFE_PP0P_                    2
     $_DFF_PP0_                      2
     $_DFF_PP1_                      1
     $_NAND_                         1
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          10
     evaluator                       1

=== monitor ===

   Number of wires:                149
   Number of wire bits:           2417
   Number of public wires:         148
   Number of public wire bits:    2416
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                396
     $_DFF_NP0_                    393
     high_level_controller           1
     low_level_controller            1
     queue                           1

=== queue ===

   Number of wires:                683
   Number of wire bits:           1992
   Number of public wires:          84
   Number of public wire bits:    1393
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1446
     $_ANDNOT_                      83
     $_AND_                         13
     $_DFFE_PP0P_                  846
     $_DFF_PP0_                      1
     $_MUX_                        301
     $_NAND_                        18
     $_NOR_                         36
     $_NOT_                          7
     $_ORNOT_                       18
     $_OR_                          61
     $_XOR_                         62

=== scheduler ===

   Number of wires:                430
   Number of wire bits:           2077
   Number of public wires:           9
   Number of public wire bits:    1540
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                597
     $_ANDNOT_                     175
     $_AND_                         10
     $_DFFE_PP0P_                  111
     $_DFFE_PP1P_                    7
     $_DFF_PP0_                      1
     $_NAND_                        25
     $_NOR_                          8
     $_NOT_                          3
     $_ORNOT_                       73
     $_OR_                          67
     $_XNOR_                        34
     $_XOR_                         83

=== time_unit ===

   Number of wires:                122
   Number of wire bits:            368
   Number of public wires:           4
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                238
     $_ANDNOT_                      33
     $_AND_                          5
     $_DFF_PP0_                     61
     $_NAND_                        29
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                          43
     $_XNOR_                        21
     $_XOR_                         39

=== trigger_acc_output_stream_entity ===

   Number of wires:                 87
   Number of wire bits:            150
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 77
     $_ANDNOT_                       6
     $_AND_                          1
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                    2
     $_MUX_                          1
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                          59

=== trigger_gps_sats_output_stream_entity ===

   Number of wires:                161
   Number of wire bits:            224
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                151
     $_ANDNOT_                      13
     $_AND_                         60
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         7
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                          60

=== design hierarchy ===

   implementation                    1
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1
       high_level_controller         1
         check_new_input             1
         event_delay                 1
         extinterface                1
         hlqinterface                1
         scheduler                   1
         time_unit                   1
       low_level_controller          1
         evaluator                   1
           acceleration_x_changes_output_stream_entity      1
           acceleration_x_direction_change_count_0_sliding_window_entity      1
           acceleration_x_direction_change_output_stream_entity      1
           acceleration_x_input_stream_entity      1
           acceleration_x_periodic_output_stream_entity      1
           acceleration_x_rising_output_stream_entity      1
           acceleration_x_sinking_output_stream_entity      1
           gps_high_loss_output_stream_entity      1
           gps_medium_loss_output_stream_entity      1
           gps_missed_beat_output_stream_entity      1
           gps_sats_input_stream_entity      1
           gps_very_high_loss_output_stream_entity      1
           lat_gps_count_1_sliding_window_entity      1
           lat_gps_count_2_sliding_window_entity      1
           lat_gps_count_3_sliding_window_entity      1
           lat_gps_count_4_sliding_window_entity      1
           lat_gps_count_5_sliding_window_entity      1
           lat_gps_count_6_sliding_window_entity      1
           lat_gps_input_stream_entity      1
           trigger_acc_output_stream_entity      1
           trigger_gps_sats_output_stream_entity      1
       queue                         1

   Number of wires:              81021
   Number of wire bits:         117345
   Number of public wires:        1243
   Number of public wire bits:   35874
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              98108
     $_ANDNOT_                   30180
     $_AND_                        706
     $_DFFE_PP0N_                   77
     $_DFFE_PP0P_                16337
     $_DFFE_PP1N_                    4
     $_DFFE_PP1P_                    8
     $_DFF_NP0_                    393
     $_DFF_PP0_                    858
     $_DFF_PP1_                      2
     $_MUX_                       1485
     $_NAND_                      5099
     $_NOR_                       1744
     $_NOT_                        551
     $_ORNOT_                     1066
     $_OR_                       10529
     $_XNOR_                      6603
     $_XOR_                      22466

End of script. Logfile hash: 3d20735a05, CPU: user 38.58s system 0.47s, MEM: 453.84 MB peak
Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os)
Time spent: 23% 90x opt_expr (10 sec), 21% 1x abc (10 sec), ...
