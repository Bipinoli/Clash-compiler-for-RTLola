
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os)


-- Running command `
ghdl --latches --std=08 --work=work implementation; 
synth -top implementation; 
stat;
' --

1. Executing GHDL.
Importing module implementation.
Importing module clock_pre_processing.
Importing module input_pre_processing.
Importing module monitor.
Importing module high_level_controller.
Importing module queue.
Importing module low_level_controller.
Importing module extinterface.
Importing module check_new_input.
Importing module event_delay.
Importing module time_unit.
Importing module scheduler.
Importing module hlqinterface.
Importing module evaluator.
Importing module gps_x_input_stream_entity.
Importing module num_satellites_input_stream_entity.
Importing module imu_acc_x_input_stream_entity.
Importing module gps_emitted_enough_output_stream_entity.
Importing module few_satellites_output_stream_entity.
Importing module is_unreliable_gps_data_output_stream_entity.
Importing module gps_x_count_0_sliding_window_entity.
Importing module few_satellites_count_1_sliding_window_entity.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \monitor
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \few_satellites_count_1_sliding_window_entity
Used module:                 \gps_x_count_0_sliding_window_entity
Used module:                 \is_unreliable_gps_data_output_stream_entity
Used module:                 \few_satellites_output_stream_entity
Used module:                 \gps_emitted_enough_output_stream_entity
Used module:                 \imu_acc_x_input_stream_entity
Used module:                 \num_satellites_input_stream_entity
Used module:                 \gps_x_input_stream_entity
Used module:         \queue
Used module:         \high_level_controller
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:             \event_delay
Used module:             \check_new_input
Used module:             \extinterface
Used module:     \input_pre_processing
Used module:     \clock_pre_processing

2.1.2. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \monitor
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \few_satellites_count_1_sliding_window_entity
Used module:                 \gps_x_count_0_sliding_window_entity
Used module:                 \is_unreliable_gps_data_output_stream_entity
Used module:                 \few_satellites_output_stream_entity
Used module:                 \gps_emitted_enough_output_stream_entity
Used module:                 \imu_acc_x_input_stream_entity
Used module:                 \num_satellites_input_stream_entity
Used module:                 \gps_x_input_stream_entity
Used module:         \queue
Used module:         \high_level_controller
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:             \event_delay
Used module:             \check_new_input
Used module:             \extinterface
Used module:     \input_pre_processing
Used module:     \clock_pre_processing
Removed 0 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module imu_acc_x_input_stream_entity.
<suppressed ~1 debug messages>
Optimizing module num_satellites_input_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_x_input_stream_entity.
<suppressed ~1 debug messages>
Optimizing module evaluator.
<suppressed ~20 debug messages>
Optimizing module hlqinterface.
<suppressed ~2 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module event_delay.
Optimizing module check_new_input.
Optimizing module extinterface.
Optimizing module low_level_controller.
<suppressed ~1 debug messages>
Optimizing module queue.
<suppressed ~27 debug messages>
Optimizing module high_level_controller.
Optimizing module monitor.
Optimizing module input_pre_processing.
Optimizing module clock_pre_processing.
<suppressed ~4 debug messages>
Optimizing module implementation.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module num_satellites_input_stream_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module evaluator.
Optimizing module hlqinterface.
Optimizing module scheduler.
Optimizing module time_unit.
Optimizing module event_delay.
Optimizing module check_new_input.
Optimizing module extinterface.
Optimizing module low_level_controller.
Optimizing module queue.
Optimizing module high_level_controller.
Optimizing module monitor.
Optimizing module input_pre_processing.
Optimizing module clock_pre_processing.
Optimizing module implementation.

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \implementation..
Removed 8 unused cells and 259 unused wires.
<suppressed ~30 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
Checking module check_new_input...
Checking module clock_pre_processing...
Checking module evaluator...
Checking module event_delay...
Checking module extinterface...
Checking module few_satellites_count_1_sliding_window_entity...
Checking module few_satellites_output_stream_entity...
Checking module gps_emitted_enough_output_stream_entity...
Checking module gps_x_count_0_sliding_window_entity...
Checking module gps_x_input_stream_entity...
Checking module high_level_controller...
Checking module hlqinterface...
Checking module implementation...
Checking module imu_acc_x_input_stream_entity...
Checking module input_pre_processing...
Checking module is_unreliable_gps_data_output_stream_entity...
Checking module low_level_controller...
Checking module monitor...
Checking module num_satellites_input_stream_entity...
Checking module queue...
Checking module scheduler...
Checking module time_unit...
Found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
<suppressed ~45 debug messages>
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~3 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~75 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 41 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell \1054: \push_event_in -> 1'1
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~113 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~15 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~30 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 15 cells.

2.6.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 3 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 4 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 5 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 6 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 7 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 8 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 9 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 10 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 11 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 12 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 13 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 14 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 15 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 16 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 17 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 18 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 19 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 20 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 21 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 22 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 23 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 24 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 25 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 26 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 27 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 28 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 29 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 30 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 31 on \424 ($adff) from module high_level_controller.
Setting constant 0-bit at position 2 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 3 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 4 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 5 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 6 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 7 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 8 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 9 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 10 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 11 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 12 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 13 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 14 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 15 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 16 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 17 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 18 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 19 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 20 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 21 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 22 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 23 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 24 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 25 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 26 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 27 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 28 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 29 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 30 on \1259 ($adff) from module hlqinterface.
Setting constant 0-bit at position 31 on \1259 ($adff) from module hlqinterface.
Setting constant 1-bit at position 0 on \1270 ($dlatch) from module hlqinterface.
Setting constant 0-bit at position 0 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 2 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 3 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 4 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 5 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 6 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 7 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 8 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 9 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 10 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 11 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 12 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 13 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 14 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 15 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 16 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 17 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 18 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 19 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 20 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 21 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 22 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 23 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 24 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 25 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 26 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 27 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 28 on \1145 ($dlatch) from module scheduler.
Setting constant 1-bit at position 29 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 30 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 31 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 32 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 33 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 34 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 35 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 36 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 37 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 38 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 39 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 40 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 41 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 42 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 43 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 44 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 45 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 46 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 47 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 48 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 49 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 50 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 51 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 52 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 53 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 54 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 55 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 56 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 57 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 58 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 59 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 60 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 61 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 62 on \1145 ($dlatch) from module scheduler.
Setting constant 0-bit at position 63 on \1145 ($dlatch) from module scheduler.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 0 unused cells and 53 unused wires.
<suppressed ~3 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~121 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.6.13. Executing OPT_DFF pass (perform DFF optimizations).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing FSM pass (extract and optimize FSM).

2.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register low_level_controller.current_state.

2.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\current_state' from module `\low_level_controller'.
  found $adff cell for state register: \981
  root of input selection tree: $auto$ghdl.cc:806:import_module$325
  found reset state: 0 (from async reset)
  found ctrl input: $auto$ghdl.cc:806:import_module$312
  found ctrl input: $auto$ghdl.cc:806:import_module$313
  found ctrl input: $auto$ghdl.cc:806:import_module$315
  found ctrl input: \data_available
  found state code: 1
  found state code: 2
  found ctrl output: $auto$ghdl.cc:806:import_module$311
  found ctrl output: $auto$ghdl.cc:806:import_module$313
  found ctrl output: $auto$ghdl.cc:806:import_module$314
  ctrl inputs: { $auto$ghdl.cc:806:import_module$315 $auto$ghdl.cc:806:import_module$312 \data_available }
  ctrl outputs: { $auto$ghdl.cc:806:import_module$325 $auto$ghdl.cc:806:import_module$314 $auto$ghdl.cc:806:import_module$313 $auto$ghdl.cc:806:import_module$311 }
  transition:          0 3'00- ->          0 35'00000000000000000000000000000000001
  transition:          0 3'100 ->          0 35'00000000000000000000000000000000001
  transition:          0 3'101 ->          1 35'00000000000000000000000000000001001
  transition:          0 3'-1- ->          1 35'00000000000000000000000000000001001
  transition:          2 3'00- ->          2 35'00000000000000000000000000000010100
  transition:          2 3'100 ->          0 35'00000000000000000000000000000000100
  transition:          2 3'101 ->          1 35'00000000000000000000000000000001100
  transition:          2 3'-1- ->          1 35'00000000000000000000000000000001100
  transition:          1 3'-0- ->          2 35'00000000000000000000000000000010010
  transition:          1 3'-1- ->          1 35'00000000000000000000000000000001010

2.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\current_state$757' from module `\low_level_controller'.

2.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

2.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\current_state$757' from module `\low_level_controller'.
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [0].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [1].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [2].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [3].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [4].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [5].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [6].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [7].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [8].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [9].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [10].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [11].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [12].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [13].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [14].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [15].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [16].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [17].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [18].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [19].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [20].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [21].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [22].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [23].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [24].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [25].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [26].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [27].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [28].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [29].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [30].
  Removing unused output signal $auto$ghdl.cc:806:import_module$325 [31].

2.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\current_state$757' from module `\low_level_controller' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000000000000000000000000000000 -> --1
  00000000000000000000000000000010 -> -1-
  00000000000000000000000000000001 -> 1--

2.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\current_state$757' from module `low_level_controller':
-------------------------------------

  Information on FSM $fsm$\current_state$757 (\current_state):

  Number of input signals:    3
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \data_available
    1: $auto$ghdl.cc:806:import_module$312
    2: $auto$ghdl.cc:806:import_module$315

  Output signals:
    0: $auto$ghdl.cc:806:import_module$311
    1: $auto$ghdl.cc:806:import_module$313
    2: $auto$ghdl.cc:806:import_module$314

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'100   ->     0 3'001
      1:     0 3'00-   ->     0 3'001
      2:     0 3'101   ->     2 3'001
      3:     0 3'-1-   ->     2 3'001
      4:     1 3'100   ->     0 3'100
      5:     1 3'00-   ->     1 3'100
      6:     1 3'101   ->     2 3'100
      7:     1 3'-1-   ->     2 3'100
      8:     2 3'-0-   ->     1 3'010
      9:     2 3'-1-   ->     2 3'010

-------------------------------------

2.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\current_state$757' from module `\low_level_controller'.

2.8. Executing OPT pass (performing simple optimizations).

2.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
<suppressed ~4 debug messages>
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
<suppressed ~6 debug messages>
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 2 cells.

2.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~120 debug messages>

2.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on \123 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$29, Q = \tclk_count).
Adding EN signal on \121 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$25, Q = \eclk_count).
Adding EN signal on \119 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$35, Q = \tclk_reg).
Adding EN signal on \118 ($adff) from module clock_pre_processing (D = $auto$ghdl.cc:806:import_module$34, Q = \eclk_reg).
Adding EN signal on \1586 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$458, Q = \valid_reg).
Adding EN signal on \1584 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$520, Q = \evaluator_done).
Adding EN signal on \1581 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$536, Q = \few_satellites_count_1_request).
Adding EN signal on \1580 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$535, Q = \few_satellites_count_1_upd).
Adding EN signal on \1579 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$534, Q = \few_satellites_count_1_evict).
Adding EN signal on \1578 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$533, Q = \gps_x_count_0_request).
Adding EN signal on \1577 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$532, Q = \gps_x_count_0_upd).
Adding EN signal on \1576 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$531, Q = \gps_x_count_0_evict).
Adding EN signal on \1575 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$530, Q = \is_unreliable_gps_data_eval).
Adding EN signal on \1574 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$529, Q = \is_unreliable_gps_data_pe).
Adding EN signal on \1573 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$528, Q = \few_satellites_eval).
Adding EN signal on \1572 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$527, Q = \few_satellites_pe).
Adding EN signal on \1571 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$526, Q = \gps_emitted_enough_eval).
Adding EN signal on \1570 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$525, Q = \gps_emitted_enough_pe).
Adding EN signal on \1569 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$524, Q = \imu_acc_x_upd).
Adding EN signal on \1568 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$523, Q = \num_satellites_upd).
Adding EN signal on \1567 ($adff) from module evaluator (D = $auto$ghdl.cc:806:import_module$522, Q = \gps_x_upd).
Adding EN signal on \2209 ($adff) from module few_satellites_count_1_sliding_window_entity (D = \count_buckets [255:0], Q = \count_buckets [319:64]).
Adding EN signal on \2209 ($adff) from module few_satellites_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$745, Q = \count_buckets [63:0]).
Adding EN signal on \2206 ($adff) from module few_satellites_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$732, Q = \request_done).
Adding EN signal on \2205 ($adff) from module few_satellites_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$736, Q = \upd_done).
Adding EN signal on \2204 ($adff) from module few_satellites_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$742, Q = \evict_done).
Adding EN signal on \2203 ($adff) from module few_satellites_count_1_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \2202 ($adff) from module few_satellites_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$719, Q = \sw_data).
Adding EN signal on \2201 ($adff) from module few_satellites_count_1_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$708, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$899 ($adffe) from module few_satellites_count_1_sliding_window_entity.
Adding EN signal on \1872 ($adff) from module few_satellites_output_stream_entity (D = $auto$ghdl.cc:806:import_module$629, Q = \data_valid).
Adding EN signal on \1871 ($adff) from module few_satellites_output_stream_entity (D = $auto$ghdl.cc:806:import_module$628, Q = \data).
Adding EN signal on \1870 ($adff) from module few_satellites_output_stream_entity (D = $auto$ghdl.cc:806:import_module$623, Q = \eval_done).
Adding EN signal on \1869 ($adff) from module few_satellites_output_stream_entity (D = $auto$ghdl.cc:806:import_module$626, Q = \pe_done).
Adding EN signal on \1779 ($adff) from module gps_emitted_enough_output_stream_entity (D = $auto$ghdl.cc:806:import_module$606, Q = \data_valid).
Adding EN signal on \1778 ($adff) from module gps_emitted_enough_output_stream_entity (D = $auto$ghdl.cc:806:import_module$605, Q = \data).
Adding EN signal on \1777 ($adff) from module gps_emitted_enough_output_stream_entity (D = $auto$ghdl.cc:806:import_module$600, Q = \eval_done).
Adding EN signal on \1776 ($adff) from module gps_emitted_enough_output_stream_entity (D = $auto$ghdl.cc:806:import_module$603, Q = \pe_done).
Adding EN signal on \2084 ($adff) from module gps_x_count_0_sliding_window_entity (D = \count_buckets [127:0], Q = \count_buckets [191:64]).
Adding EN signal on \2084 ($adff) from module gps_x_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$695, Q = \count_buckets [63:0]).
Adding EN signal on \2081 ($adff) from module gps_x_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$682, Q = \request_done).
Adding EN signal on \2080 ($adff) from module gps_x_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$686, Q = \upd_done).
Adding EN signal on \2079 ($adff) from module gps_x_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$692, Q = \evict_done).
Adding EN signal on \2078 ($adff) from module gps_x_count_0_sliding_window_entity (D = 1'1, Q = \sw_data_valid).
Adding EN signal on \2077 ($adff) from module gps_x_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$669, Q = \sw_data).
Adding EN signal on \2076 ($adff) from module gps_x_count_0_sliding_window_entity (D = $auto$ghdl.cc:806:import_module$660, Q = \last_ts_before_upd).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$993 ($adffe) from module gps_x_count_0_sliding_window_entity.
Adding EN signal on \1620 ($adff) from module gps_x_input_stream_entity (D = 1'1, Q = \data_valid).
Adding EN signal on \1618 ($adff) from module gps_x_input_stream_entity (D = \data_in, Q = \data).
Adding EN signal on \1616 ($adff) from module gps_x_input_stream_entity (D = $auto$ghdl.cc:806:import_module$562, Q = \done).
Adding EN signal on \1274 ($adff) from module hlqinterface (D = $auto$ghdl.cc:806:import_module$394, Q = \time_to_queue).
Adding EN signal on \1265 ($adff) from module hlqinterface (D = \imu_acc_x_data_in, Q = \imu_acc_x_data_push).
Adding EN signal on \1263 ($adff) from module hlqinterface (D = \num_satellites_data_in, Q = \num_satellites_data_push).
Adding EN signal on \1261 ($adff) from module hlqinterface (D = \gps_x_data_in, Q = \gps_x_data_push).
Adding EN signal on \1686 ($adff) from module imu_acc_x_input_stream_entity (D = 1'1, Q = \data_valid).
Adding EN signal on \1684 ($adff) from module imu_acc_x_input_stream_entity (D = \data_in, Q = \data).
Adding EN signal on \1682 ($adff) from module imu_acc_x_input_stream_entity (D = $auto$ghdl.cc:806:import_module$582, Q = \done).
Adding EN signal on \1965 ($adff) from module is_unreliable_gps_data_output_stream_entity (D = $auto$ghdl.cc:806:import_module$652, Q = \data_valid).
Adding EN signal on \1964 ($adff) from module is_unreliable_gps_data_output_stream_entity (D = $auto$ghdl.cc:806:import_module$651, Q = \data).
Adding EN signal on \1963 ($adff) from module is_unreliable_gps_data_output_stream_entity (D = $auto$ghdl.cc:806:import_module$646, Q = \eval_done).
Adding EN signal on \1962 ($adff) from module is_unreliable_gps_data_output_stream_entity (D = $auto$ghdl.cc:806:import_module$649, Q = \pe_done).
Adding EN signal on \982 ($adff) from module low_level_controller (D = $auto$ghdl.cc:806:import_module$326, Q = \pop_data).
Adding EN signal on \980 ($adff) from module low_level_controller (D = $auto$ghdl.cc:806:import_module$324, Q = \input_clk).
Adding EN signal on \1653 ($adff) from module num_satellites_input_stream_entity (D = 1'1, Q = \data_valid).
Adding EN signal on \1651 ($adff) from module num_satellites_input_stream_entity (D = \data_in, Q = \data).
Adding EN signal on \1649 ($adff) from module num_satellites_input_stream_entity (D = $auto$ghdl.cc:806:import_module$572, Q = \done).
Adding EN signal on \857 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$236, Q = \pop_done).
Adding EN signal on \856 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$235, Q = \push_done).
Adding EN signal on \854 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$203, Q = \size).
Adding EN signal on \852 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$202, Q = \av).
Adding EN signal on \850 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$226, Q = \is_unreliable_gps_data_en).
Adding EN signal on \848 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$225, Q = \is_unreliable_gps_data_en_reg).
Adding EN signal on \846 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$224, Q = \few_satellites_en).
Adding EN signal on \844 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$223, Q = \few_satellites_en_reg).
Adding EN signal on \842 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$222, Q = \gps_emitted_enough_en).
Adding EN signal on \840 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$221, Q = \gps_emitted_enough_en_reg).
Adding EN signal on \838 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$220, Q = \imu_acc_x_en).
Adding EN signal on \836 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$219, Q = \imu_acc_x_data).
Adding EN signal on \834 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$218, Q = \imu_acc_x_en_reg).
Adding EN signal on \832 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$217, Q = \imu_acc_x_data_reg).
Adding EN signal on \830 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$216, Q = \num_satellites_en).
Adding EN signal on \828 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$215, Q = \num_satellites_data).
Adding EN signal on \826 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$214, Q = \num_satellites_en_reg).
Adding EN signal on \824 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$213, Q = \num_satellites_data_reg).
Adding EN signal on \822 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$212, Q = \gps_x_en).
Adding EN signal on \820 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$211, Q = \gps_x_data).
Adding EN signal on \818 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$210, Q = \gps_x_en_reg).
Adding EN signal on \816 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$209, Q = \gps_x_data_reg).
Adding EN signal on \814 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$208, Q = \time_data).
Adding EN signal on \812 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$207, Q = \time_data_reg).
Adding EN signal on \810 ($adff) from module queue (D = $auto$ghdl.cc:806:import_module$181, Q = \is_full).
Adding EN signal on \1150 ($adff) from module scheduler (D = \time_of_next_deadline, Q = \time_last_deadline).
Adding EN signal on \1144 ($adff) from module scheduler (D = $auto$ghdl.cc:806:import_module$361, Q = \time_of_next_deadline).

2.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 76 unused cells and 85 unused wires.
<suppressed ~90 debug messages>

2.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~2 debug messages>
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module few_satellites_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module gps_emitted_enough_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~4 debug messages>
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
<suppressed ~1 debug messages>
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
<suppressed ~4 debug messages>
Optimizing module low_level_controller.
<suppressed ~2 debug messages>
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
<suppressed ~25 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.

2.8.9. Rerunning OPT passes. (Maybe there is more to do..)

2.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~98 debug messages>

2.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
<suppressed ~48 debug messages>
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\few_satellites_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
<suppressed ~18 debug messages>
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
<suppressed ~12 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
<suppressed ~6 debug messages>
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~222 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 112 cells.

2.8.13. Executing OPT_DFF pass (perform DFF optimizations).

2.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 0 unused cells and 111 unused wires.
<suppressed ~8 debug messages>

2.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.8.16. Rerunning OPT passes. (Maybe there is more to do..)

2.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~104 debug messages>

2.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.8.20. Executing OPT_DFF pass (perform DFF optimizations).

2.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.8.23. Finished OPT passes. (There is nothing left to do.)

2.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 bits (of 32) from port B of cell clock_pre_processing.\74 ($eq).
Removed top 31 bits (of 32) from port B of cell clock_pre_processing.\76 ($add).
Removed top 30 bits (of 32) from port B of cell clock_pre_processing.\82 ($eq).
Removed top 31 bits (of 32) from port B of cell clock_pre_processing.\84 ($add).
Removed top 29 bits (of 32) from port B of cell clock_pre_processing.\90 ($eq).
Removed top 31 bits (of 32) from port B of cell clock_pre_processing.\94 ($eq).
Removed top 1 bits (of 2) from port B of cell clock_pre_processing.$auto$opt_dff.cc:195:make_patterns_logic$801 ($ne).
Removed top 1 bits (of 2) from port B of cell clock_pre_processing.$auto$opt_dff.cc:195:make_patterns_logic$808 ($ne).
Removed top 1 bits (of 2) from port B of cell evaluator.$auto$opt_dff.cc:195:make_patterns_logic$817 ($ne).
Removed top 1 bits (of 2) from port B of cell few_satellites_count_1_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$867 ($ne).
Removed top 34 bits (of 64) from port B of cell few_satellites_count_1_sliding_window_entity.\2099 ($add).
Removed top 256 bits (of 320) from mux cell few_satellites_count_1_sliding_window_entity.\2114 ($mux).
Removed top 63 bits (of 64) from port B of cell few_satellites_count_1_sliding_window_entity.\2120 ($add).
Removed top 256 bits (of 320) from wire few_satellites_count_1_sliding_window_entity.$auto$ghdl.cc:806:import_module$710.
Removed top 59 bits (of 64) from port B of cell few_satellites_output_stream_entity.\1801 ($lt).
Removed top 60 bits (of 64) from port B of cell gps_emitted_enough_output_stream_entity.\1708 ($lt).
Removed top 1 bits (of 2) from port B of cell gps_x_count_0_sliding_window_entity.$auto$opt_dff.cc:195:make_patterns_logic$961 ($ne).
Removed top 34 bits (of 64) from port B of cell gps_x_count_0_sliding_window_entity.\1978 ($add).
Removed top 128 bits (of 192) from mux cell gps_x_count_0_sliding_window_entity.\1993 ($mux).
Removed top 63 bits (of 64) from port B of cell gps_x_count_0_sliding_window_entity.\1999 ($add).
Removed top 128 bits (of 192) from wire gps_x_count_0_sliding_window_entity.$auto$ghdl.cc:806:import_module$662.
Removed top 1 bits (of 2) from port B of cell gps_x_input_stream_entity.$auto$opt_dff.cc:195:make_patterns_logic$1012 ($ne).
Removed top 30 bits (of 32) from port A of cell high_level_controller.\401 ($add).
Removed top 31 bits (of 32) from port B of cell high_level_controller.\401 ($add).
Removed top 30 bits (of 32) from port Y of cell high_level_controller.\401 ($add).
Removed top 30 bits (of 32) from wire high_level_controller.$auto$ghdl.cc:806:import_module$117.
Removed top 30 bits (of 32) from wire high_level_controller.hlc_clk_count.
Removed top 30 bits (of 32) from port A of cell hlqinterface.\1166 ($add).
Removed top 31 bits (of 32) from port B of cell hlqinterface.\1166 ($add).
Removed top 30 bits (of 32) from port Y of cell hlqinterface.\1166 ($add).
Removed top 30 bits (of 32) from wire hlqinterface.$auto$ghdl.cc:806:import_module$369.
Removed top 30 bits (of 32) from wire hlqinterface.clock_state_machine.
Removed top 1 bits (of 2) from port B of cell imu_acc_x_input_stream_entity.$auto$opt_dff.cc:195:make_patterns_logic$1035 ($ne).
Removed top 60 bits (of 64) from port B of cell is_unreliable_gps_data_output_stream_entity.\1894 ($gt).
Removed top 1 bits (of 2) from port B of cell num_satellites_input_stream_entity.$auto$opt_dff.cc:195:make_patterns_logic$1066 ($ne).
Removed top 31 bits (of 32) from port B of cell queue.\450 ($gt).
Removed top 29 bits (of 32) from port B of cell queue.\453 ($lt).
Removed top 31 bits (of 32) from port B of cell queue.\476 ($sub).
Removed top 31 bits (of 32) from port B of cell queue.\551 ($add).
Removed top 31 bits (of 32) from port B of cell queue.\554 ($eq).
Removed top 30 bits (of 32) from port B of cell queue.\621 ($gt).
Removed top 34 bits (of 64) from port B of cell scheduler.\1117 ($add).
Removed top 58 bits (of 64) from port B of cell time_unit.\1105 ($add).

2.10. Executing PEEPOPT pass (run peephole optimizers).

2.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 0 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

2.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module check_new_input:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module clock_pre_processing:
  creating $macc model for \76 ($add).
  creating $macc model for \84 ($add).
  creating $alu model for $macc \84.
  creating $alu model for $macc \76.
  creating $alu cell for \76: $auto$alumacc.cc:485:replace_alu$1278
  creating $alu cell for \84: $auto$alumacc.cc:485:replace_alu$1281
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module evaluator:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module event_delay:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module extinterface:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module few_satellites_count_1_sliding_window_entity:
  creating $macc model for \2099 ($add).
  creating $macc model for \2120 ($add).
  creating $macc model for \2125 ($add).
  creating $macc model for \2127 ($add).
  creating $macc model for \2129 ($add).
  creating $macc model for \2131 ($add).
  merging $macc model for \2129 into \2131.
  merging $macc model for \2127 into \2131.
  merging $macc model for \2125 into \2131.
  creating $alu model for $macc \2120.
  creating $alu model for $macc \2099.
  creating $macc cell for \2131: $auto$alumacc.cc:365:replace_macc$1284
  creating $alu model for \2097 ($gt): new $alu
  creating $alu cell for \2097: $auto$alumacc.cc:485:replace_alu$1286
  creating $alu cell for \2099: $auto$alumacc.cc:485:replace_alu$1297
  creating $alu cell for \2120: $auto$alumacc.cc:485:replace_alu$1300
  created 3 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module few_satellites_output_stream_entity:
  creating $alu model for \1801 ($lt): new $alu
  creating $alu cell for \1801: $auto$alumacc.cc:485:replace_alu$1304
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_emitted_enough_output_stream_entity:
  creating $alu model for \1708 ($lt): new $alu
  creating $alu cell for \1708: $auto$alumacc.cc:485:replace_alu$1318
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gps_x_count_0_sliding_window_entity:
  creating $macc model for \1978 ($add).
  creating $macc model for \1999 ($add).
  creating $macc model for \2004 ($add).
  creating $macc model for \2006 ($add).
  merging $macc model for \2004 into \2006.
  creating $alu model for $macc \1999.
  creating $alu model for $macc \1978.
  creating $macc cell for \2006: $auto$alumacc.cc:365:replace_macc$1329
  creating $alu model for \1976 ($gt): new $alu
  creating $alu cell for \1976: $auto$alumacc.cc:485:replace_alu$1331
  creating $alu cell for \1978: $auto$alumacc.cc:485:replace_alu$1342
  creating $alu cell for \1999: $auto$alumacc.cc:485:replace_alu$1345
  created 3 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module gps_x_input_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module high_level_controller:
  creating $macc model for \401 ($add).
  creating $alu model for $macc \401.
  creating $alu cell for \401: $auto$alumacc.cc:485:replace_alu$1348
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module hlqinterface:
  creating $macc model for \1166 ($add).
  creating $alu model for $macc \1166.
  creating $alu cell for \1166: $auto$alumacc.cc:485:replace_alu$1351
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module implementation:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module imu_acc_x_input_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module input_pre_processing:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module is_unreliable_gps_data_output_stream_entity:
  creating $alu model for \1894 ($gt): new $alu
  creating $alu cell for \1894: $auto$alumacc.cc:485:replace_alu$1355
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module low_level_controller:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module monitor:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module num_satellites_input_stream_entity:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module queue:
  creating $macc model for \476 ($sub).
  creating $macc model for \551 ($add).
  creating $alu model for $macc \551.
  creating $alu model for $macc \476.
  creating $alu model for \450 ($gt): new $alu
  creating $alu model for \453 ($lt): new $alu
  creating $alu model for \621 ($gt): new $alu
  creating $alu cell for \621: $auto$alumacc.cc:485:replace_alu$1363
  creating $alu cell for \453: $auto$alumacc.cc:485:replace_alu$1370
  creating $alu cell for \450: $auto$alumacc.cc:485:replace_alu$1383
  creating $alu cell for \476: $auto$alumacc.cc:485:replace_alu$1390
  creating $alu cell for \551: $auto$alumacc.cc:485:replace_alu$1393
  created 5 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module scheduler:
  creating $macc model for \1117 ($add).
  creating $alu model for $macc \1117.
  creating $alu model for \1116 ($ge): new $alu
  creating $alu cell for \1116: $auto$alumacc.cc:485:replace_alu$1397
  creating $alu cell for \1117: $auto$alumacc.cc:485:replace_alu$1406
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module time_unit:
  creating $macc model for \1105 ($add).
  creating $alu model for $macc \1105.
  creating $alu cell for \1105: $auto$alumacc.cc:485:replace_alu$1409
  created 1 $alu and 0 $macc cells.

2.13. Executing SHARE pass (SAT-based resource sharing).

2.14. Executing OPT pass (performing simple optimizations).

2.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module few_satellites_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_emitted_enough_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~104 debug messages>

2.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.14.6. Executing OPT_DFF pass (perform DFF optimizations).

2.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 7 unused cells and 16 unused wires.
<suppressed ~14 debug messages>

2.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~104 debug messages>

2.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.14.16. Finished OPT passes. (There is nothing left to do.)

2.15. Executing MEMORY pass.

2.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.17. Executing OPT pass (performing simple optimizations).

2.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
<suppressed ~1 debug messages>
Optimizing module clock_pre_processing.
<suppressed ~4 debug messages>
Optimizing module evaluator.
<suppressed ~31 debug messages>
Optimizing module event_delay.
<suppressed ~4 debug messages>
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module few_satellites_output_stream_entity.
<suppressed ~10 debug messages>
Optimizing module gps_emitted_enough_output_stream_entity.
<suppressed ~9 debug messages>
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~11 debug messages>
Optimizing module gps_x_input_stream_entity.
<suppressed ~3 debug messages>
Optimizing module high_level_controller.
<suppressed ~1 debug messages>
Optimizing module hlqinterface.
<suppressed ~8 debug messages>
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
<suppressed ~3 debug messages>
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
<suppressed ~9 debug messages>
Optimizing module low_level_controller.
<suppressed ~5 debug messages>
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
<suppressed ~3 debug messages>
Optimizing module queue.
<suppressed ~64 debug messages>
Optimizing module scheduler.
<suppressed ~2 debug messages>
Optimizing module time_unit.
<suppressed ~1 debug messages>

2.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
<suppressed ~3 debug messages>
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~3 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 2 cells.

2.17.3. Executing OPT_DFF pass (perform DFF optimizations).

2.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 2 unused cells and 135 unused wires.
<suppressed ~19 debug messages>

2.17.5. Finished fast OPT passes.

2.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~1 debug messages>
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module few_satellites_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_emitted_enough_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
<suppressed ~1 debug messages>
Optimizing module low_level_controller.
<suppressed ~1 debug messages>
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
<suppressed ~2 debug messages>
Optimizing module scheduler.
Optimizing module time_unit.

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
<suppressed ~3 debug messages>
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~3 debug messages>
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 5 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.19.6. Executing OPT_SHARE pass.

2.19.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$913 ($adffe) from module few_satellites_count_1_sliding_window_entity (D = \last_ts_before_upd [8:0], Q = \last_ts_before_upd [8:0]).
Handling D = Q on $auto$ff.cc:266:slice$1416 ($adffe) from module few_satellites_count_1_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$1416 ($dlatch) from module few_satellites_count_1_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$1007 ($adffe) from module gps_x_count_0_sliding_window_entity (D = \last_ts_before_upd [8:0], Q = \last_ts_before_upd [8:0]).
Handling D = Q on $auto$ff.cc:266:slice$1422 ($adffe) from module gps_x_count_0_sliding_window_entity (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$1422 ($dlatch) from module gps_x_count_0_sliding_window_entity.
Adding EN signal on $auto$ff.cc:266:slice$1271 ($adffe) from module scheduler (D = \time_of_next_deadline [8:0], Q = \time_of_next_deadline [8:0]).
Handling D = Q on $auto$ff.cc:266:slice$1428 ($adffe) from module scheduler (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$1428 ($dlatch) from module scheduler.
Adding EN signal on \1110 ($adff) from module time_unit (D = \sys_time [2:0], Q = \sys_time [2:0]).
Handling D = Q on $auto$ff.cc:266:slice$1434 ($adffe) from module time_unit (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1434 ($dlatch) from module time_unit.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$1434 ($dlatch) from module time_unit.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$1434 ($dlatch) from module time_unit.

2.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 7 unused cells and 14 unused wires.
<suppressed ~16 debug messages>

2.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.19.10. Rerunning OPT passes. (Maybe there is more to do..)

2.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

2.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.19.14. Executing OPT_SHARE pass.

2.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$1270 ($adffe) from module scheduler.

2.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 0 unused cells and 18 unused wires.
<suppressed ~2 debug messages>

2.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.19.18. Rerunning OPT passes. (Maybe there is more to do..)

2.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \check_new_input..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clock_pre_processing..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \evaluator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \event_delay..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \extinterface..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \few_satellites_count_1_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \few_satellites_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_emitted_enough_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_count_0_sliding_window_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gps_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \high_level_controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \hlqinterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \implementation..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \imu_acc_x_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \input_pre_processing..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \is_unreliable_gps_data_output_stream_entity..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \low_level_controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \monitor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \num_satellites_input_stream_entity..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \queue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scheduler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \time_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

2.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \check_new_input.
  Optimizing cells in module \clock_pre_processing.
  Optimizing cells in module \evaluator.
  Optimizing cells in module \event_delay.
  Optimizing cells in module \extinterface.
  Optimizing cells in module \few_satellites_count_1_sliding_window_entity.
  Optimizing cells in module \few_satellites_output_stream_entity.
  Optimizing cells in module \gps_emitted_enough_output_stream_entity.
  Optimizing cells in module \gps_x_count_0_sliding_window_entity.
  Optimizing cells in module \gps_x_input_stream_entity.
  Optimizing cells in module \high_level_controller.
  Optimizing cells in module \hlqinterface.
  Optimizing cells in module \implementation.
  Optimizing cells in module \imu_acc_x_input_stream_entity.
  Optimizing cells in module \input_pre_processing.
  Optimizing cells in module \is_unreliable_gps_data_output_stream_entity.
  Optimizing cells in module \low_level_controller.
  Optimizing cells in module \monitor.
  Optimizing cells in module \num_satellites_input_stream_entity.
  Optimizing cells in module \queue.
  Optimizing cells in module \scheduler.
  Optimizing cells in module \time_unit.
Performed a total of 0 changes.

2.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
Finding identical cells in module `\scheduler'.
Finding identical cells in module `\time_unit'.
Removed a total of 0 cells.

2.19.22. Executing OPT_SHARE pass.

2.19.23. Executing OPT_DFF pass (perform DFF optimizations).

2.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..

2.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
Optimizing module evaluator.
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
Optimizing module few_satellites_output_stream_entity.
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.19.26. Finished OPT passes. (There is nothing left to do.)

2.20. Executing TECHMAP pass (map to technology primitives).

2.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$9372bd4570ba4a5b302416ad52cf0b982084fec5\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111101 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$6f1400be92fe82b5a3c39c13d4e97a3e8d92c37b\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using template $paramod$7b00947614a4c48e09c066dca449366ddfa907a5\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$19e2580c9084a01134cf124dfa77fb4500b707f9\_90_alu for cells of type $alu.
Using template $paramod$06a9a25e193457b564e50ab7b7ad40e176246e9c\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$998cf7bc9d7210191f713bc4d6d4662cd93b2388\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper maccmap for cells of type $macc.
  add \count_buckets [63:0] (64 bits, unsigned)
  add \count_buckets [191:128] (64 bits, unsigned)
  add \count_buckets [127:64] (64 bits, unsigned)
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$eb9f70af72509895cd1a2b6e15159b78591ad185\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod$5a1aa0a3f0324bc3bbe0eee655a1d0d9afe27bb3\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111111 for cells of type $lcu.
  add \count_buckets [63:0] (64 bits, unsigned)
  add \count_buckets [319:256] (64 bits, unsigned)
  add \count_buckets [255:192] (64 bits, unsigned)
  add \count_buckets [191:128] (64 bits, unsigned)
  add \count_buckets [127:64] (64 bits, unsigned)
No more expansions possible.
<suppressed ~6930 debug messages>

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~562 debug messages>
Optimizing module evaluator.
<suppressed ~4 debug messages>
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~794 debug messages>
Optimizing module few_satellites_output_stream_entity.
<suppressed ~360 debug messages>
Optimizing module gps_emitted_enough_output_stream_entity.
<suppressed ~376 debug messages>
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~788 debug messages>
Optimizing module gps_x_input_stream_entity.
<suppressed ~2 debug messages>
Optimizing module high_level_controller.
<suppressed ~13 debug messages>
Optimizing module hlqinterface.
<suppressed ~13 debug messages>
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
<suppressed ~2 debug messages>
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
<suppressed ~374 debug messages>
Optimizing module low_level_controller.
<suppressed ~6 debug messages>
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
<suppressed ~2 debug messages>
Optimizing module queue.
<suppressed ~1158 debug messages>
Optimizing module scheduler.
<suppressed ~376 debug messages>
Optimizing module time_unit.
<suppressed ~346 debug messages>

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
<suppressed ~189 debug messages>
Finding identical cells in module `\evaluator'.
<suppressed ~3 debug messages>
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
<suppressed ~234 debug messages>
Finding identical cells in module `\few_satellites_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
<suppressed ~177 debug messages>
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
<suppressed ~231 debug messages>
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
<suppressed ~9 debug messages>
Finding identical cells in module `\hlqinterface'.
<suppressed ~9 debug messages>
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\low_level_controller'.
<suppressed ~6 debug messages>
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~645 debug messages>
Finding identical cells in module `\scheduler'.
<suppressed ~222 debug messages>
Finding identical cells in module `\time_unit'.
<suppressed ~6 debug messages>
Removed a total of 579 cells.

2.21.3. Executing OPT_DFF pass (perform DFF optimizations).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 1474 unused cells and 3148 unused wires.
<suppressed ~1490 debug messages>

2.21.5. Finished fast OPT passes.

2.22. Executing ABC pass (technology mapping using ABC).

2.22.1. Extracting gate netlist of module `\check_new_input' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

2.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.1.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

2.22.2. Extracting gate netlist of module `\clock_pre_processing' to `<abc-temp-dir>/input.blif'..
Extracted 320 gates and 386 wires to a netlist network with 65 inputs and 67 outputs.

2.22.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.2.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               AND cells:        1
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              NAND cells:       40
ABC RESULTS:                OR cells:       96
ABC RESULTS:             ORNOT cells:       25
ABC RESULTS:               XOR cells:       48
ABC RESULTS:            ANDNOT cells:       81
ABC RESULTS:        internal signals:      254
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       67
Removing temp directory.

2.22.3. Extracting gate netlist of module `\evaluator' to `<abc-temp-dir>/input.blif'..
Extracted 67 gates and 94 wires to a netlist network with 26 inputs and 19 outputs.

2.22.3.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.3.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        7
ABC RESULTS:              NAND cells:        7
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:            ANDNOT cells:       31
ABC RESULTS:        internal signals:       49
ABC RESULTS:           input signals:       26
ABC RESULTS:          output signals:       19
Removing temp directory.

2.22.4. Extracting gate netlist of module `\event_delay' to `<abc-temp-dir>/input.blif'..
Extracted 259 gates and 520 wires to a netlist network with 260 inputs and 259 outputs.

2.22.4.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      259
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:      260
ABC RESULTS:          output signals:      259
Removing temp directory.

2.22.5. Extracting gate netlist of module `\extinterface' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.6. Extracting gate netlist of module `\few_satellites_count_1_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 2274 gates and 2720 wires to a netlist network with 445 inputs and 192 outputs.

2.22.6.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.6.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:       23
ABC RESULTS:             ORNOT cells:       66
ABC RESULTS:               NOT cells:       14
ABC RESULTS:              NAND cells:      147
ABC RESULTS:              XNOR cells:      290
ABC RESULTS:                OR cells:      371
ABC RESULTS:               NOR cells:      104
ABC RESULTS:            ANDNOT cells:      791
ABC RESULTS:               XOR cells:      389
ABC RESULTS:        internal signals:     2083
ABC RESULTS:           input signals:      445
ABC RESULTS:          output signals:      192
Removing temp directory.

2.22.7. Extracting gate netlist of module `\few_satellites_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 211 gates and 280 wires to a netlist network with 68 inputs and 7 outputs.

2.22.7.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.7.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:                OR cells:      115
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:        internal signals:      205
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.8. Extracting gate netlist of module `\gps_emitted_enough_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 153 gates and 222 wires to a netlist network with 68 inputs and 7 outputs.

2.22.8.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.8.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:                OR cells:       60
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:        internal signals:      147
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.9. Extracting gate netlist of module `\gps_x_count_0_sliding_window_entity' to `<abc-temp-dir>/input.blif'..
Extracted 1647 gates and 1965 wires to a netlist network with 317 inputs and 192 outputs.

2.22.9.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.9.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               AND cells:       25
ABC RESULTS:             ORNOT cells:       69
ABC RESULTS:               NOT cells:       13
ABC RESULTS:              XNOR cells:      175
ABC RESULTS:              NAND cells:      146
ABC RESULTS:                OR cells:      252
ABC RESULTS:               NOR cells:       97
ABC RESULTS:            ANDNOT cells:      538
ABC RESULTS:               XOR cells:      250
ABC RESULTS:        internal signals:     1456
ABC RESULTS:           input signals:      317
ABC RESULTS:          output signals:      192
Removing temp directory.

2.22.10. Extracting gate netlist of module `\gps_x_input_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

2.22.10.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.10.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

2.22.11. Extracting gate netlist of module `\high_level_controller' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

2.22.11.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.11.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

2.22.12. Extracting gate netlist of module `\hlqinterface' to `<abc-temp-dir>/input.blif'..
Extracted 82 gates and 218 wires to a netlist network with 135 inputs and 72 outputs.

2.22.12.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.12.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               MUX cells:       64
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:      135
ABC RESULTS:          output signals:       72
Removing temp directory.

2.22.13. Extracting gate netlist of module `\implementation' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.14. Extracting gate netlist of module `\imu_acc_x_input_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

2.22.14.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.14.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

2.22.15. Extracting gate netlist of module `\input_pre_processing' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.16. Extracting gate netlist of module `\is_unreliable_gps_data_output_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 147 gates and 216 wires to a netlist network with 68 inputs and 7 outputs.

2.22.16.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.16.2. Re-integrating ABC results.
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:                OR cells:       56
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:        internal signals:      141
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.17. Extracting gate netlist of module `\low_level_controller' to `<abc-temp-dir>/input.blif'..
Extracted 29 gates and 35 wires to a netlist network with 5 inputs and 7 outputs.

2.22.17.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.17.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:                OR cells:       11
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        7
Removing temp directory.

2.22.18. Extracting gate netlist of module `\monitor' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.22.19. Extracting gate netlist of module `\num_satellites_input_stream_entity' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

2.22.19.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.19.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

2.22.20. Extracting gate netlist of module `\queue' to `<abc-temp-dir>/input.blif'..
Extracted 701 gates and 1262 wires to a netlist network with 561 inputs and 302 outputs.

2.22.20.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.20.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        6
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:               XOR cells:       62
ABC RESULTS:               MUX cells:      293
ABC RESULTS:               AND cells:       15
ABC RESULTS:               NOR cells:       41
ABC RESULTS:            ANDNOT cells:       79
ABC RESULTS:                OR cells:       65
ABC RESULTS:              NAND cells:       19
ABC RESULTS:        internal signals:      399
ABC RESULTS:           input signals:      561
ABC RESULTS:          output signals:      302
Removing temp directory.

2.22.21. Extracting gate netlist of module `\scheduler' to `<abc-temp-dir>/input.blif'..
Extracted 555 gates and 674 wires to a netlist network with 119 inputs and 56 outputs.

2.22.21.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.21.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        4
ABC RESULTS:             ORNOT cells:       60
ABC RESULTS:               NOR cells:        4
ABC RESULTS:              XNOR cells:       42
ABC RESULTS:                OR cells:       75
ABC RESULTS:               AND cells:       13
ABC RESULTS:              NAND cells:       23
ABC RESULTS:            ANDNOT cells:      183
ABC RESULTS:               XOR cells:       67
ABC RESULTS:        internal signals:      499
ABC RESULTS:           input signals:      119
ABC RESULTS:          output signals:       56
Removing temp directory.

2.22.22. Extracting gate netlist of module `\time_unit' to `<abc-temp-dir>/input.blif'..
Extracted 175 gates and 236 wires to a netlist network with 61 inputs and 61 outputs.

2.22.22.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.22.22.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               AND cells:        5
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:       21
ABC RESULTS:              NAND cells:       29
ABC RESULTS:                OR cells:       43
ABC RESULTS:            ANDNOT cells:       33
ABC RESULTS:               XOR cells:       39
ABC RESULTS:        internal signals:      114
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       61
Removing temp directory.

2.23. Executing OPT pass (performing simple optimizations).

2.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module check_new_input.
Optimizing module clock_pre_processing.
<suppressed ~1 debug messages>
Optimizing module evaluator.
<suppressed ~7 debug messages>
Optimizing module event_delay.
Optimizing module extinterface.
Optimizing module few_satellites_count_1_sliding_window_entity.
<suppressed ~1 debug messages>
Optimizing module few_satellites_output_stream_entity.
<suppressed ~2 debug messages>
Optimizing module gps_emitted_enough_output_stream_entity.
Optimizing module gps_x_count_0_sliding_window_entity.
<suppressed ~2 debug messages>
Optimizing module gps_x_input_stream_entity.
Optimizing module high_level_controller.
Optimizing module hlqinterface.
Optimizing module implementation.
Optimizing module imu_acc_x_input_stream_entity.
Optimizing module input_pre_processing.
Optimizing module is_unreliable_gps_data_output_stream_entity.
<suppressed ~2 debug messages>
Optimizing module low_level_controller.
Optimizing module monitor.
Optimizing module num_satellites_input_stream_entity.
Optimizing module queue.
Optimizing module scheduler.
Optimizing module time_unit.

2.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\check_new_input'.
Finding identical cells in module `\clock_pre_processing'.
Finding identical cells in module `\evaluator'.
Finding identical cells in module `\event_delay'.
Finding identical cells in module `\extinterface'.
Finding identical cells in module `\few_satellites_count_1_sliding_window_entity'.
<suppressed ~9 debug messages>
Finding identical cells in module `\few_satellites_output_stream_entity'.
Finding identical cells in module `\gps_emitted_enough_output_stream_entity'.
Finding identical cells in module `\gps_x_count_0_sliding_window_entity'.
<suppressed ~12 debug messages>
Finding identical cells in module `\gps_x_input_stream_entity'.
Finding identical cells in module `\high_level_controller'.
Finding identical cells in module `\hlqinterface'.
Finding identical cells in module `\implementation'.
Finding identical cells in module `\imu_acc_x_input_stream_entity'.
Finding identical cells in module `\input_pre_processing'.
Finding identical cells in module `\is_unreliable_gps_data_output_stream_entity'.
<suppressed ~3 debug messages>
Finding identical cells in module `\low_level_controller'.
Finding identical cells in module `\monitor'.
Finding identical cells in module `\num_satellites_input_stream_entity'.
Finding identical cells in module `\queue'.
<suppressed ~18 debug messages>
Finding identical cells in module `\scheduler'.
<suppressed ~9 debug messages>
Finding identical cells in module `\time_unit'.
Removed a total of 17 cells.

2.23.3. Executing OPT_DFF pass (perform DFF optimizations).

2.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \check_new_input..
Finding unused cells or wires in module \clock_pre_processing..
Finding unused cells or wires in module \evaluator..
Finding unused cells or wires in module \event_delay..
Finding unused cells or wires in module \extinterface..
Finding unused cells or wires in module \few_satellites_count_1_sliding_window_entity..
Finding unused cells or wires in module \few_satellites_output_stream_entity..
Finding unused cells or wires in module \gps_emitted_enough_output_stream_entity..
Finding unused cells or wires in module \gps_x_count_0_sliding_window_entity..
Finding unused cells or wires in module \gps_x_input_stream_entity..
Finding unused cells or wires in module \high_level_controller..
Finding unused cells or wires in module \hlqinterface..
Finding unused cells or wires in module \implementation..
Finding unused cells or wires in module \imu_acc_x_input_stream_entity..
Finding unused cells or wires in module \input_pre_processing..
Finding unused cells or wires in module \is_unreliable_gps_data_output_stream_entity..
Finding unused cells or wires in module \low_level_controller..
Finding unused cells or wires in module \monitor..
Finding unused cells or wires in module \num_satellites_input_stream_entity..
Finding unused cells or wires in module \queue..
Finding unused cells or wires in module \scheduler..
Finding unused cells or wires in module \time_unit..
Removed 3 unused cells and 4579 unused wires.
<suppressed ~21 debug messages>

2.23.5. Finished fast OPT passes.

2.24. Executing HIERARCHY pass (managing design hierarchy).

2.24.1. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \clock_pre_processing
Used module:     \input_pre_processing
Used module:     \monitor
Used module:         \high_level_controller
Used module:             \check_new_input
Used module:             \event_delay
Used module:             \extinterface
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \few_satellites_count_1_sliding_window_entity
Used module:                 \few_satellites_output_stream_entity
Used module:                 \gps_emitted_enough_output_stream_entity
Used module:                 \gps_x_count_0_sliding_window_entity
Used module:                 \gps_x_input_stream_entity
Used module:                 \imu_acc_x_input_stream_entity
Used module:                 \is_unreliable_gps_data_output_stream_entity
Used module:                 \num_satellites_input_stream_entity
Used module:         \queue

2.24.2. Analyzing design hierarchy..
Top module:  \implementation
Used module:     \clock_pre_processing
Used module:     \input_pre_processing
Used module:     \monitor
Used module:         \high_level_controller
Used module:             \check_new_input
Used module:             \event_delay
Used module:             \extinterface
Used module:             \hlqinterface
Used module:             \scheduler
Used module:             \time_unit
Used module:         \low_level_controller
Used module:             \evaluator
Used module:                 \few_satellites_count_1_sliding_window_entity
Used module:                 \few_satellites_output_stream_entity
Used module:                 \gps_emitted_enough_output_stream_entity
Used module:                 \gps_x_count_0_sliding_window_entity
Used module:                 \gps_x_input_stream_entity
Used module:                 \imu_acc_x_input_stream_entity
Used module:                 \is_unreliable_gps_data_output_stream_entity
Used module:                 \num_satellites_input_stream_entity
Used module:         \queue
Removed 0 unused modules.

2.25. Printing statistics.

=== check_new_input ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ANDNOT_                       1
     $_DFF_PP0_                      2

=== clock_pre_processing ===

   Number of wires:                324
   Number of wire bits:            386
   Number of public wires:          10
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                381
     $_ANDNOT_                      81
     $_AND_                          1
     $_DFFE_PP0N_                   60
     $_DFFE_PP0P_                    2
     $_DFFE_PP1N_                    4
     $_DFF_PP0_                      1
     $_MUX_                          2
     $_NAND_                        40
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                       25
     $_OR_                          96
     $_XNOR_                        13
     $_XOR_                         48

=== evaluator ===

   Number of wires:                153
   Number of wire bits:            972
   Number of public wires:          92
   Number of public wire bits:     848
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $_ANDNOT_                      31
     $_AND_                          7
     $_DFFE_PP0N_                    7
     $_DFFE_PP0P_                    8
     $_DFFE_PP1P_                    1
     $_DFF_PP1_                      1
     $_NAND_                         7
     $_ORNOT_                        5
     $_OR_                           8
     few_satellites_count_1_sliding_window_entity      1
     few_satellites_output_stream_entity      1
     gps_emitted_enough_output_stream_entity      1
     gps_x_count_0_sliding_window_entity      1
     gps_x_input_stream_entity       1
     imu_acc_x_input_stream_entity      1
     is_unreliable_gps_data_output_stream_entity      1
     num_satellites_input_stream_entity      1

=== event_delay ===

   Number of wires:                285
   Number of wire bits:           1041
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                519
     $_AND_                        259
     $_DFF_PP0_                    260

=== extinterface ===

   Number of wires:                 23
   Number of wire bits:            779
   Number of public wires:          23
   Number of public wire bits:     779
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                259
     $_DFF_PP0_                    259

=== few_satellites_count_1_sliding_window_entity ===

   Number of wires:               2098
   Number of wire bits:           2966
   Number of public wires:          19
   Number of public wire bits:     590
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2635
     $_ANDNOT_                     791
     $_AND_                         23
     $_DFFE_PP0P_                  442
     $_MUX_                          1
     $_NAND_                       147
     $_NOR_                        104
     $_NOT_                         14
     $_ORNOT_                       66
     $_OR_                         368
     $_XNOR_                       290
     $_XOR_                        389

=== few_satellites_output_stream_entity ===

   Number of wires:                153
   Number of wire bits:            216
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $_ANDNOT_                      15
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                    2
     $_MUX_                          1
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                         115

=== gps_emitted_enough_output_stream_entity ===

   Number of wires:                 96
   Number of wire bits:            159
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $_ANDNOT_                      12
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         2
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          60

=== gps_x_count_0_sliding_window_entity ===

   Number of wires:               1468
   Number of wire bits:           2271
   Number of public wires:          19
   Number of public wire bits:     525
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1877
     $_ANDNOT_                     538
     $_AND_                         25
     $_DFFE_PP0P_                  314
     $_MUX_                          1
     $_NAND_                       146
     $_NOR_                         97
     $_NOT_                         13
     $_ORNOT_                       69
     $_OR_                         249
     $_XNOR_                       175
     $_XOR_                        250

=== gps_x_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== high_level_controller ===

   Number of wires:                 76
   Number of wire bits:           2032
   Number of public wires:          72
   Number of public wire bits:    1963
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_AND_                          1
     $_DFF_PP0_                      3
     $_NOT_                          1
     $_XOR_                          1
     check_new_input                 1
     event_delay                     1
     extinterface                    1
     hlqinterface                    1
     scheduler                       1
     time_unit                       1

=== hlqinterface ===

   Number of wires:                116
   Number of wire bits:            938
   Number of public wires:          37
   Number of public wire bits:     857
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                342
     $_ANDNOT_                       4
     $_DFFE_PP0P_                  256
     $_DFF_PP0_                      7
     $_MUX_                         64
     $_NAND_                         1
     $_NOT_                          2
     $_ORNOT_                        6
     $_OR_                           1
     $_XOR_                          1

=== implementation ===

   Number of wires:                 49
   Number of wire bits:           1309
   Number of public wires:          49
   Number of public wire bits:    1309
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1

=== imu_acc_x_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== input_pre_processing ===

   Number of wires:                 26
   Number of wire bits:            782
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $_DFF_PP0_                    260

=== is_unreliable_gps_data_output_stream_entity ===

   Number of wires:                 90
   Number of wire bits:            153
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 80
     $_ANDNOT_                      12
     $_AND_                          1
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                    2
     $_MUX_                          1
     $_NOR_                          3
     $_NOT_                          2
     $_ORNOT_                        1
     $_OR_                          56

=== low_level_controller ===

   Number of wires:                 50
   Number of wire bits:            304
   Number of public wires:          27
   Number of public wire bits:     281
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $_ANDNOT_                       6
     $_AND_                          2
     $_DFFE_PP0P_                    2
     $_DFF_PP0_                      2
     $_DFF_PP1_                      1
     $_NAND_                         1
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                          11
     evaluator                       1

=== monitor ===

   Number of wires:                 85
   Number of wire bits:           1849
   Number of public wires:          84
   Number of public wire bits:    1848
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                262
     $_DFF_NP0_                    259
     high_level_controller           1
     low_level_controller            1
     queue                           1

=== num_satellites_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== queue ===

   Number of wires:                643
   Number of wire bits:           1944
   Number of public wires:          52
   Number of public wire bits:    1353
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1414
     $_ANDNOT_                      79
     $_AND_                         14
     $_DFFE_PP0P_                  822
     $_DFF_PP0_                      1
     $_MUX_                        293
     $_NAND_                        19
     $_NOR_                         36
     $_NOT_                          6
     $_ORNOT_                       17
     $_OR_                          65
     $_XOR_                         62

=== scheduler ===

   Number of wires:                424
   Number of wire bits:            847
   Number of public wires:           9
   Number of public wire bits:     324
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                579
     $_ANDNOT_                     183
     $_AND_                         13
     $_DFFE_PP0P_                   97
     $_DFFE_PP1P_                   13
     $_DFF_PP0_                      1
     $_NAND_                        23
     $_NOR_                          4
     $_NOT_                          4
     $_ORNOT_                       60
     $_OR_                          72
     $_XNOR_                        42
     $_XOR_                         67

=== time_unit ===

   Number of wires:                122
   Number of wire bits:            368
   Number of public wires:           4
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                238
     $_ANDNOT_                      33
     $_AND_                          5
     $_DFF_PP0_                     61
     $_NAND_                        29
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                          43
     $_XNOR_                        21
     $_XOR_                         39

=== design hierarchy ===

   implementation                    1
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1
       high_level_controller         1
         check_new_input             1
         event_delay                 1
         extinterface                1
         hlqinterface                1
         scheduler                   1
         time_unit                   1
       low_level_controller          1
         evaluator                   1
           few_satellites_count_1_sliding_window_entity      1
           few_satellites_output_stream_entity      1
           gps_emitted_enough_output_stream_entity      1
           gps_x_count_0_sliding_window_entity      1
           gps_x_input_stream_entity      1
           imu_acc_x_input_stream_entity      1
           is_unreliable_gps_data_output_stream_entity      1
           num_satellites_input_stream_entity      1
       queue                         1

   Number of wires:               6324
   Number of wire bits:          19926
   Number of public wires:         627
   Number of public wire bits:   13277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               9387
     $_ANDNOT_                    1789
     $_AND_                        351
     $_DFFE_PP0N_                   71
     $_DFFE_PP0P_                 2149
     $_DFFE_PP1N_                    4
     $_DFFE_PP1P_                   14
     $_DFF_NP0_                    259
     $_DFF_PP0_                    857
     $_DFF_PP1_                      2
     $_MUX_                        364
     $_NAND_                       418
     $_NOR_                        259
     $_NOT_                         49
     $_ORNOT_                      259
     $_OR_                        1144
     $_XNOR_                       541
     $_XOR_                        857

2.26. Executing CHECK pass (checking for obvious problems).
Checking module check_new_input...
Checking module clock_pre_processing...
Checking module evaluator...
Checking module event_delay...
Checking module extinterface...
Checking module few_satellites_count_1_sliding_window_entity...
Checking module few_satellites_output_stream_entity...
Checking module gps_emitted_enough_output_stream_entity...
Checking module gps_x_count_0_sliding_window_entity...
Checking module gps_x_input_stream_entity...
Checking module high_level_controller...
Checking module hlqinterface...
Checking module implementation...
Checking module imu_acc_x_input_stream_entity...
Checking module input_pre_processing...
Checking module is_unreliable_gps_data_output_stream_entity...
Checking module low_level_controller...
Checking module monitor...
Checking module num_satellites_input_stream_entity...
Checking module queue...
Checking module scheduler...
Checking module time_unit...
Found and reported 0 problems.

3. Printing statistics.

=== check_new_input ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ANDNOT_                       1
     $_DFF_PP0_                      2

=== clock_pre_processing ===

   Number of wires:                324
   Number of wire bits:            386
   Number of public wires:          10
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                381
     $_ANDNOT_                      81
     $_AND_                          1
     $_DFFE_PP0N_                   60
     $_DFFE_PP0P_                    2
     $_DFFE_PP1N_                    4
     $_DFF_PP0_                      1
     $_MUX_                          2
     $_NAND_                        40
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                       25
     $_OR_                          96
     $_XNOR_                        13
     $_XOR_                         48

=== evaluator ===

   Number of wires:                153
   Number of wire bits:            972
   Number of public wires:          92
   Number of public wire bits:     848
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $_ANDNOT_                      31
     $_AND_                          7
     $_DFFE_PP0N_                    7
     $_DFFE_PP0P_                    8
     $_DFFE_PP1P_                    1
     $_DFF_PP1_                      1
     $_NAND_                         7
     $_ORNOT_                        5
     $_OR_                           8
     few_satellites_count_1_sliding_window_entity      1
     few_satellites_output_stream_entity      1
     gps_emitted_enough_output_stream_entity      1
     gps_x_count_0_sliding_window_entity      1
     gps_x_input_stream_entity       1
     imu_acc_x_input_stream_entity      1
     is_unreliable_gps_data_output_stream_entity      1
     num_satellites_input_stream_entity      1

=== event_delay ===

   Number of wires:                285
   Number of wire bits:           1041
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                519
     $_AND_                        259
     $_DFF_PP0_                    260

=== extinterface ===

   Number of wires:                 23
   Number of wire bits:            779
   Number of public wires:          23
   Number of public wire bits:     779
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                259
     $_DFF_PP0_                    259

=== few_satellites_count_1_sliding_window_entity ===

   Number of wires:               2098
   Number of wire bits:           2966
   Number of public wires:          19
   Number of public wire bits:     590
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2635
     $_ANDNOT_                     791
     $_AND_                         23
     $_DFFE_PP0P_                  442
     $_MUX_                          1
     $_NAND_                       147
     $_NOR_                        104
     $_NOT_                         14
     $_ORNOT_                       66
     $_OR_                         368
     $_XNOR_                       290
     $_XOR_                        389

=== few_satellites_output_stream_entity ===

   Number of wires:                153
   Number of wire bits:            216
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $_ANDNOT_                      15
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                    2
     $_MUX_                          1
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                         115

=== gps_emitted_enough_output_stream_entity ===

   Number of wires:                 96
   Number of wire bits:            159
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $_ANDNOT_                      12
     $_DFFE_PP0P_                    4
     $_MUX_                          1
     $_NAND_                         2
     $_NOR_                          4
     $_NOT_                          1
     $_ORNOT_                        2
     $_OR_                          60

=== gps_x_count_0_sliding_window_entity ===

   Number of wires:               1468
   Number of wire bits:           2271
   Number of public wires:          19
   Number of public wire bits:     525
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1877
     $_ANDNOT_                     538
     $_AND_                         25
     $_DFFE_PP0P_                  314
     $_MUX_                          1
     $_NAND_                       146
     $_NOR_                         97
     $_NOT_                         13
     $_ORNOT_                       69
     $_OR_                         249
     $_XNOR_                       175
     $_XOR_                        250

=== gps_x_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== high_level_controller ===

   Number of wires:                 76
   Number of wire bits:           2032
   Number of public wires:          72
   Number of public wire bits:    1963
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_AND_                          1
     $_DFF_PP0_                      3
     $_NOT_                          1
     $_XOR_                          1
     check_new_input                 1
     event_delay                     1
     extinterface                    1
     hlqinterface                    1
     scheduler                       1
     time_unit                       1

=== hlqinterface ===

   Number of wires:                116
   Number of wire bits:            938
   Number of public wires:          37
   Number of public wire bits:     857
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                342
     $_ANDNOT_                       4
     $_DFFE_PP0P_                  256
     $_DFF_PP0_                      7
     $_MUX_                         64
     $_NAND_                         1
     $_NOT_                          2
     $_ORNOT_                        6
     $_OR_                           1
     $_XOR_                          1

=== implementation ===

   Number of wires:                 49
   Number of wire bits:           1309
   Number of public wires:          49
   Number of public wire bits:    1309
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1

=== imu_acc_x_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== input_pre_processing ===

   Number of wires:                 26
   Number of wire bits:            782
   Number of public wires:          26
   Number of public wire bits:     782
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                260
     $_DFF_PP0_                    260

=== is_unreliable_gps_data_output_stream_entity ===

   Number of wires:                 90
   Number of wire bits:            153
   Number of public wires:          14
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 80
     $_ANDNOT_                      12
     $_AND_                          1
     $_DFFE_PP0N_                    2
     $_DFFE_PP0P_                    2
     $_MUX_                          1
     $_NOR_                          3
     $_NOT_                          2
     $_ORNOT_                        1
     $_OR_                          56

=== low_level_controller ===

   Number of wires:                 50
   Number of wire bits:            304
   Number of public wires:          27
   Number of public wire bits:     281
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $_ANDNOT_                       6
     $_AND_                          2
     $_DFFE_PP0P_                    2
     $_DFF_PP0_                      2
     $_DFF_PP1_                      1
     $_NAND_                         1
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                          11
     evaluator                       1

=== monitor ===

   Number of wires:                 85
   Number of wire bits:           1849
   Number of public wires:          84
   Number of public wire bits:    1848
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                262
     $_DFF_NP0_                    259
     high_level_controller           1
     low_level_controller            1
     queue                           1

=== num_satellites_input_stream_entity ===

   Number of wires:                 12
   Number of wire bits:            201
   Number of public wires:          10
   Number of public wire bits:     199
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 68
     $_ANDNOT_                       1
     $_DFFE_PP0P_                   66
     $_NAND_                         1

=== queue ===

   Number of wires:                643
   Number of wire bits:           1944
   Number of public wires:          52
   Number of public wire bits:    1353
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1414
     $_ANDNOT_                      79
     $_AND_                         14
     $_DFFE_PP0P_                  822
     $_DFF_PP0_                      1
     $_MUX_                        293
     $_NAND_                        19
     $_NOR_                         36
     $_NOT_                          6
     $_ORNOT_                       17
     $_OR_                          65
     $_XOR_                         62

=== scheduler ===

   Number of wires:                424
   Number of wire bits:            847
   Number of public wires:           9
   Number of public wire bits:     324
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                579
     $_ANDNOT_                     183
     $_AND_                         13
     $_DFFE_PP0P_                   97
     $_DFFE_PP1P_                   13
     $_DFF_PP0_                      1
     $_NAND_                        23
     $_NOR_                          4
     $_NOT_                          4
     $_ORNOT_                       60
     $_OR_                          72
     $_XNOR_                        42
     $_XOR_                         67

=== time_unit ===

   Number of wires:                122
   Number of wire bits:            368
   Number of public wires:           4
   Number of public wire bits:     130
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                238
     $_ANDNOT_                      33
     $_AND_                          5
     $_DFF_PP0_                     61
     $_NAND_                        29
     $_NOR_                          2
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                          43
     $_XNOR_                        21
     $_XOR_                         39

=== design hierarchy ===

   implementation                    1
     clock_pre_processing            1
     input_pre_processing            1
     monitor                         1
       high_level_controller         1
         check_new_input             1
         event_delay                 1
         extinterface                1
         hlqinterface                1
         scheduler                   1
         time_unit                   1
       low_level_controller          1
         evaluator                   1
           few_satellites_count_1_sliding_window_entity      1
           few_satellites_output_stream_entity      1
           gps_emitted_enough_output_stream_entity      1
           gps_x_count_0_sliding_window_entity      1
           gps_x_input_stream_entity      1
           imu_acc_x_input_stream_entity      1
           is_unreliable_gps_data_output_stream_entity      1
           num_satellites_input_stream_entity      1
       queue                         1

   Number of wires:               6324
   Number of wire bits:          19926
   Number of public wires:         627
   Number of public wire bits:   13277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               9387
     $_ANDNOT_                    1789
     $_AND_                        351
     $_DFFE_PP0N_                   71
     $_DFFE_PP0P_                 2149
     $_DFFE_PP1N_                    4
     $_DFFE_PP1P_                   14
     $_DFF_NP0_                    259
     $_DFF_PP0_                    857
     $_DFF_PP1_                      2
     $_MUX_                        364
     $_NAND_                       418
     $_NOR_                        259
     $_NOT_                         49
     $_ORNOT_                      259
     $_OR_                        1144
     $_XNOR_                       541
     $_XOR_                        857

End of script. Logfile hash: ccb5a54573, CPU: user 5.44s system 0.17s, MEM: 72.61 MB peak
Yosys 0.36+42 (git sha1 70d35314d, clang 11.0.1-2 -fPIC -Os)
Time spent: 23% 1x abc (1 sec), 17% 33x opt_expr (1 sec), ...
