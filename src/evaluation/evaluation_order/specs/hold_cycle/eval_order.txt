input x: Int
input y: Int

output out0 := in0 + 1
output out1 @1kHz := in1.hold(or: 1) + out3.hold(or: 2)
output out2 @2kHz := out1.hold(or: 10) + out0.hold(or: 11)
output out3 @(in0 & y) := out2.hold(or: 0) + 1

output out4 @1kHz := out4.offset(by: -1).defaults(to: 0) + 1
output out5 := out4 + 1
output out6 := out5 + 1 --------------------------------------------------

Event-based:
0: in0, in1
1: out0, out3
2: 
3: 

Periodic:
0: 
1: out1, out4
2: out2, out5
3: out6

type, evaluation_layer, name
------------------------------
in0, 0, x
in1, 0, y

type, periodic/event-based, evalution_layer, name
------------------------------
out0, event-based, 1, a
out1, periodic, 1, b
out2, periodic, 2, c
out3, event-based, 1, d
out4, periodic, 1, e
out5, periodic, 2, f
out6, periodic, 3, g

Sliding windows

Toal number of sliding window buckets: 0
